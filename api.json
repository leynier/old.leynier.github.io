{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Unity Cloud Build",
    "description": "This API is intended to be used in conjunction with the Unity Cloud Build\nservice. A tool for building your Unity projects in the Cloud.\n\nSee https://developer.cloud.unity3d.com for more information.\n\n## Making requests\nThis website is built to allow requests to be made against the API. If you are\ncurrently logged into Cloud Build you should be able to make requests without\nentering an API key.\n\n\nYou can find your API key in the Unity Cloud Services portal by clicking on\n'Cloud Build Preferences' in the sidebar. Copy the API Key and paste it into the\nupper left corner of this website. It will be used in all subsequent requests.\n\n## Clients\nThe Unity Cloud Build API is based upon Swagger. Client libraries to integrate with\nyour projects can easily be generated with the\n[Swagger Code Generator](https://github.com/swagger-api/swagger-codegen).\n\nThe JSON schema required to generate a client for this API version is located here:\n\n```\n[API_URL][BASE_PATH]/api.json\n```\n\n## Authorization\nThe Unity Cloud Build API requires an access token from your Unity Cloud\nBuild account, which can be found at https://build.cloud.unity3d.com/login/me\n\nTo authenticate requests, include a Basic Authentication header with\nyour API key as the value. e.g.\n\n```\nAuthorization: Basic [YOUR API KEY]\n```\n\n## Pagination\nPaged results will take two parameters. A page number that is calculated based\nupon the per_page amount. For instance if there are 40 results and you specify\npage 2 with per_page set to 10 you will receive records 11-20.\n\nPaged results will also return a Content-Range header. For the example above the\ncontent range header would look like this:\n\n```\nContent-Range: items 11-20/40\n```\n\n## Versioning\nThe API version is indicated in the request URL. Upgrading to a newer API\nversion can be done by changing the path.\n\nThe API will receive a new version in the following cases:\n\n  * removal of a path or request type\n  * addition of a required field\n  * removal of a required field\n\nThe following changes are considered backwards compatible and will not trigger a new\nAPI version:\n\n  * addition of an endpoint or request type\n  * addition of an optional field\n  * removal of an optional field\n  * changes to the format of ids\n\n## Identifiers\nIt should not be assumed that any of the identifiers used in paths will be a perfect match\nfor your user-entered information. If you see unexpected 403s or 404s from API calls then check your\nidentifiers match the ones used by the API. In particular, `projectId` does NOT typically\nchange when the project is renamed and in fact may not be a direct match for the project name even\nat initial creation time.\n\nTo avoid confusion we recommend that instead of using the human-readable autogenerated orgId and\nprojectId available from the API you should instead use:\n  * org foreign key for `orgId` (available from project APIs as `orgFk` and org APIs as `coreForeignKey`)\n  * `guid` for `projectId`\n\nAll links generated by the API and the Dashboard should follow this format already, making it easy to\nfigure out the correct parameters by making a comparison.\n\n## Rate Limiting\nRequests against the Cloud Build API are limited to a rate of 100 per minute. To preserve\nthe quality of service throughout Cloud Build, additional rate limits may apply to some\nactions. For example, polling aggressively instead of using webhooks or making API calls\nwith a high concurrency may result in rate limiting.\n\nIt is not intended for these rate limits to interfere with any legitimate use of the API.\nPlease contact support at <cloudbuild@unity3d.com> if your use is affected by this rate limit.\n\nYou can check the returned HTTP headers for any API request to see your current rate limit status.\n  * __X-RateLimit-Limit:__ maximum number of requests per minute\n  * __X-RateLimit-Remaining:__ remaining number of requests in the current window\n  * __X-RateLimit-Reset:__ time at which the current window will reset (UTC epoch seconds)\n\nOnce you go over the rate limit you will receive an error response:\n```\nHTTP Status: 429\n{\n  \"error\": \"Rate limit exceeded, retry in XX seconds\"\n}\n```\n",
    "x-example": [
      {
        "language": "python",
        "code": "# initialize the API client\nconfiguration = Configuration();\nconfiguration.username = \"[YOUR API KEY]\";\nclient = CloudBuild.ApiClient(\"[API_URL][BASE_PATH]\")"
      }
    ]
  },
  "basePath": "/api/v1",
  "schemes": [
    "https"
  ],
  "produces": [
    "application/json",
    "text/plain",
    "text/html",
    "text/csv"
  ],
  "consumes": [
    "application/json"
  ],
  "tags": [
    {
      "name": "orgs",
      "description": "Organizations are managed at the Unity level. You can retrieve information\nabout any organization a user belongs to and the entitlements the\nsubscription grants."
    },
    {
      "name": "users",
      "description": "Users are managed at the Unity level. Users can be queried and Cloud Build\nspecific preferencs can be updated. Subscriptions for a given user can also\nbe upgraded and downgraded."
    },
    {
      "name": "projects",
      "description": "Projects are the basic organization element in Unity Cloud Build. Each\nproject can contain multiple build targets across a variety of platforms\nand source control branches."
    },
    {
      "name": "buildtargets",
      "description": "Build Targets are the configuration to build a project for a specific\nplatform and/or source control branch."
    },
    {
      "name": "builds",
      "description": "Builds contain the output of building a Build Target for a Project. They\ncontain metadata about the build itself as well as links to the build\nartifacts.\n\nFor certain operations, you can substitute \"_all\" for the buildtargetid\nto operate across all configured build targets."
    },
    {
      "name": "credentials",
      "description": "Credentials for signing build artifacts are stored at the organizational\nlevel. Individual projects then point at the organizational level credentials."
    },
    {
      "name": "shares",
      "description": "Sharing allows unprivileged retrieval of build details to facilitate installing\nbuilds.\n\nCreating and revoking shares is done with Build operations."
    },
    {
      "name": "userdevices",
      "description": "User devices are stored to make installation of builds easier by verifying\nthat devices are allowed in a provisioning profile."
    },
    {
      "name": "config",
      "description": "Global config values used throughout the API."
    },
    {
      "name": "public",
      "description": "General information about the Unity Cloud Build API and functionality for end-user consumption (not user or project specific)."
    },
    {
      "name": "status",
      "description": "Status messages used to inform users about the state of the service"
    },
    {
      "name": "webhooks",
      "description": "<div class=\"webhook-tag-desc\">\nWebhooks are events callbacks from Unity Cloud Build to user-defined HTTP endpoints.\nWhen an event triggers a callback, Cloud Build will send a POST request to the\nconfigured end point, with a payload that is relevant to the event type. The following table\ndescribes the available event types.\n<table>\n<tr><th>Event</th><th>Trigger Condition</th></tr>\n<tr><td>ProjectBuildQueued</td><td>When a build target is queued for building</td></tr>\n<tr><td>ProjectBuildStarted</td><td>When a build starts</td></tr>\n<tr><td>ProjectBuildRestarted</td><td>When an internal error occurs and the job is restarted</td></tr>\n<tr><td>ProjectBuildSuccess</td><td>When a build finishes successfully</td></tr>\n<tr><td>ProjectBuildFailure</td><td>When a build finishes with a failure condition</td></tr>\n<tr><td>ProjectBuildCanceled</td><td>When a build in progress is canceled</td></tr>\n</table>\n<h3>Headers</h3>\nEach hook delivery will contain these special headers:\n<table>\n<tr><th>Name</th><th>Description</th></tr>\n<tr><td>X-UnityCloudBuild-HookId</td><td>The record id of the hook</td></tr>\n<tr><td>X-UnityCloudBuild-Event</td><td>The name of the event that triggered this hook</td></tr>\n<tr><td>X-UnityCloudBuild-DeliveryId</td><td>A unique UUID that identifies this delivery instance</td></tr>\n<tr><td>X-UnityCloudBuild-Signature</td><td>The SHA256 HMAC signature of the payload When a <code>secret</code> is defined</td></tr>\n</table>\n</div>\n<h3>Example Web Hook Delivery</h3>\n<code class=\"webhook-sample-delivery\">Content-Length: 873\nX-Unitycloudbuild-Event: ProjectBuildQueued\nX-Unitycloudbuild-Hookid: 7\nX-Unitycloudbuild-Deliveryid: 81a4ab67-0176-4e4c-8ab2-bd0ab7d3cc70\nConnection: Keep-Alive\nContent-Type: application/json\n{\n    \"projectName\": \"My Project\",\n    \"buildTargetName\": \"Mac desktop 32-bit build\",\n    \"projectGuid\": \"0895432b-43a2-4fd3-85f0-822d8fb607ba\",\n    \"orgForeignKey\": \"13260\",\n    \"buildNumber\": 14,\n    \"buildStatus\": \"queued\",\n    \"startedBy\": \"Build User &lt;builduser@domain.com&gt;\",\n    \"platform\": \"standaloneosxintel\",\n    \"links\": {\n        \"api_self\": {\n            \"method\": \"get\",\n            \"href\": \"/api/orgs/my-org/projects/my-project/buildtargets/mac-desktop-32-bit-build/builds/14\"\n        },\n        \"dashboard_url\": {\n            \"method\": \"get\",\n            \"href\": \"https://build.cloud.unity3d.com\"\n        },\n        \"dashboard_project\": {\n            \"method\": \"get\",\n            \"href\": \"/build/orgs/stephenp/projects/assetbundle-demo-1\"\n        },\n        \"dashboard_summary\": {\n            \"method\": \"get\",\n            \"href\": \"/build/orgs/my-org/projects/my-project/buildtargets/mac-desktop-32-bit-build/builds/14/summary\"\n        },\n        \"dashboard_log\": {\n            \"method\": \"get\",\n            \"href\": \"/build/orgs/my-org/projects/my-project/buildtargets/mac-desktop-32-bit-build/builds/14/log\"\n        }\n    }\n}</code>"
    }
  ],
  "security": [
    {
      "apikey": []
    },
    {
      "filetoken": []
    }
  ],
  "securityDefinitions": {
    "apikey": {
      "type": "basic",
      "description": "API key in basic auth header."
    },
    "filetoken": {
      "type": "basic",
      "description": "Expiring file access token in query string."
    },
    "permissions": {
      "type": "oauth2",
      "description": "OAUTH NOT SUPPORTED - this is just for permission scopes",
      "flow": "implicit",
      "authorizationUrl": "https://build.cloud.unity3d.com/login/",
      "scopes": {
        "org:user": "must have at least user permissions in the organization",
        "org:manager": "must have at least manager permissions in the organization",
        "project:user": "must have at least user permissions in the project",
        "project:manager": "must have at least manager permissions in the project",
        "admin": "administrative privileges",
        "admin_readstats": "administrative read stats privileges"
      }
    }
  },
  "paths": {
    "/changelogs": {
      "get": {
        "tags": [
          "public"
        ],
        "x-swagger-router-controller": "changelogs",
        "operationId": "getChangeLogs",
        "summary": "Get the Unity Cloud Build changelogs",
        "description": "Retrieves all changelog lines\n",
        "x-security-unauthenticated": true,
        "parameters": [
          {
            "name": "typeLimit",
            "in": "query",
            "description": "Specific type of message used to limit the results",
            "required": false,
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Regex string to use to restrict the results via search",
            "required": false,
            "type": "string"
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of audit log records to retrieve",
            "required": false,
            "default": 25,
            "type": "number"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Skip to page number, based on per_page value",
            "required": false,
            "default": 1,
            "type": "number"
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Alternative to page, will fully define start index of results rather than calculating based on page/per_page values",
            "required": false,
            "default": 0,
            "type": "number"
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X GET\n  [API_URL][BASE_PATH]/changelog"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "application/json": "[{\"message\":\"Released Xcode 11.2.1\",\"logType\":\"xcode\",\"created\":\"2019-11-20T17:06:43.458Z\"},{\"message\":\"Unity 2019.3.0b11 is now available\",\"logType\":\"unity\",\"created\":\"2019-11-20T17:01:32.774Z\"}]"
            },
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "message",
                  "logType"
                ],
                "properties": {
                  "logType": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  },
                  "created": {
                    "type": "string",
                    "format": "dateTime"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/versions/unity": {
      "x-swagger-router-controller": "unityversions",
      "get": {
        "tags": [
          "config"
        ],
        "operationId": "listUnityVersions",
        "summary": "List all unity versions",
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/versions/unity"
          },
          {
            "language": "python",
            "code": "configApi = ConfigApi(client);\nversions = configApi.list_unity_versions()"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "application/json": "[\n  {\n    \"name\": \"Always Use Latest 5.2 ALPHA/BETA\",\n    \"value\": \"latest5AB\",\n    \"xcode_versions\": [\n      \"xcode5\",\n      \"xcode6\",\n      \"xcode7\",\n      \"latest\"\n    ],\n    \"hidden\": false\n  },\n  {\n    \"name\": \"Always Use Latest 5.x\",\n    \"value\": \"latest5\",\n    \"xcode_versions\": [\n      \"xcode5\",\n      \"xcode6\",\n      \"xcode7\",\n      \"latest\"\n    ],\n    \"hidden\": false\n  },\n  {\n    \"name\": \"Always Use Latest 4.x (Non Beta)\",\n    \"value\": \"latest\",\n    \"xcode_versions\": [\n      \"xcode5\",\n      \"xcode6\",\n      \"latest\"\n    ],\n    \"hidden\": false\n  },\n  {\n    \"name\": \"Unity 5.3.0a1\",\n    \"value\": \"5_3_0a1\",\n    \"xcode_versions\": [\n      \"xcode5\",\n      \"xcode6\",\n      \"xcode7\",\n      \"latest\"\n    ],\n    \"hidden\": false\n  },\n  {\n    \"name\": \"Unity 4.6.9\",\n    \"value\": \"4_6_9\",\n    \"xcode_versions\": [\n      \"xcode5\",\n      \"xcode6\",\n      \"latest\"\n    ],\n    \"hidden\": false,\n    \"deprecated\":true\n  }\n]"
            },
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "value": {
                    "type": "string"
                  },
                  "xcode_versions": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "hidden": {
                    "type": "boolean"
                  },
                  "deprecated": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/versions/unity/{key}": {
      "x-swagger-router-controller": "unityversions",
      "get": {
        "tags": [
          "config"
        ],
        "operationId": "getVersion",
        "summary": "Get a unity version by value",
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/versions/unity/{value}"
          },
          {
            "language": "python",
            "code": "configApi = ConfigApi(client);\nversions = configApi.get_version('{value}')"
          }
        ],
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "Unity Version key (e.g. 2019_2_0f1)",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "application/json": "{\n  \"name\": \"Always Use Latest 5.2 ALPHA/BETA\",\n  \"value\": \"latest5AB\",\n  \"xcode_versions\": [\n    \"xcode5\",\n    \"xcode6\",\n    \"xcode7\",\n    \"latest\"\n  ],\n  \"hidden\": false\n}"
            },
            "schema": {
              "properties": {
                "name": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                },
                "xcode_versions": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "hidden": {
                  "type": "boolean"
                },
                "deprecated": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/versions/xcode": {
      "x-swagger-router-controller": "xcodeversions",
      "get": {
        "tags": [
          "config"
        ],
        "operationId": "listXcodeVersions",
        "summary": "List all xcode versions",
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/versions/xcode"
          },
          {
            "language": "python",
            "code": "configApi = ConfigApi(client);\nversions = configApi.list_xcode_versions()"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "application/json": "[\n  {\n    \"name\": \"Xcode 10.2\",\n    \"value\": \"xcode10_2_0\",\n    \"hidden\": false\n  },\n  {\n    \"name\": \"Xcode 10.1\",\n    \"value\": \"xcode10_1_0\",\n    \"hidden\": false\n  },\n  {\n    \"name\": \"Xcode 9.3\",\n    \"value\": \"xcode9_3_0\",\n    \"hidden\": false\n  },\n  {\n    \"name\": \"Xcode 9.2\",\n    \"value\": \"xcode9_2_0\",\n    \"hidden\": true,\n    \"deprecated\":true\n  },\n  {\n    \"name\": \"Always Use Latest\",\n    \"value\": \"latest\",\n    \"hidden\": false\n  }\n]"
            },
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "value": {
                    "type": "string"
                  },
                  "hidden": {
                    "type": "boolean"
                  },
                  "deprecated": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/versions/auto_detect_supported_scms": {
      "x-swagger-router-controller": "unityversions",
      "get": {
        "tags": [
          "config"
        ],
        "operationId": "listScmsSupportingVersionAutoDetect",
        "summary": "List all SCM types supporting auto detecting the project Unity version",
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "application/json": "['oauth', 'collab', 'svn']"
            },
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/users/me": {
      "x-swagger-router-controller": "users",
      "get": {
        "tags": [
          "users"
        ],
        "operationId": "getUserSelf",
        "summary": "Get current user",
        "description": "Get the currently authenticated user.",
        "parameters": [
          {
            "name": "include",
            "in": "query",
            "description": "Extra fields to include in the response",
            "required": false,
            "type": "string"
          }
        ],
        "x-includequery-properties": [
          "permissions",
          "lastAcceptedEulaVersion",
          "orgs"
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/users/me"
          },
          {
            "language": "python",
            "code": "usersApi = UsersApi(client);\nuser = usersApi.get_user_self()"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "application/json": "{\n  \"email\": \"julie.smith@example.org\",\n  \"name\": \"juliesmith\",\n  \"unityid\": \"0000000\",\n  \"waiting\": false,\n  \"disableNotifications\": false,\n  \"apiKey\": \"<span class=\"replace-apikey\">[YOUR API KEY]</span>\",\n  \"primaryOrg\": \"example-org\",\n  \"links\": {\n    \"self\": {\n      \"method\": \"get\",\n      \"href\": \"[BASE_PATH]/users/me\"\n    }\n  }\n}"
            },
            "schema": {
              "properties": {
                "email": {
                  "description": "email address",
                  "type": "string"
                },
                "name": {
                  "description": "full name",
                  "type": "string"
                },
                "unityid": {
                  "description": "internal unity id that is shared across services",
                  "type": "string"
                },
                "waiting": {
                  "description": "when true the user is waiting to be approved for access to Cloud Build",
                  "type": "boolean"
                },
                "disableNotifications": {
                  "description": "when true build status email notifications will no longer be sent",
                  "type": "boolean"
                },
                "primaryOrg": {
                  "description": "primary organization the user belongs to",
                  "type": "string"
                },
                "links": {
                  "description": "links for retrieving more information about the user",
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "users"
        ],
        "operationId": "updateUserSelf",
        "summary": "Update current user",
        "description": "You can update a few fields on the current user. Each field is optional and you\ndo not need to specify all fields on update.",
        "parameters": [
          {
            "name": "options",
            "in": "body",
            "schema": {
              "properties": {
                "disableNotifications": {
                  "description": "when true build status email notifications will no longer be sent",
                  "type": "boolean"
                }
              }
            }
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n   -X PUT\n   -H \"Content-Type: application/json\"\n   -d '{\"disableNotifications\": true}'\n   [API_URL][BASE_PATH]/users/me'"
          },
          {
            "language": "python",
            "code": "usersApi = UsersApi(client);\nuser = usersApi.update_user_self(options={\"disableNotifications\": True})"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "application/json": "{\n  \"email\": \"julie.smith@example.org\",\n  \"name\": \"juliesmith\",\n  \"unityid\": \"0000000\",\n  \"waiting\": false,\n  \"disableNotifications\": false,\n  \"apiKey\": \"<span class=\"replace-apikey\">[YOUR API KEY]</span>\",\n  \"primaryOrg\": \"example-org\",\n  \"links\": {\n    \"self\": {\n      \"method\": \"get\",\n      \"href\": \"[BASE_PATH]/users/me\"\n    }\n  }\n}"
            },
            "schema": {
              "properties": {
                "email": {
                  "description": "email address",
                  "type": "string"
                },
                "name": {
                  "description": "full name",
                  "type": "string"
                },
                "unityid": {
                  "description": "internal unity id that is shared across services",
                  "type": "string"
                },
                "waiting": {
                  "description": "when true the user is waiting to be approved for access to Cloud Build",
                  "type": "boolean"
                },
                "disableNotifications": {
                  "description": "when true build status email notifications will no longer be sent",
                  "type": "boolean"
                },
                "primaryOrg": {
                  "description": "primary organization the user belongs to",
                  "type": "string"
                },
                "links": {
                  "description": "links for retrieving more information about the user",
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/users/me/apikey": {
      "x-swagger-router-controller": "users",
      "get": {
        "tags": [
          "users"
        ],
        "operationId": "getUserApiKey",
        "summary": "Get current user's API key",
        "description": "Get the currently authenticated user's API key.",
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/users/me/apiKey"
          },
          {
            "language": "python",
            "code": "usersApi = UsersApi(client);\nuser = usersApi.get_user_api_key()"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "application/json": "{\n  \"<span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n}"
            },
            "schema": {
              "properties": {
                "apiKey": {
                  "description": "API key",
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "users"
        ],
        "operationId": "regenApiKey",
        "summary": "Regenerate API Key",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "description": "Remove current API key and generate a new one. *WARNING* you will need to use the returned\nAPI key in all subsequent calls.",
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X POST\n  -H \"Content-Type: application/json\"\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/users/me/apikey"
          },
          {
            "language": "python",
            "code": "usersApi = UsersApi(client);\nnewApiKey = usersApi.regen_api_key();"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "application/json": "{\n  \"apiKey\": \"00000000000000000000000000000000\",\n}"
            },
            "schema": {
              "type": "object",
              "properties": {
                "apiKey": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/users/me/devices": {
      "x-swagger-router-controller": "userdevices",
      "get": {
        "tags": [
          "userdevices"
        ],
        "operationId": "listDevicesForUser",
        "summary": "List iOS device profiles",
        "description": "List all iOS device profiles for the current user",
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  -X GET\n  -H \"Content-Type: application/json\"\n  [API_URL][BASE_PATH]/users/me/devices"
          },
          {
            "language": "python",
            "code": "userdevicesApi = UserdevicesApi(client);\ndevices = userdevicesApi.list_devices_for_user();"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "application/json": "[\n  {\n    \"udid\": \"00000000000000000000000000000000000000000\",\n    \"devicename\": \"\",\n    \"os\": \"iOS\",\n    \"osversion\": \"12D508\",\n    \"product\": \"iPad3,3\",\n    \"status\": \"active\"\n  },\n  {\n    \"udid\": \"11111111111111111111111111111111111111111\",\n    \"devicename\": \"\",\n    \"os\": \"iOS\",\n    \"osversion\": \"12A405\",\n    \"product\": \"iPhone7,1\",\n    \"status\": \"active\"\n  }\n]"
            },
            "schema": {
              "type": "array",
              "items": {
                "required": [
                  "udid"
                ],
                "properties": {
                  "udid": {
                    "type": "string",
                    "maxLength": 40,
                    "minLength": 40
                  },
                  "devicename": {
                    "type": "string"
                  },
                  "os": {
                    "type": "string"
                  },
                  "osversion": {
                    "type": "string"
                  },
                  "product": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "disabled",
                      "active"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "userdevices"
        ],
        "operationId": "createDevice",
        "summary": "Create iOS device profile",
        "description": "Create iOS device profile for the current user",
        "parameters": [
          {
            "name": "options",
            "in": "body",
            "required": true,
            "schema": {
              "required": [
                "udid"
              ],
              "properties": {
                "udid": {
                  "type": "string",
                  "maxLength": 40,
                  "minLength": 40
                },
                "devicename": {
                  "type": "string"
                },
                "os": {
                  "type": "string"
                },
                "osversion": {
                  "type": "string"
                },
                "product": {
                  "type": "string"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "disabled",
                    "active"
                  ]
                }
              }
            }
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X POST\n  -d '{\"udid\":\"3333333333333333333333333333333333333333\", \"devicename\": \"Test Device\", \"os\": \"iOS\", \"osversion\": \"12D508\", \"product\": \"iPad3,3\", \"status\": \"active\" }'\n  -H \"Content-Type: application/json\"\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/users/me/apikey"
          },
          {
            "language": "python",
            "code": "userdevicesApi = UserdevicesApi(client);\ndevice = userdevicesApi.create_device(options={\"udid\":\"3333333333333333333333333333333333333333\", \"devicename\": \"Test Device\", \"os\": \"iOS\", \"osversion\": \"12D508\", \"product\": \"iPad3,3\", \"status\": \"active\" });"
          }
        ],
        "responses": {
          "201": {
            "description": "OK",
            "examples": {
              "application/json": "{\n  \"udid\": \"3333333333333333333333333333333333333333\",\n  \"devicename\": \"Test Device\",\n  \"os\": \"iOS\",\n  \"osversion\": \"12D508\",\n  \"product\": \"iPad3,3\",\n  \"status\": \"active\"\n}"
            },
            "schema": {
              "required": [
                "udid"
              ],
              "properties": {
                "udid": {
                  "type": "string",
                  "maxLength": 40,
                  "minLength": 40
                },
                "devicename": {
                  "type": "string"
                },
                "os": {
                  "type": "string"
                },
                "osversion": {
                  "type": "string"
                },
                "product": {
                  "type": "string"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "disabled",
                    "active"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "No Content",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/orgs/{orgid}/billingplan": {
      "x-swagger-router-controller": "orgs",
      "get": {
        "tags": [
          "orgs"
        ],
        "operationId": "getBillingPlans",
        "summary": "Get billing plan",
        "description": "Get the billing plan for the specified organization",
        "security": [
          {
            "permissions": [
              "org:user"
            ],
            "apikey": []
          }
        ],
        "parameters": [
          {
            "name": "orgid",
            "in": "path",
            "description": "Organization identifier",
            "required": true,
            "type": "string"
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X GET\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/orgs/{orgid}/billingplan"
          },
          {
            "language": "python",
            "code": "userdevicesApi = UserdevicesApi(client);\norgsApi.get_billing_plans('{orgid}')"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "application/json": "{\n  \"billing\": {\n    \"label\": \"Studio\",\n    \"numProjects\": 0,\n    \"concurrentBuilds\": 5,\n    \"cooldownMinutes\": 5,\n    \"cooldownGracePeriodMinutes\": 60,\n    \"collaborators\": 100000,\n    \"repoSizeLimitMB\": 5000,\n    \"repoSizeLimitThresholdMB\": 10,\n    \"downloadLimitMB\": 0,\n    \"buildManifest\": true,\n    \"libraryCaching\": true,\n    \"pushExternalServices\": true,\n    \"supportTickets\": true,\n    \"apiAccess\": true,\n    \"scheduledBuilds\": true,\n    \"workspaceCaching\": true,\n    \"advancedFeatures\": [\n      \"debug\",\n      \"custom_defines\",\n      \"pre_export\",\n      \"post_export\",\n      \"custom_scenes\",\n      \"post_build_script\"\n    ],\n    \"scmTypes\": [\n      \"git\",\n      \"svn\",\n      \"p4\",\n      \"hg\"\n    ]\n  },\n  \"effective\": {\n    \"label\": \"Studio\",\n    \"numProjects\": 0,\n    \"concurrentBuilds\": 5,\n    \"cooldownMinutes\": 5,\n    \"cooldownGracePeriodMinutes\": 60,\n    \"collaborators\": 100000,\n    \"repoSizeLimitMB\": 5000,\n    \"repoSizeLimitThresholdMB\": 10,\n    \"downloadLimitMB\": 0,\n    \"buildManifest\": true,\n    \"libraryCaching\": true,\n    \"pushExternalServices\": true,\n    \"supportTickets\": true,\n    \"apiAccess\": true,\n    \"scheduledBuilds\": true,\n    \"workspaceCaching\": true,\n    \"advancedFeatures\": [\n      \"debug\",\n      \"custom_defines\",\n      \"pre_export\",\n      \"post_export\",\n      \"custom_scenes\",\n      \"post_build_script\"\n    ],\n    \"scmTypes\": [\n      \"git\",\n      \"svn\",\n      \"p4\",\n      \"hg\"\n    ]\n  }\n}"
            },
            "schema": {
              "required": [
                "billing",
                "effective"
              ],
              "properties": {
                "billing": {
                  "description": "actual billing plan",
                  "properties": {
                    "label": {
                      "type": "string"
                    },
                    "numProjects": {
                      "type": "number"
                    },
                    "concurrentBuilds": {
                      "type": "number"
                    },
                    "cooldownMinutes": {
                      "type": "number"
                    },
                    "cooldownGracePeriodMinutes": {
                      "type": "number"
                    },
                    "collaborators": {
                      "type": "number"
                    },
                    "repoSizeLimitMB": {
                      "type": "number"
                    },
                    "repoSizeLimitThresholdMB": {
                      "type": "number"
                    },
                    "downloadLimitMB": {
                      "type": "number"
                    },
                    "buildManifest": {
                      "type": "boolean"
                    },
                    "libraryCaching": {
                      "type": "boolean"
                    },
                    "pushExternalServices": {
                      "type": "boolean"
                    },
                    "supportTickets": {
                      "type": "boolean"
                    },
                    "apiAccess": {
                      "type": "boolean"
                    },
                    "scheduledBuilds": {
                      "type": "boolean"
                    },
                    "workspaceCaching": {
                      "type": "boolean"
                    },
                    "buildingDisabled": {
                      "type": "boolean"
                    },
                    "advancedFeatures": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "scmTypes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "effective": {
                  "description": "effective billing plan, this includes temporary overrides and specials",
                  "properties": {
                    "label": {
                      "type": "string"
                    },
                    "numProjects": {
                      "type": "number"
                    },
                    "concurrentBuilds": {
                      "type": "number"
                    },
                    "cooldownMinutes": {
                      "type": "number"
                    },
                    "cooldownGracePeriodMinutes": {
                      "type": "number"
                    },
                    "collaborators": {
                      "type": "number"
                    },
                    "repoSizeLimitMB": {
                      "type": "number"
                    },
                    "repoSizeLimitThresholdMB": {
                      "type": "number"
                    },
                    "downloadLimitMB": {
                      "type": "number"
                    },
                    "buildManifest": {
                      "type": "boolean"
                    },
                    "libraryCaching": {
                      "type": "boolean"
                    },
                    "pushExternalServices": {
                      "type": "boolean"
                    },
                    "supportTickets": {
                      "type": "boolean"
                    },
                    "apiAccess": {
                      "type": "boolean"
                    },
                    "scheduledBuilds": {
                      "type": "boolean"
                    },
                    "workspaceCaching": {
                      "type": "boolean"
                    },
                    "buildingDisabled": {
                      "type": "boolean"
                    },
                    "advancedFeatures": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "scmTypes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/orgs/{orgid}/hooks": {
      "x-swagger-router-controller": "hooks",
      "get": {
        "tags": [
          "webhooks"
        ],
        "operationId": "listHooksForOrg",
        "summary": "List hooks for organization",
        "description": "List all hooks configured for the specified organization",
        "security": [
          {
            "permissions": [
              "org:user"
            ],
            "apikey": []
          }
        ],
        "parameters": [
          {
            "name": "orgid",
            "in": "path",
            "description": "Organization identifier",
            "required": true,
            "type": "string"
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X GET\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/orgs/{orgid}/hooks"
          },
          {
            "language": "python",
            "code": "hooksApi = WebhooksApi(client);\nhooksApi.list_hooks_for_org('{orgid}')"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "application/json": "[\n  {\n    \"hookType\": \"web\",\n    \"events\": [\n      \"ProjectBuildSuccess\",\n      \"ProjectBuildFailure\"\n    ],\n    \"config\": {\n      \"encoding\": \"json\",\n      \"sslVerify\": true,\n      \"url\": \"http://unity3d.com/example\"\n    },\n    \"active\": true,\n    \"id\": 7\n  },\n  {\n    \"hookType\": \"web\",\n    \"events\": [\n      \"ProjectBuildQueued\",\n      \"ProjectBuildStarted\",\n      \"ProjectBuildRestarted\",\n      \"ProjectBuildSuccess\",\n      \"ProjectBuildFailure\"\n    ],\n    \"config\": {\n      \"url\": \"http://unity3d.com/example2\"\n    },\n    \"active\": true,\n    \"id\": 8\n  }\n]"
            },
            "schema": {
              "type": "array",
              "items": {
                "required": [
                  "hookType",
                  "config"
                ],
                "properties": {
                  "hookType": {
                    "enum": [
                      "web",
                      "slack"
                    ],
                    "type": "string"
                  },
                  "events": {
                    "type": "array",
                    "items": {
                      "enum": [
                        "ProjectBuildQueued",
                        "ProjectBuildStarted",
                        "ProjectBuildRestarted",
                        "ProjectBuildSuccess",
                        "ProjectBuildFailure",
                        "ProjectBuildCanceled",
                        "ProjectBuildUpload"
                      ],
                      "type": "string"
                    }
                  },
                  "config": {
                    "type": "object"
                  },
                  "active": {
                    "type": "boolean",
                    "default": true
                  },
                  "id": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "webhooks"
        ],
        "operationId": "addHookForOrg",
        "summary": "Add hook for organization",
        "description": "Adds a new organization level hook. An organization level hook is triggered by events from all projects\nbelonging to the organziation. NOTE: you must be a manager in the organization to add new hooks.\n<h4>Hook Type Configuration Parameters</h4>\n<div class=\"webhook-tag-desc\">\n<table>\n<tr><th>Type</th><th>Configuration Options</th></tr>\n<tr>\n   <td><code>web</code>\n   <td>\n      <table>\n         <tr><th>url</th><td>Endpoint to submit POST request</td></tr>\n         <tr><th>encoding</th><td>Either <code>json</code> (default) or <code>form</code></td></tr>\n         <tr><th>sslVerify</th><td>Verify SSL certificates of HTTPS endpoint</td></tr>\n         <tr><th>secret</th><td>Used to compute the SHA256 HMAC signature of the hook body and adds\n         a <code>X-UnityCloudBuild-Signature</code> header to the payload</td></tr>\n      </table>\n   </td>\n</tr>\n<tr>\n   <td><code>slack</code>\n   <td>\n      <table>\n         <tr><th>url</th><td>Slack incoming webhook URL. Learn more at https://api.slack.com/incoming-webhooks</td></tr>\n      </table>\n   </td>\n</tr>\n</table>\n</div>\n",
        "security": [
          {
            "permissions": [
              "org:manager"
            ],
            "apikey": []
          }
        ],
        "parameters": [
          {
            "name": "orgid",
            "in": "path",
            "description": "Organization identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "options",
            "in": "body",
            "schema": {
              "required": [
                "hookType",
                "config"
              ],
              "properties": {
                "hookType": {
                  "enum": [
                    "web",
                    "slack"
                  ],
                  "type": "string"
                },
                "events": {
                  "type": "array",
                  "items": {
                    "enum": [
                      "ProjectBuildQueued",
                      "ProjectBuildStarted",
                      "ProjectBuildRestarted",
                      "ProjectBuildSuccess",
                      "ProjectBuildFailure",
                      "ProjectBuildCanceled",
                      "ProjectBuildUpload"
                    ],
                    "type": "string"
                  }
                },
                "config": {
                  "type": "object"
                },
                "active": {
                  "type": "boolean",
                  "default": true
                }
              }
            }
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X POST\n  -H \"Content-Type: application/json\"\n  -d '{\"hookType\":\"web\",\"events\":[\"ProjectBuildSuccess\",\"ProjectBuildFailure\"],\"config\":{\"url\":\"http://unity3d.com/example\"}}'\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/orgs/{orgid}/hooks"
          },
          {
            "language": "python",
            "code": "hooksApi = HooksApi(client)\nhook = hooksApi.add_hook_for_org('{orgid}', config)"
          }
        ],
        "responses": {
          "201": {
            "description": "OK",
            "examples": {
              "application/json": "{\n  \"hookType\": \"web\",\n  \"events\": [\n    \"ProjectBuildQueued\",\n    \"ProjectBuildStarted\",\n    \"ProjectBuildRestarted\",\n    \"ProjectBuildSuccess\",\n    \"ProjectBuildFailure\"\n  ],\n  \"config\": {\n    \"url\": \"http://unity3d.com/example\"\n  },\n  \"active\": true,\n  \"id\": 8\n}"
            },
            "schema": {
              "required": [
                "hookType",
                "config"
              ],
              "properties": {
                "hookType": {
                  "enum": [
                    "web",
                    "slack"
                  ],
                  "type": "string"
                },
                "events": {
                  "type": "array",
                  "items": {
                    "enum": [
                      "ProjectBuildQueued",
                      "ProjectBuildStarted",
                      "ProjectBuildRestarted",
                      "ProjectBuildSuccess",
                      "ProjectBuildFailure",
                      "ProjectBuildCanceled",
                      "ProjectBuildUpload"
                    ],
                    "type": "string"
                  }
                },
                "config": {
                  "type": "object"
                },
                "active": {
                  "type": "boolean",
                  "default": true
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/orgs/{orgid}/hooks/{id}": {
      "x-swagger-router-controller": "hooks",
      "get": {
        "tags": [
          "webhooks"
        ],
        "operationId": "getHookForOrg",
        "summary": "Get organization hook details",
        "description": "Get details of a hook by id",
        "security": [
          {
            "permissions": [
              "org:user"
            ],
            "apikey": []
          }
        ],
        "parameters": [
          {
            "name": "orgid",
            "in": "path",
            "description": "Organization identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Hook record identifier",
            "required": true,
            "type": "string"
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X GET\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/orgs/{orgid}/hooks/{id}"
          },
          {
            "language": "python",
            "code": "orgsApi = OrgsApi(client);\norgsApi.get_hook('{orgid}', '{id}')"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "application/json": "{\n  \"hookType\": \"web\",\n  \"events\": [\n    \"ProjectBuildQueued\",\n    \"ProjectBuildStarted\",\n    \"ProjectBuildRestarted\",\n    \"ProjectBuildSuccess\",\n    \"ProjectBuildFailure\"\n  ],\n  \"config\": {\n    \"url\": \"http://unity3d.com/example\"\n  },\n  \"active\": true,\n  \"id\": 8\n}"
            },
            "schema": {
              "required": [
                "hookType",
                "config"
              ],
              "properties": {
                "hookType": {
                  "enum": [
                    "web",
                    "slack"
                  ],
                  "type": "string"
                },
                "events": {
                  "type": "array",
                  "items": {
                    "enum": [
                      "ProjectBuildQueued",
                      "ProjectBuildStarted",
                      "ProjectBuildRestarted",
                      "ProjectBuildSuccess",
                      "ProjectBuildFailure",
                      "ProjectBuildCanceled",
                      "ProjectBuildUpload"
                    ],
                    "type": "string"
                  }
                },
                "config": {
                  "type": "object"
                },
                "active": {
                  "type": "boolean",
                  "default": true
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "webhooks"
        ],
        "operationId": "deleteHookForOrg",
        "summary": "Delete organization hook",
        "security": [
          {
            "permissions": [
              "org:manager"
            ],
            "apikey": []
          }
        ],
        "parameters": [
          {
            "name": "orgid",
            "in": "path",
            "description": "Organization identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Hook record identifier",
            "required": true,
            "type": "string"
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X DELETE\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/orgs/{orgid}/hooks/{id}"
          },
          {
            "language": "python",
            "code": "orgsApi = OrgsApi(client)\norgsApi.delete_hook('{orgid}', '{id}')"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "schema": {
              "type": "string"
            }
          }
        },
        "x-swagger-router-controller": "hooks"
      },
      "put": {
        "tags": [
          "webhooks"
        ],
        "operationId": "updateHookForOrg",
        "summary": "Update hook for organization",
        "description": "Update a new hook. NOTE: you must be a manager in the\norganization to update hooks.\n",
        "security": [
          {
            "permissions": [
              "org:manager"
            ],
            "apikey": []
          }
        ],
        "parameters": [
          {
            "name": "orgid",
            "in": "path",
            "description": "Organization identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Hook record identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "options",
            "in": "body",
            "schema": {
              "required": [
                "hookType",
                "config"
              ],
              "properties": {
                "hookType": {
                  "enum": [
                    "web",
                    "slack"
                  ],
                  "type": "string"
                },
                "events": {
                  "type": "array",
                  "items": {
                    "enum": [
                      "ProjectBuildQueued",
                      "ProjectBuildStarted",
                      "ProjectBuildRestarted",
                      "ProjectBuildSuccess",
                      "ProjectBuildFailure",
                      "ProjectBuildCanceled",
                      "ProjectBuildUpload"
                    ],
                    "type": "string"
                  }
                },
                "config": {
                  "type": "object"
                },
                "active": {
                  "type": "boolean",
                  "default": true
                }
              }
            }
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X POST\n  -H \"Content-Type: application/json\"\n  -d '{\"hookType\":\"web\", \"active\":true, \"config\":{}}'\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/orgs/{orgid}/hooks/{id}"
          },
          {
            "language": "python",
            "code": "hooksApi = HooksApi(client)\nhook = hooksApi.update_hook('{hookid}', options)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "application/json": "{\n  \"hookType\": \"web\",\n  \"events\": [\n    \"ProjectBuildQueued\",\n    \"ProjectBuildStarted\",\n    \"ProjectBuildRestarted\",\n    \"ProjectBuildSuccess\",\n    \"ProjectBuildFailure\"\n  ],\n  \"config\": {\n    \"url\": \"http://unity3d.com/example\"\n  },\n  \"active\": true,\n  \"id\": 8\n}"
            },
            "schema": {
              "required": [
                "hookType",
                "config"
              ],
              "properties": {
                "hookType": {
                  "enum": [
                    "web",
                    "slack"
                  ],
                  "type": "string"
                },
                "events": {
                  "type": "array",
                  "items": {
                    "enum": [
                      "ProjectBuildQueued",
                      "ProjectBuildStarted",
                      "ProjectBuildRestarted",
                      "ProjectBuildSuccess",
                      "ProjectBuildFailure",
                      "ProjectBuildCanceled",
                      "ProjectBuildUpload"
                    ],
                    "type": "string"
                  }
                },
                "config": {
                  "type": "object"
                },
                "active": {
                  "type": "boolean",
                  "default": true
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/orgs/{orgid}/hooks/{id}/ping": {
      "x-swagger-router-controller": "hooks",
      "post": {
        "tags": [
          "webhooks"
        ],
        "operationId": "pingHookForOrg",
        "summary": "Ping an org hook",
        "description": "Send a ping event to an org hook.\n",
        "security": [
          {
            "permissions": [
              "org:user"
            ],
            "apikey": []
          }
        ],
        "parameters": [
          {
            "name": "orgid",
            "in": "path",
            "description": "Organization identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Hook record identifier",
            "required": true,
            "type": "string"
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X POST\n  -H \"Content-Type: application/json\"\n  -d '{}'\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/orgs/{orgid}/hooks/{id}/ping"
          },
          {
            "language": "python",
            "code": "hooksApi = HooksApi(client)\nhook = hooksApi.ping_hook('{orgid}', '{hookid}')"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/orgs/{orgid}/sshkey": {
      "x-swagger-router-controller": "orgs",
      "get": {
        "tags": [
          "orgs"
        ],
        "operationId": "getSSHKeyForOrg",
        "summary": "Get SSH Key",
        "description": "Get the ssh public key for the specified org",
        "security": [
          {
            "permissions": [
              "org:manager"
            ],
            "apikey": []
          }
        ],
        "parameters": [
          {
            "name": "orgid",
            "in": "path",
            "description": "Organization identifier",
            "required": true,
            "type": "string"
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X GET\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/orgs/{orgid}/sshkey"
          },
          {
            "language": "python",
            "code": "orgsApi = OrgsApi(client);\nsshkey = orgsApi.get_ssh_key('{orgid}')"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "application/json": "{\n  \"publickey\": \"ssh-rsa XXXXXXXX...\"\n}"
            },
            "schema": {
              "properties": {
                "publickey": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "orgs"
        ],
        "operationId": "regenerateSSHKey",
        "summary": "Regenerate SSH Key",
        "description": "Regenerate the ssh key for the specified org\n*WARNING* this is a destructive operation that will permanently remove your current SSH key.",
        "security": [
          {
            "permissions": [
              "org:manager"
            ],
            "apikey": []
          }
        ],
        "parameters": [
          {
            "name": "orgid",
            "in": "path",
            "description": "Organization identifier",
            "required": true,
            "type": "string"
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X POST\n  -H \"Content-Type: application/json\"\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/orgs/{orgid}/sshkey"
          },
          {
            "language": "python",
            "code": "orgsApi = OrgsApi(client);\nsshkey = orgsApi.get_ssh_key('{orgid}')"
          }
        ],
        "responses": {
          "201": {
            "description": "OK",
            "examples": {
              "application/json": "{\n  \"publickey\": \"ssh-rsa XXXXXXXX...\"\n}"
            },
            "schema": {
              "properties": {
                "publickey": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/projects": {
      "x-swagger-router-controller": "projects",
      "get": {
        "tags": [
          "projects"
        ],
        "operationId": "listProjectsForUser",
        "summary": "List all projects (user)",
        "description": "List all projects that you have permission to access across all organizations. Add \"?include=settings\"\nas a query parameter to include the project settings with the response.\n",
        "parameters": [
          {
            "name": "include",
            "in": "query",
            "description": "Extra fields to include in the response",
            "required": false,
            "type": "string"
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X GET\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/projects"
          },
          {
            "language": "python",
            "code": "projectsApi = ProjectsApi(client)\nprojects = projectsApi.list_projects_for_user()"
          }
        ],
        "x-includequery-properties": [
          "settings",
          "serviceFlags"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "application/json": "{\n  \"name\": \"Example Unity\",\n  \"projectid\": \"example-unity\",\n  \"orgName\": \"Example Other\",\n  \"orgid\": \"example-other\",\n  \"guid\": \"94837118-7ee1-4583-bf11-bf33fd4643fb\",\n  \"created\": \"2015-10-29T20:32:15.800Z\",\n  \"links\": {\n    \"self\": {\n      \"method\": \"get\",\n      \"href\": \"/api/v1/orgs/example-other/projects/example-unity\"\n    },\n    \"list_buildtargets\": {\n      \"method\": \"get\",\n      \"href\": \"/api/v1/orgs/example-other/projects/example-unity/buildtargets\"\n    },\n    \"latest_builds\": {\n      \"method\": \"get\",\n      \"href\": \"/api/v1/orgs/example-other/projects/example-unity/buildtargets/_all/builds?per_page=1\"\n    },\n    \"revoke_all_shared\": {\n      \"method\": \"delete\",\n      \"href\": \"/api/v1/orgs/example-other/projects/example-unity/share\"\n    }\n  }\n},\n{\n  \"name\": \"new-projectangrybots\",\n  \"projectid\": \"new-projectangrybots\",\n  \"orgName\": \"Example Org\",\n  \"orgid\": \"example-org\",\n  \"guid\": \"2ebef061-6213-4433-8b98-80b2e78c5189\",\n  \"created\": \"2015-08-06T19:48:45.259Z\",\n  \"cachedIcon\": \"https://unitycloud-build-user-svc-dev-extras-pub.s3.amazonaws.com/example-org/new-projectangrybots/default-webgl-1/icon.png\",\n  \"links\": {\n    \"self\": {\n      \"method\": \"get\",\n      \"href\": \"/api/v1/orgs/example-org/projects/new-projectangrybots\"\n    },\n    \"list_buildtargets\": {\n      \"method\": \"get\",\n      \"href\": \"/api/v1/orgs/example-org/projects/new-projectangrybots/buildtargets\"\n    },\n    \"latest_builds\": {\n      \"method\": \"get\",\n      \"href\": \"/api/v1/orgs/example-org/projects/new-projectangrybots/buildtargets/_all/builds?per_page=1\"\n    },\n    \"revoke_all_shared\": {\n      \"method\": \"delete\",\n      \"href\": \"/api/v1/orgs/example-org/projects/new-projectangrybots/share\"\n    }\n  }\n}"
            },
            "schema": {
              "description": "projects",
              "type": "array",
              "items": {
                "allOf": [
                  {
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "projectid": {
                        "type": "string"
                      },
                      "orgName": {
                        "type": "string"
                      },
                      "orgid": {
                        "type": "string"
                      },
                      "orgFk": {
                        "type": "string"
                      },
                      "guid": {
                        "type": "string"
                      },
                      "created": {
                        "type": "string"
                      },
                      "cachedIcon": {
                        "type": "string"
                      },
                      "serviceFlags": {
                        "type": "object"
                      },
                      "links": {
                        "type": "object"
                      },
                      "disabled": {
                        "type": "boolean"
                      },
                      "disableNotifications": {
                        "type": "boolean"
                      },
                      "generateShareLinks": {
                        "type": "boolean"
                      }
                    }
                  },
                  {
                    "properties": {
                      "settings": {
                        "allOf": [
                          {
                            "properties": {
                              "remoteCacheStrategy": {
                                "type": "string",
                                "default": "library",
                                "enum": [
                                  "none",
                                  "library",
                                  "workspace"
                                ]
                              },
                              "scm": {
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "git",
                                      "svn",
                                      "p4",
                                      "hg",
                                      "collab",
                                      "oauth",
                                      "plastic"
                                    ]
                                  },
                                  "url": {
                                    "type": "string"
                                  },
                                  "user": {
                                    "type": "string"
                                  },
                                  "pass": {
                                    "type": "string"
                                  },
                                  "fingerprint": {
                                    "type": "string"
                                  },
                                  "p4authtype": {
                                    "description": "Deprecated p4-specific auth type - please use authType instead",
                                    "type": "string"
                                  },
                                  "authType": {
                                    "description": "authType for Plastic and P4",
                                    "type": "string",
                                    "enum": [
                                      "LDAPWorkingMode",
                                      "UPWorkingMode",
                                      "ticket",
                                      "password"
                                    ]
                                  },
                                  "shallowclone": {
                                    "type": "boolean"
                                  },
                                  "useEncryption": {
                                    "type": "boolean"
                                  },
                                  "encryptionKey": {
                                    "type": "string"
                                  },
                                  "encryptionMethod": {
                                    "type": "string",
                                    "enum": [
                                      "AES128",
                                      "AES192",
                                      "AES256"
                                    ]
                                  }
                                }
                              }
                            }
                          },
                          {
                            "properties": {
                              "scm": {
                                "properties": {
                                  "oauth": {
                                    "allOf": [
                                      {
                                        "properties": {
                                          "scm_provider": {
                                            "type": "string"
                                          },
                                          "temp_state": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      {
                                        "properties": {
                                          "github": {
                                            "properties": {
                                              "repository": {
                                                "type": "object"
                                              }
                                            }
                                          },
                                          "gitlab": {
                                            "properties": {
                                              "repository": {
                                                "type": "object"
                                              }
                                            }
                                          },
                                          "bitbucket": {
                                            "properties": {
                                              "repository": {
                                                "type": "object"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/projects/{projectupid}": {
      "x-swagger-router-controller": "projects",
      "get": {
        "tags": [
          "projects"
        ],
        "operationId": "getProjectByUpid",
        "summary": "Get project details",
        "description": "Gets the same data as /orgs/{orgid}/project/{projectid} but looks up the project by the Unity Project ID. This\nvalue is returned in the project's guid field.",
        "security": [
          {
            "permissions": [
              "project:user"
            ],
            "apikey": []
          }
        ],
        "parameters": [
          {
            "name": "projectupid",
            "in": "path",
            "description": "Project UPID - Unity global id",
            "required": true,
            "type": "string"
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X GET\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/projects/{projectuid}"
          },
          {
            "language": "python",
            "code": "projectsApi = ProjectsApi(client)\nproject = projectsApi.get_project_by_upid('{projectupid}')"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "application/json": "{\n  \"name\": \"new-projectangrybots\",\n  \"projectid\": \"new-projectangrybots\",\n  \"orgName\": \"Example Org\",\n  \"orgid\": \"example-org\",\n  \"guid\": \"2ebef061-6213-4433-8b98-80b2e78c5189\",\n  \"created\": \"2015-08-06T19:48:45.259Z\",\n  \"cachedIcon\": \"https://unitycloud-build-user-svc-dev-extras-pub.s3.amazonaws.com/example-org/new-projectangrybots/default-webgl-1/icon.png\",\n  \"settings\": {\n    \"remoteCacheStrategy\": \"none\",\n    \"scm\": {\n      \"type\": \"git\",\n      \"url\": \"git://github.com/example-org/new-projectangrybots.git\"\n    }\n  },\n  \"links\": {\n    \"self\": {\n      \"method\": \"get\",\n      \"href\": \"/api/v1/orgs/example-org/projects/new-projectangrybots\"\n    },\n    \"list_buildtargets\": {\n      \"method\": \"get\",\n      \"href\": \"/api/v1/orgs/example-org/projects/new-projectangrybots/buildtargets\"\n    },\n    \"latest_builds\": {\n      \"method\": \"get\",\n      \"href\": \"/api/v1/orgs/example-org/projects/new-projectangrybots/buildtargets/_all/builds?per_page=1\"\n    },\n    \"revoke_all_shared\": {\n      \"method\": \"delete\",\n      \"href\": \"/api/v1/orgs/example-org/projects/new-projectangrybots/share\"\n    }\n  }\n}"
            },
            "schema": {
              "allOf": [
                {
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "projectid": {
                      "type": "string"
                    },
                    "orgName": {
                      "type": "string"
                    },
                    "orgid": {
                      "type": "string"
                    },
                    "orgFk": {
                      "type": "string"
                    },
                    "guid": {
                      "type": "string"
                    },
                    "created": {
                      "type": "string"
                    },
                    "cachedIcon": {
                      "type": "string"
                    },
                    "serviceFlags": {
                      "type": "object"
                    },
                    "links": {
                      "type": "object"
                    },
                    "disabled": {
                      "type": "boolean"
                    },
                    "disableNotifications": {
                      "type": "boolean"
                    },
                    "generateShareLinks": {
                      "type": "boolean"
                    }
                  }
                },
                {
                  "properties": {
                    "settings": {
                      "allOf": [
                        {
                          "properties": {
                            "remoteCacheStrategy": {
                              "type": "string",
                              "default": "library",
                              "enum": [
                                "none",
                                "library",
                                "workspace"
                              ]
                            },
                            "scm": {
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "git",
                                    "svn",
                                    "p4",
                                    "hg",
                                    "collab",
                                    "oauth",
                                    "plastic"
                                  ]
                                },
                                "url": {
                                  "type": "string"
                                },
                                "user": {
                                  "type": "string"
                                },
                                "pass": {
                                  "type": "string"
                                },
                                "fingerprint": {
                                  "type": "string"
                                },
                                "p4authtype": {
                                  "description": "Deprecated p4-specific auth type - please use authType instead",
                                  "type": "string"
                                },
                                "authType": {
                                  "description": "authType for Plastic and P4",
                                  "type": "string",
                                  "enum": [
                                    "LDAPWorkingMode",
                                    "UPWorkingMode",
                                    "ticket",
                                    "password"
                                  ]
                                },
                                "shallowclone": {
                                  "type": "boolean"
                                },
                                "useEncryption": {
                                  "type": "boolean"
                                },
                                "encryptionKey": {
                                  "type": "string"
                                },
                                "encryptionMethod": {
                                  "type": "string",
                                  "enum": [
                                    "AES128",
                                    "AES192",
                                    "AES256"
                                  ]
                                }
                              }
                            }
                          }
                        },
                        {
                          "properties": {
                            "scm": {
                              "properties": {
                                "oauth": {
                                  "allOf": [
                                    {
                                      "properties": {
                                        "scm_provider": {
                                          "type": "string"
                                        },
                                        "temp_state": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    {
                                      "properties": {
                                        "github": {
                                          "properties": {
                                            "repository": {
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "gitlab": {
                                          "properties": {
                                            "repository": {
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "bitbucket": {
                                          "properties": {
                                            "repository": {
                                              "type": "object"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/orgs/{orgid}/projects": {
      "x-swagger-router-controller": "projects",
      "get": {
        "tags": [
          "projects"
        ],
        "operationId": "listProjectsForOrg",
        "summary": "List all projects (org)",
        "description": "List all projects that belong to the specified organization. Add \"?include=settings\"\nas a query parameter to include the project settings with the response.\n",
        "security": [
          {
            "permissions": [
              "org:user"
            ],
            "apikey": []
          }
        ],
        "parameters": [
          {
            "name": "orgid",
            "in": "path",
            "description": "Organization identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Extra fields to include in the response",
            "required": false,
            "type": "string"
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X GET\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/orgs/{orgid}/projects\n\ncurl\n  -X GET\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/orgs/{orgid}/projects?include=settings"
          },
          {
            "language": "python",
            "code": "projectsApi = ProjectsApi(client)\nprojects = projectsApi.list_projects_for_org('{orgid}')\n\n# Include project settings\nprojects = projectsApi.list_projects_for_org('timt-unity3d', include=\"settings\");"
          }
        ],
        "x-includequery-properties": [
          "settings",
          "serviceFlags"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "application/json-default": "Default:\n[\n  {\n    \"name\": \"new-projectangrybots\",\n    \"projectid\": \"new-projectangrybots\",\n    \"orgName\": \"Example Org\",\n    \"orgid\": \"example-org\",\n    \"guid\": \"2ebef061-6213-4433-8b98-80b2e78c5189\",\n    \"created\": \"2015-08-06T19:48:45.259Z\",\n    \"cachedIcon\": \"https://unitycloud-build-user-svc-dev-extras-pub.s3.amazonaws.com/example-org/new-projectangrybots/default-webgl-1/icon.png\",\n    \"links\": {\n      \"self\": {\n        \"method\": \"get\",\n        \"href\": \"/api/v1/orgs/example-org/projects/new-projectangrybots\"\n      },\n      \"list_buildtargets\": {\n        \"method\": \"get\",\n        \"href\": \"/api/v1/orgs/example-org/projects/new-projectangrybots/buildtargets\"\n      },\n      \"latest_builds\": {\n        \"method\": \"get\",\n        \"href\": \"/api/v1/orgs/example-org/projects/new-projectangrybots/buildtargets/_all/builds?per_page=1\"\n      },\n      \"revoke_all_shared\": {\n        \"method\": \"delete\",\n        \"href\": \"/api/v1/orgs/example-org/projects/new-projectangrybots/share\"\n      }\n    }\n  }\n]",
              "application/json-include-settings": "Using ?include=settings:\n[\n  {\n    \"name\": \"new-projectangrybots\",\n    \"projectid\": \"new-projectangrybots\",\n    \"orgName\": \"Example Org\",\n    \"orgid\": \"example-org\",\n    \"guid\": \"2ebef061-6213-4433-8b98-80b2e78c5189\",\n    \"created\": \"2015-08-06T19:48:45.259Z\",\n    \"cachedIcon\": \"https://unitycloud-build-user-svc-dev-extras-pub.s3.amazonaws.com/example-org/new-projectangrybots/default-webgl-1/icon.png\",\n    \"settings\": {\n      \"remoteCacheStrategy\": \"none\",\n      \"scm\": {\n        \"type\": \"git\",\n        \"url\": \"git://github.com/example-org/new-projectangrybots.git\"\n      }\n    },\n    \"links\": {\n      \"self\": {\n        \"method\": \"get\",\n        \"href\": \"/api/v1/orgs/example-org/projects/new-projectangrybots\"\n      },\n      \"list_buildtargets\": {\n        \"method\": \"get\",\n        \"href\": \"/api/v1/orgs/example-org/projects/new-projectangrybots/buildtargets\"\n      },\n      \"latest_builds\": {\n        \"method\": \"get\",\n        \"href\": \"/api/v1/orgs/example-org/projects/new-projectangrybots/buildtargets/_all/builds?per_page=1\"\n      },\n      \"revoke_all_shared\": {\n        \"method\": \"delete\",\n        \"href\": \"/api/v1/orgs/example-org/projects/new-projectangrybots/share\"\n      }\n    }\n  }\n]"
            },
            "schema": {
              "type": "array",
              "items": {
                "allOf": [
                  {
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "projectid": {
                        "type": "string"
                      },
                      "orgName": {
                        "type": "string"
                      },
                      "orgid": {
                        "type": "string"
                      },
                      "orgFk": {
                        "type": "string"
                      },
                      "guid": {
                        "type": "string"
                      },
                      "created": {
                        "type": "string"
                      },
                      "cachedIcon": {
                        "type": "string"
                      },
                      "serviceFlags": {
                        "type": "object"
                      },
                      "links": {
                        "type": "object"
                      },
                      "disabled": {
                        "type": "boolean"
                      },
                      "disableNotifications": {
                        "type": "boolean"
                      },
                      "generateShareLinks": {
                        "type": "boolean"
                      }
                    }
                  },
                  {
                    "properties": {
                      "settings": {
                        "allOf": [
                          {
                            "properties": {
                              "remoteCacheStrategy": {
                                "type": "string",
                                "default": "library",
                                "enum": [
                                  "none",
                                  "library",
                                  "workspace"
                                ]
                              },
                              "scm": {
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "git",
                                      "svn",
                                      "p4",
                                      "hg",
                                      "collab",
                                      "oauth",
                                      "plastic"
                                    ]
                                  },
                                  "url": {
                                    "type": "string"
                                  },
                                  "user": {
                                    "type": "string"
                                  },
                                  "pass": {
                                    "type": "string"
                                  },
                                  "fingerprint": {
                                    "type": "string"
                                  },
                                  "p4authtype": {
                                    "description": "Deprecated p4-specific auth type - please use authType instead",
                                    "type": "string"
                                  },
                                  "authType": {
                                    "description": "authType for Plastic and P4",
                                    "type": "string",
                                    "enum": [
                                      "LDAPWorkingMode",
                                      "UPWorkingMode",
                                      "ticket",
                                      "password"
                                    ]
                                  },
                                  "shallowclone": {
                                    "type": "boolean"
                                  },
                                  "useEncryption": {
                                    "type": "boolean"
                                  },
                                  "encryptionKey": {
                                    "type": "string"
                                  },
                                  "encryptionMethod": {
                                    "type": "string",
                                    "enum": [
                                      "AES128",
                                      "AES192",
                                      "AES256"
                                    ]
                                  }
                                }
                              }
                            }
                          },
                          {
                            "properties": {
                              "scm": {
                                "properties": {
                                  "oauth": {
                                    "allOf": [
                                      {
                                        "properties": {
                                          "scm_provider": {
                                            "type": "string"
                                          },
                                          "temp_state": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      {
                                        "properties": {
                                          "github": {
                                            "properties": {
                                              "repository": {
                                                "type": "object"
                                              }
                                            }
                                          },
                                          "gitlab": {
                                            "properties": {
                                              "repository": {
                                                "type": "object"
                                              }
                                            }
                                          },
                                          "bitbucket": {
                                            "properties": {
                                              "repository": {
                                                "type": "object"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "projects"
        ],
        "operationId": "addProject",
        "summary": "Create project",
        "description": "Create a project for the specified organization",
        "security": [
          {
            "permissions": [
              "org:manager"
            ],
            "apikey": []
          }
        ],
        "parameters": [
          {
            "name": "orgid",
            "in": "path",
            "description": "Organization identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "options",
            "in": "body",
            "required": true,
            "description": "Options for project create/update",
            "schema": {
              "allOf": [
                {
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "disabled": {
                      "type": "boolean"
                    },
                    "disableNotifications": {
                      "type": "boolean"
                    },
                    "generateShareLinks": {
                      "type": "boolean"
                    }
                  }
                },
                {
                  "properties": {
                    "settings": {
                      "allOf": [
                        {
                          "properties": {
                            "remoteCacheStrategy": {
                              "type": "string",
                              "default": "library",
                              "enum": [
                                "none",
                                "library",
                                "workspace"
                              ]
                            },
                            "scm": {
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "git",
                                    "svn",
                                    "p4",
                                    "hg",
                                    "collab",
                                    "oauth",
                                    "plastic"
                                  ]
                                },
                                "url": {
                                  "type": "string"
                                },
                                "user": {
                                  "type": "string"
                                },
                                "pass": {
                                  "type": "string"
                                },
                                "fingerprint": {
                                  "type": "string"
                                },
                                "p4authtype": {
                                  "description": "Deprecated p4-specific auth type - please use authType instead",
                                  "type": "string"
                                },
                                "authType": {
                                  "description": "authType for Plastic and P4",
                                  "type": "string",
                                  "enum": [
                                    "LDAPWorkingMode",
                                    "UPWorkingMode",
                                    "ticket",
                                    "password"
                                  ]
                                },
                                "shallowclone": {
                                  "type": "boolean"
                                },
                                "useEncryption": {
                                  "type": "boolean"
                                },
                                "encryptionKey": {
                                  "type": "string"
                                },
                                "encryptionMethod": {
                                  "type": "string",
                                  "enum": [
                                    "AES128",
                                    "AES192",
                                    "AES256"
                                  ]
                                }
                              }
                            }
                          }
                        },
                        {
                          "properties": {
                            "scm": {
                              "properties": {}
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              ]
            }
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X POST\n  -H \"Content-Type: application/json\"\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  -d '{\"name\": \"New Project\", \"settings\": { \"remoteCacheStrategy\": \"library\", \"scm\": { \"type\": \"git\", \"url\": \"git://github.com/example-org/newproject.git\", \"user\": \"julie.smith\", \"pass\": \"password\"}}}'\n  [API_URL][BASE_PATH]/orgs/{orgid}/projects"
          },
          {
            "language": "python",
            "code": "projectsApi = ProjectsApi(client)\nproject = projectsApi.add_project('{orgid}', {\"name\": \"New Project\", \"settings\": { \"remoteCacheStrategy\": \"library\", \"scm\": { \"type\": \"git\", \"url\": \"git://github.com/example-org/newproject.git\", \"user\": \"julie.smith\", \"pass\": \"password\"}}})"
          }
        ],
        "responses": {
          "201": {
            "description": "OK",
            "examples": {
              "application/json": "{\n  \"name\": \"New Project\",\n  \"projectid\": \"new-project\",\n  \"orgName\": \"Example Org\",\n  \"orgid\": \"example-org\",\n  \"guid\": \"49da3555-d775-4fc0-9a4f-f3e28a46ea4c\",\n  \"created\": \"2015-11-17T21:38:53.626Z\",\n  \"settings\": {\n    \"remoteCacheStrategy\": \"library\",\n    \"scm\": {\n      \"type\": \"git\",\n      \"url\": \"git://github.com/example-org/newproject.git\",\n      \"user\": \"juliesmith\",\n      \"pass\": \"********\"\n    }\n  },\n  \"links\": {\n    \"self\": {\n      \"method\": \"get\",\n      \"href\": \"/api/v1/orgs/new-project/projects/new-project\"\n    },\n    \"list_buildtargets\": {\n      \"method\": \"get\",\n      \"href\": \"/api/v1/orgs/new-project/projects/new-projectbuildtargets\"\n    },\n    \"latest_builds\": {\n      \"method\": \"get\",\n      \"href\": \"/api/v1/orgs/new-project/projects/new-projectbuildtargets/_all/builds?per_page=1\"\n    },\n    \"revoke_all_shared\": {\n      \"method\": \"delete\",\n      \"href\": \"/api/v1/orgs/new-project/projects/new-project/share\"\n    }\n  }\n}"
            },
            "schema": {
              "allOf": [
                {
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "projectid": {
                      "type": "string"
                    },
                    "orgName": {
                      "type": "string"
                    },
                    "orgid": {
                      "type": "string"
                    },
                    "orgFk": {
                      "type": "string"
                    },
                    "guid": {
                      "type": "string"
                    },
                    "created": {
                      "type": "string"
                    },
                    "cachedIcon": {
                      "type": "string"
                    },
                    "serviceFlags": {
                      "type": "object"
                    },
                    "links": {
                      "type": "object"
                    },
                    "disabled": {
                      "type": "boolean"
                    },
                    "disableNotifications": {
                      "type": "boolean"
                    },
                    "generateShareLinks": {
                      "type": "boolean"
                    }
                  }
                },
                {
                  "properties": {
                    "settings": {
                      "allOf": [
                        {
                          "properties": {
                            "remoteCacheStrategy": {
                              "type": "string",
                              "default": "library",
                              "enum": [
                                "none",
                                "library",
                                "workspace"
                              ]
                            },
                            "scm": {
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "git",
                                    "svn",
                                    "p4",
                                    "hg",
                                    "collab",
                                    "oauth",
                                    "plastic"
                                  ]
                                },
                                "url": {
                                  "type": "string"
                                },
                                "user": {
                                  "type": "string"
                                },
                                "pass": {
                                  "type": "string"
                                },
                                "fingerprint": {
                                  "type": "string"
                                },
                                "p4authtype": {
                                  "description": "Deprecated p4-specific auth type - please use authType instead",
                                  "type": "string"
                                },
                                "authType": {
                                  "description": "authType for Plastic and P4",
                                  "type": "string",
                                  "enum": [
                                    "LDAPWorkingMode",
                                    "UPWorkingMode",
                                    "ticket",
                                    "password"
                                  ]
                                },
                                "shallowclone": {
                                  "type": "boolean"
                                },
                                "useEncryption": {
                                  "type": "boolean"
                                },
                                "encryptionKey": {
                                  "type": "string"
                                },
                                "encryptionMethod": {
                                  "type": "string",
                                  "enum": [
                                    "AES128",
                                    "AES192",
                                    "AES256"
                                  ]
                                }
                              }
                            }
                          }
                        },
                        {
                          "properties": {
                            "scm": {
                              "properties": {}
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "/orgs/{orgid}/projects/{projectid}": {
      "x-swagger-router-controller": "projects",
      "get": {
        "tags": [
          "projects"
        ],
        "operationId": "getProject",
        "summary": "Get project details",
        "security": [
          {
            "permissions": [
              "project:user"
            ],
            "apikey": []
          }
        ],
        "parameters": [
          {
            "name": "orgid",
            "in": "path",
            "description": "Organization identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectid",
            "in": "path",
            "description": "Project identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Extra fields to include in the response",
            "required": false,
            "type": "string"
          }
        ],
        "x-includequery-properties": [
          "serviceFlags"
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X POST\n  -H \"Content-Type: application/json\"\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/orgs/{orgid}/projects/{projectid}"
          },
          {
            "language": "python",
            "code": "projectsApi = ProjectsApi(client)\nproject = projectsApi.get_project('{orgid}', '{projectid}')"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "application/json": "{\n  \"name\": \"New Project\",\n  \"projectid\": \"new-project\",\n  \"orgName\": \"Example Org\",\n  \"orgid\": \"example-org\",\n  \"guid\": \"90d19efb-4b45-4025-8025-93cd365fcb52\",\n  \"created\": \"2015-11-18T16:43:49.777Z\",\n  \"settings\": {\n    \"remoteCacheStrategy\": \"library\",\n    \"scm\": {\n      \"type\": \"git\",\n      \"url\": \"git://github.com/example-org/newproject.git\",\n      \"user\": \"juliesmith\",\n      \"pass\": \"********\"\n    }\n  },\n  \"links\": {\n    \"self\": {\n      \"method\": \"get\",\n      \"href\": \"/api/v1/orgs/example-org/projects/new-project\"\n    },\n    \"list_buildtargets\": {\n      \"method\": \"get\",\n      \"href\": \"/api/v1/orgs/example-org/projects/new-project/buildtargets\"\n    },\n    \"latest_builds\": {\n      \"method\": \"get\",\n      \"href\": \"/api/v1/orgs/example-org/projects/new-project/buildtargets/_all/builds?per_page=1\"\n    },\n    \"revoke_all_shared\": {\n      \"method\": \"delete\",\n      \"href\": \"/api/v1/orgs/example-org/projects/new-project/share\"\n    }\n  }\n}"
            },
            "schema": {
              "allOf": [
                {
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "projectid": {
                      "type": "string"
                    },
                    "orgName": {
                      "type": "string"
                    },
                    "orgid": {
                      "type": "string"
                    },
                    "orgFk": {
                      "type": "string"
                    },
                    "guid": {
                      "type": "string"
                    },
                    "created": {
                      "type": "string"
                    },
                    "cachedIcon": {
                      "type": "string"
                    },
                    "serviceFlags": {
                      "type": "object"
                    },
                    "links": {
                      "type": "object"
                    },
                    "disabled": {
                      "type": "boolean"
                    },
                    "disableNotifications": {
                      "type": "boolean"
                    },
                    "generateShareLinks": {
                      "type": "boolean"
                    }
                  }
                },
                {
                  "properties": {
                    "settings": {
                      "allOf": [
                        {
                          "properties": {
                            "remoteCacheStrategy": {
                              "type": "string",
                              "default": "library",
                              "enum": [
                                "none",
                                "library",
                                "workspace"
                              ]
                            },
                            "scm": {
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "git",
                                    "svn",
                                    "p4",
                                    "hg",
                                    "collab",
                                    "oauth",
                                    "plastic"
                                  ]
                                },
                                "url": {
                                  "type": "string"
                                },
                                "user": {
                                  "type": "string"
                                },
                                "pass": {
                                  "type": "string"
                                },
                                "fingerprint": {
                                  "type": "string"
                                },
                                "p4authtype": {
                                  "description": "Deprecated p4-specific auth type - please use authType instead",
                                  "type": "string"
                                },
                                "authType": {
                                  "description": "authType for Plastic and P4",
                                  "type": "string",
                                  "enum": [
                                    "LDAPWorkingMode",
                                    "UPWorkingMode",
                                    "ticket",
                                    "password"
                                  ]
                                },
                                "shallowclone": {
                                  "type": "boolean"
                                },
                                "useEncryption": {
                                  "type": "boolean"
                                },
                                "encryptionKey": {
                                  "type": "string"
                                },
                                "encryptionMethod": {
                                  "type": "string",
                                  "enum": [
                                    "AES128",
                                    "AES192",
                                    "AES256"
                                  ]
                                }
                              }
                            }
                          }
                        },
                        {
                          "properties": {
                            "scm": {
                              "properties": {
                                "oauth": {
                                  "allOf": [
                                    {
                                      "properties": {
                                        "scm_provider": {
                                          "type": "string"
                                        },
                                        "temp_state": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    {
                                      "properties": {
                                        "github": {
                                          "properties": {
                                            "repository": {
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "gitlab": {
                                          "properties": {
                                            "repository": {
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "bitbucket": {
                                          "properties": {
                                            "repository": {
                                              "type": "object"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              ]
            }
          }
        }
      },
      "put": {
        "tags": [
          "projects"
        ],
        "operationId": "updateProject",
        "summary": "Update project details",
        "security": [
          {
            "permissions": [
              "project:manager"
            ],
            "apikey": []
          }
        ],
        "parameters": [
          {
            "name": "orgid",
            "in": "path",
            "description": "Organization identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectid",
            "in": "path",
            "description": "Project identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "options",
            "in": "body",
            "required": true,
            "description": "Options for project create/update",
            "schema": {
              "allOf": [
                {
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "disabled": {
                      "type": "boolean"
                    },
                    "disableNotifications": {
                      "type": "boolean"
                    },
                    "generateShareLinks": {
                      "type": "boolean"
                    }
                  }
                },
                {
                  "properties": {
                    "settings": {
                      "allOf": [
                        {
                          "properties": {
                            "remoteCacheStrategy": {
                              "type": "string",
                              "default": "library",
                              "enum": [
                                "none",
                                "library",
                                "workspace"
                              ]
                            },
                            "scm": {
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "git",
                                    "svn",
                                    "p4",
                                    "hg",
                                    "collab",
                                    "oauth",
                                    "plastic"
                                  ]
                                },
                                "url": {
                                  "type": "string"
                                },
                                "user": {
                                  "type": "string"
                                },
                                "pass": {
                                  "type": "string"
                                },
                                "fingerprint": {
                                  "type": "string"
                                },
                                "p4authtype": {
                                  "description": "Deprecated p4-specific auth type - please use authType instead",
                                  "type": "string"
                                },
                                "authType": {
                                  "description": "authType for Plastic and P4",
                                  "type": "string",
                                  "enum": [
                                    "LDAPWorkingMode",
                                    "UPWorkingMode",
                                    "ticket",
                                    "password"
                                  ]
                                },
                                "shallowclone": {
                                  "type": "boolean"
                                },
                                "useEncryption": {
                                  "type": "boolean"
                                },
                                "encryptionKey": {
                                  "type": "string"
                                },
                                "encryptionMethod": {
                                  "type": "string",
                                  "enum": [
                                    "AES128",
                                    "AES192",
                                    "AES256"
                                  ]
                                }
                              }
                            }
                          }
                        },
                        {
                          "properties": {
                            "scm": {
                              "properties": {}
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              ]
            }
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X PUT\n  -H \"Content-Type: application/json\"\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  -d '{\"settings\": { \"remoteCacheStrategy\": \"none\", \"scm\": { \"pass\": \"newpassword\"}}}'\n  [API_URL][BASE_PATH]/orgs/{orgid}/projects/{projectid}"
          },
          {
            "language": "python",
            "code": "projectsApi = ProjectsApi(client)\nproject = projectsApi.update_project('{orgid}', '{projectid}', {\"settings\": { \"remoteCacheStrategy\": \"none\", \"scm\": { \"pass\": \"newpassword\"}}})"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "application/json": "{\n  \"name\": \"New Project\",\n  \"projectid\": \"new-project\",\n  \"orgName\": \"Example Org\",\n  \"orgid\": \"example-org\",\n  \"guid\": \"90d19efb-4b45-4025-8025-93cd365fcb52\",\n  \"created\": \"2015-11-18T16:43:49.777Z\",\n  \"settings\": {\n    \"remoteCacheStrategy\": \"none\",\n    \"scm\": {\n      \"type\": \"git\",\n      \"url\": \"git://github.com/example-org/newproject.git\",\n      \"user\": \"juliesmith\",\n      \"pass\": \"********\"\n    }\n  },\n  \"links\": {\n    \"self\": {\n      \"method\": \"get\",\n      \"href\": \"/api/v1/orgs/example-org/projects/new-project\"\n    },\n    \"list_buildtargets\": {\n      \"method\": \"get\",\n      \"href\": \"/api/v1/orgs/example-org/projects/new-project/buildtargets\"\n    },\n    \"latest_builds\": {\n      \"method\": \"get\",\n      \"href\": \"/api/v1/orgs/example-org/projects/new-project/buildtargets/_all/builds?per_page=1\"\n    },\n    \"revoke_all_shared\": {\n      \"method\": \"delete\",\n      \"href\": \"/api/v1/orgs/example-org/projects/new-project/share\"\n    }\n  }\n}"
            },
            "schema": {
              "allOf": [
                {
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "projectid": {
                      "type": "string"
                    },
                    "orgName": {
                      "type": "string"
                    },
                    "orgid": {
                      "type": "string"
                    },
                    "orgFk": {
                      "type": "string"
                    },
                    "guid": {
                      "type": "string"
                    },
                    "created": {
                      "type": "string"
                    },
                    "cachedIcon": {
                      "type": "string"
                    },
                    "serviceFlags": {
                      "type": "object"
                    },
                    "links": {
                      "type": "object"
                    },
                    "disabled": {
                      "type": "boolean"
                    },
                    "disableNotifications": {
                      "type": "boolean"
                    },
                    "generateShareLinks": {
                      "type": "boolean"
                    }
                  }
                },
                {
                  "properties": {
                    "settings": {
                      "allOf": [
                        {
                          "properties": {
                            "remoteCacheStrategy": {
                              "type": "string",
                              "default": "library",
                              "enum": [
                                "none",
                                "library",
                                "workspace"
                              ]
                            },
                            "scm": {
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "git",
                                    "svn",
                                    "p4",
                                    "hg",
                                    "collab",
                                    "oauth",
                                    "plastic"
                                  ]
                                },
                                "url": {
                                  "type": "string"
                                },
                                "user": {
                                  "type": "string"
                                },
                                "pass": {
                                  "type": "string"
                                },
                                "fingerprint": {
                                  "type": "string"
                                },
                                "p4authtype": {
                                  "description": "Deprecated p4-specific auth type - please use authType instead",
                                  "type": "string"
                                },
                                "authType": {
                                  "description": "authType for Plastic and P4",
                                  "type": "string",
                                  "enum": [
                                    "LDAPWorkingMode",
                                    "UPWorkingMode",
                                    "ticket",
                                    "password"
                                  ]
                                },
                                "shallowclone": {
                                  "type": "boolean"
                                },
                                "useEncryption": {
                                  "type": "boolean"
                                },
                                "encryptionKey": {
                                  "type": "string"
                                },
                                "encryptionMethod": {
                                  "type": "string",
                                  "enum": [
                                    "AES128",
                                    "AES192",
                                    "AES256"
                                  ]
                                }
                              }
                            }
                          }
                        },
                        {
                          "properties": {
                            "scm": {
                              "properties": {}
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              ]
            }
          }
        }
      },
      "delete": {
        "tags": [
          "projects"
        ],
        "operationId": "archiveProject",
        "summary": "Archive project",
        "description": "This will archive the project in Cloud Build ONLY. Use with caution - this process is not reversible.\nThe projects UPID will be removed from Cloud Build allowing the project to be reconfigured.",
        "security": [
          {
            "permissions": [
              "project:manager"
            ],
            "apikey": []
          }
        ],
        "parameters": [
          {
            "name": "orgid",
            "in": "path",
            "description": "Organization identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectid",
            "in": "path",
            "description": "Project identifier",
            "required": true,
            "type": "string"
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X DELETE\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/orgs/{orgid}/projects/{projectid}"
          },
          {
            "language": "python",
            "code": "projectsApi = ProjectsApi(client)\nprojectsApi.archive_project('{orgid}', '{projectid}')"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Error",
            "schema": {
              "properties": {
                "error": {
                  "type": "string"
                },
                "detail": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/orgs/{orgid}/projects/{projectid}/billingplan": {
      "x-swagger-router-controller": "projects",
      "get": {
        "tags": [
          "projects"
        ],
        "operationId": "getBillingPlansForProject",
        "summary": "Get billing plan",
        "description": "Get the billing plan for the specified project",
        "security": [
          {
            "permissions": [
              "project:user"
            ],
            "apikey": []
          }
        ],
        "parameters": [
          {
            "name": "orgid",
            "in": "path",
            "description": "Organization identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectid",
            "in": "path",
            "description": "Project identifier",
            "required": true,
            "type": "string"
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X GET\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/orgs/{orgid}/projects/{projectid}/billingplan"
          },
          {
            "language": "python",
            "code": "projectsApi = ProjectsApi(client)\nbillingplans = projectsApi.get_billing_plans('{orgid}', '{projectid}')"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "application/json": "{\n  \"billing\": {\n    \"label\": \"Studio\",\n    \"numProjects\": 0,\n    \"concurrentBuilds\": 5,\n    \"cooldownMinutes\": 5,\n    \"cooldownGracePeriodMinutes\": 60,\n    \"collaborators\": 100000,\n    \"repoSizeLimitMB\": 5000,\n    \"repoSizeLimitThresholdMB\": 10,\n    \"downloadLimitMB\": 0,\n    \"buildManifest\": true,\n    \"libraryCaching\": true,\n    \"pushExternalServices\": true,\n    \"supportTickets\": true,\n    \"apiAccess\": true,\n    \"scheduledBuilds\": true,\n    \"workspaceCaching\": true,\n    \"advancedFeatures\": [\n      \"debug\",\n      \"custom_defines\",\n      \"pre_export\",\n      \"post_export\",\n      \"custom_scenes\",\n      \"post_build_script\"\n    ],\n    \"scmTypes\": [\n      \"git\",\n      \"svn\",\n      \"p4\",\n      \"hg\"\n    ]\n  },\n  \"effective\": {\n    \"label\": \"Studio\",\n    \"numProjects\": 0,\n    \"concurrentBuilds\": 5,\n    \"cooldownMinutes\": 5,\n    \"cooldownGracePeriodMinutes\": 60,\n    \"collaborators\": 100000,\n    \"repoSizeLimitMB\": 5000,\n    \"repoSizeLimitThresholdMB\": 10,\n    \"downloadLimitMB\": 0,\n    \"buildManifest\": true,\n    \"libraryCaching\": true,\n    \"pushExternalServices\": true,\n    \"supportTickets\": true,\n    \"apiAccess\": true,\n    \"scheduledBuilds\": true,\n    \"workspaceCaching\": true,\n    \"advancedFeatures\": [\n      \"debug\",\n      \"custom_defines\",\n      \"pre_export\",\n      \"post_export\",\n      \"custom_scenes\",\n      \"post_build_script\"\n    ],\n    \"scmTypes\": [\n      \"git\",\n      \"svn\",\n      \"p4\",\n      \"hg\"\n    ]\n  }\n}"
            },
            "schema": {
              "required": [
                "billing",
                "effective"
              ],
              "properties": {
                "billing": {
                  "description": "actual billing plan",
                  "properties": {
                    "label": {
                      "type": "string"
                    },
                    "numProjects": {
                      "type": "number"
                    },
                    "concurrentBuilds": {
                      "type": "number"
                    },
                    "cooldownMinutes": {
                      "type": "number"
                    },
                    "cooldownGracePeriodMinutes": {
                      "type": "number"
                    },
                    "collaborators": {
                      "type": "number"
                    },
                    "repoSizeLimitMB": {
                      "type": "number"
                    },
                    "repoSizeLimitThresholdMB": {
                      "type": "number"
                    },
                    "downloadLimitMB": {
                      "type": "number"
                    },
                    "buildManifest": {
                      "type": "boolean"
                    },
                    "libraryCaching": {
                      "type": "boolean"
                    },
                    "pushExternalServices": {
                      "type": "boolean"
                    },
                    "supportTickets": {
                      "type": "boolean"
                    },
                    "apiAccess": {
                      "type": "boolean"
                    },
                    "scheduledBuilds": {
                      "type": "boolean"
                    },
                    "workspaceCaching": {
                      "type": "boolean"
                    },
                    "buildingDisabled": {
                      "type": "boolean"
                    },
                    "advancedFeatures": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "scmTypes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "effective": {
                  "description": "effective billing plan, this includes temporary overrides and specials",
                  "properties": {
                    "label": {
                      "type": "string"
                    },
                    "numProjects": {
                      "type": "number"
                    },
                    "concurrentBuilds": {
                      "type": "number"
                    },
                    "cooldownMinutes": {
                      "type": "number"
                    },
                    "cooldownGracePeriodMinutes": {
                      "type": "number"
                    },
                    "collaborators": {
                      "type": "number"
                    },
                    "repoSizeLimitMB": {
                      "type": "number"
                    },
                    "repoSizeLimitThresholdMB": {
                      "type": "number"
                    },
                    "downloadLimitMB": {
                      "type": "number"
                    },
                    "buildManifest": {
                      "type": "boolean"
                    },
                    "libraryCaching": {
                      "type": "boolean"
                    },
                    "pushExternalServices": {
                      "type": "boolean"
                    },
                    "supportTickets": {
                      "type": "boolean"
                    },
                    "apiAccess": {
                      "type": "boolean"
                    },
                    "scheduledBuilds": {
                      "type": "boolean"
                    },
                    "workspaceCaching": {
                      "type": "boolean"
                    },
                    "buildingDisabled": {
                      "type": "boolean"
                    },
                    "advancedFeatures": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "scmTypes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/orgs/{orgid}/projects/{projectid}/sshkey": {
      "x-swagger-router-controller": "projects",
      "get": {
        "tags": [
          "projects"
        ],
        "operationId": "getSSHKeyForProject",
        "summary": "Get SSH Key",
        "description": "Get the ssh public key for the specified project",
        "security": [
          {
            "permissions": [
              "project:manager"
            ],
            "apikey": []
          }
        ],
        "parameters": [
          {
            "name": "orgid",
            "in": "path",
            "description": "Organization identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectid",
            "in": "path",
            "description": "Project identifier",
            "required": true,
            "type": "string"
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X GET\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/orgs/{orgid}/projects/{projectid}/sshkey"
          },
          {
            "language": "python",
            "code": "projectsApi = ProjectsApi(client)\nsshkey = projectsApi.get_ssh_key('{orgid}', '{projectid}')"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "application/json": "{\n  \"publickey\": \"ssh-rsa XXXXXXXX...\"\n}"
            },
            "schema": {
              "properties": {
                "publickey": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/orgs/{orgid}/projects/{projectid}/stats": {
      "x-swagger-router-controller": "projects",
      "get": {
        "tags": [
          "projects"
        ],
        "operationId": "getStatsForProject",
        "summary": "Get project statistics",
        "description": "Get statistics for the specified project",
        "security": [
          {
            "permissions": [
              "project:user"
            ],
            "apikey": []
          }
        ],
        "parameters": [
          {
            "name": "orgid",
            "in": "path",
            "description": "Organization identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectid",
            "in": "path",
            "description": "Project identifier",
            "required": true,
            "type": "string"
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X GET\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/orgs/{orgid}/projects/{projectid}/stats"
          },
          {
            "language": "python",
            "code": "projectsApi = ProjectsApi(client)\nstats = projectsApi.get_stats('{orgid}', '{projectid}')"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "jobCount": {
                  "type": "number"
                },
                "buildSuccessHealth": {
                  "type": "number"
                },
                "buildPoorHealth": {
                  "type": "number"
                },
                "buildCancelHealth": {
                  "type": "number"
                },
                "buildPendingHealth": {
                  "type": "number"
                },
                "successfulBuilds": {
                  "type": "number"
                },
                "canceledBuilds": {
                  "type": "number"
                },
                "failedBuilds": {
                  "type": "number"
                },
                "averageTime": {
                  "type": "number"
                },
                "averageWorkspaceSize": {
                  "type": "number"
                },
                "averageWaitTime": {
                  "type": "number"
                },
                "maxConcurrentBuilds": {
                  "type": "number"
                },
                "availableConcurrentBuilds": {
                  "type": "number"
                }
              }
            },
            "examples": {
              "application/json": "{\n  \"jobCount\":100,\n  \"buildSuccessHealth\":60,\n  \"buildPoorHealth\":20,\n  \"buildCancelHealth\":20,\n  \"successfulBuilds\":60,\n  \"canceledBuilds\":20,\n  \"failedBuilds\":20,\n  \"averageTime\":4628,\n  \"averageWorkspaceSize\":8386947559\n  \"averageWaitTime\": 3200,\n  \"maxConcurrentBuilds\": 5,\n  \"availableConcurrentbuilds\": 4\n}"
            }
          }
        }
      }
    },
    "/orgs/{orgid}/projects/{projectid}/auditlog": {
      "x-swagger-router-controller": "projects",
      "get": {
        "tags": [
          "projects"
        ],
        "operationId": "getAuditLogForProject",
        "summary": "Get audit log",
        "description": "Retrieve a list of historical settings changes for this project",
        "security": [
          {
            "permissions": [
              "project:user"
            ],
            "apikey": []
          }
        ],
        "parameters": [
          {
            "name": "orgid",
            "in": "path",
            "description": "Organization identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectid",
            "in": "path",
            "description": "Project identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of audit log records to retrieve",
            "required": false,
            "default": 25,
            "type": "number"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Skip to page number, based on per_page value",
            "required": false,
            "default": 1,
            "type": "number"
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X GET\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/orgs/{orgid}/projects/{projectid}/auditlog"
          },
          {
            "language": "python",
            "code": "projectsApi = ProjectsApi(client)\nstats = projectsApi.get_audit_log('{orgid}', '{projectid}')"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "required": [
                  "lines",
                  "updated"
                ],
                "properties": {
                  "updatingUserEmail": {
                    "type": "string"
                  },
                  "updated": {
                    "type": "string",
                    "format": "dateTime"
                  },
                  "lines": {
                    "type": "array",
                    "items": {
                      "required": [
                        "field",
                        "to"
                      ],
                      "properties": {
                        "label": {
                          "type": "string"
                        },
                        "field": {
                          "type": "string"
                        },
                        "to": {
                          "type": "string"
                        },
                        "from": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "application/json": "[\n  {\n    \"updatingUserEmail\": \"julie.smith@example.org\",\n    \"updated\": \"2015-08-04T17:18:24.532Z\",\n    \"lines\": [{\n      \"from\": \"Latest 4.x\",\n      \"to\": \"4.6.5\",\n      \"label\": \"Unity version\",\n      \"field\": \"buildtarget.settings.unityVersion\"\n    }]\n  },\n  {\n    \"updatingUserEmail\": \"sandra.johnson@example.org\",\n    \"updated\": \"2015-08-02T12:02:44.532Z\",\n    \"lines\": [{\n      \"label\": \"Keypass\",\n      \"field\": \"buildtarget.settings.platform.keystoreInfo.keypass\",\n      \"from\": \"\",\n      \"to\": \"changed\"\n    }]\n  }\n]"
            }
          }
        }
      }
    },
    "/orgs/{orgid}/projects/{projectid}/hooks": {
      "x-swagger-router-controller": "hooks",
      "get": {
        "tags": [
          "webhooks"
        ],
        "operationId": "listHooksForProject",
        "summary": "List hooks for project",
        "description": "List all hooks configured for the specified project",
        "security": [
          {
            "permissions": [
              "project:user"
            ],
            "apikey": []
          }
        ],
        "parameters": [
          {
            "name": "orgid",
            "in": "path",
            "description": "Organization identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectid",
            "in": "path",
            "description": "Project identifier",
            "required": true,
            "type": "string"
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X GET\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/orgs/{orgid}/projects/{projectid}/hooks"
          },
          {
            "language": "python",
            "code": "hooksApi = WebhooksApi(client);\nhooksApi.list_hooks_for_project('{orgid}', '{projectid}')"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "application/json": "[\n  {\n    \"hookType\": \"web\",\n    \"events\": [\n      \"ProjectBuildSuccess\",\n      \"ProjectBuildFailure\"\n    ],\n    \"config\": {\n      \"encoding\": \"json\",\n      \"sslVerify\": true,\n      \"url\": \"http://unity3d.com/example\"\n    },\n    \"active\": true,\n    \"id\": 7\n  },\n  {\n    \"hookType\": \"web\",\n    \"events\": [\n      \"ProjectBuildQueued\",\n      \"ProjectBuildStarted\",\n      \"ProjectBuildRestarted\",\n      \"ProjectBuildSuccess\",\n      \"ProjectBuildFailure\"\n    ],\n    \"config\": {\n      \"url\": \"http://unity3d.com/example2\"\n    },\n    \"active\": true,\n    \"id\": 8\n  }\n]"
            },
            "schema": {
              "type": "array",
              "items": {
                "required": [
                  "hookType",
                  "config"
                ],
                "properties": {
                  "hookType": {
                    "enum": [
                      "web",
                      "slack"
                    ],
                    "type": "string"
                  },
                  "events": {
                    "type": "array",
                    "items": {
                      "enum": [
                        "ProjectBuildQueued",
                        "ProjectBuildStarted",
                        "ProjectBuildRestarted",
                        "ProjectBuildSuccess",
                        "ProjectBuildFailure",
                        "ProjectBuildCanceled",
                        "ProjectBuildUpload"
                      ],
                      "type": "string"
                    }
                  },
                  "config": {
                    "type": "object"
                  },
                  "active": {
                    "type": "boolean",
                    "default": true
                  },
                  "id": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "webhooks"
        ],
        "operationId": "addHookForProject",
        "summary": "Add hook for project",
        "description": "Adds a new project level hook. A project level hook is only triggered by events from the specific project.\nNOTE: you must be a manager in the organization to add new hooks.\n<h4>Hook Type Configuration Parameters</h4>\n<div class=\"webhook-tag-desc\">\n<table>\n<tr><th>Type</th><th>Configuration Options</th></tr>\n<tr>\n   <td><code>web</code>\n   <td>\n      <table>\n         <tr><th>url</th><td>Endpoint to submit POST request</td></tr>\n         <tr><th>encoding</th><td>Either <code>json</code> (default) or <code>form</code></td></tr>\n         <tr><th>sslVerify</th><td>Verify SSL certificates of HTTPS endpoint</td></tr>\n         <tr><th>secret</th><td>Used to compute the SHA256 HMAC signature of the hook body and adds\n         a <code>X-UnityCloudBuild-Signature</code> header to the payload</td></tr>\n      </table>\n   </td>\n</tr>\n<tr>\n   <td><code>slack</code>\n   <td>\n      <table>\n         <tr><th>url</th><td>Slack incoming webhook URL. Learn more at https://api.slack.com/incoming-webhooks</td></tr>\n      </table>\n   </td>\n</tr>\n</table>\n</div>\n",
        "security": [
          {
            "permissions": [
              "project:manager"
            ],
            "apikey": []
          }
        ],
        "parameters": [
          {
            "name": "orgid",
            "in": "path",
            "description": "Organization identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectid",
            "in": "path",
            "description": "Project identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "options",
            "in": "body",
            "schema": {
              "required": [
                "hookType",
                "config"
              ],
              "properties": {
                "hookType": {
                  "enum": [
                    "web",
                    "slack"
                  ],
                  "type": "string"
                },
                "events": {
                  "type": "array",
                  "items": {
                    "enum": [
                      "ProjectBuildQueued",
                      "ProjectBuildStarted",
                      "ProjectBuildRestarted",
                      "ProjectBuildSuccess",
                      "ProjectBuildFailure",
                      "ProjectBuildCanceled",
                      "ProjectBuildUpload"
                    ],
                    "type": "string"
                  }
                },
                "config": {
                  "type": "object"
                },
                "active": {
                  "type": "boolean",
                  "default": true
                }
              }
            }
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X POST\n  -H \"Content-Type: application/json\"\n  -d '{\"hookType\":\"web\",\"events\":[\"ProjectBuildSuccess\",\"ProjectBuildFailure\"],\"config\":{\"url\":\"http://unity3d.com/example\"}}'\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/orgs/{orgid}/projects/{projectid}/hooks"
          },
          {
            "language": "python",
            "code": "hooksApi = HooksApi(client)\nhook = hooksApi.add_hook_for_project('{orgid}', '{projectid}', config)"
          }
        ],
        "responses": {
          "201": {
            "description": "OK",
            "examples": {
              "application/json": "{\n  \"hookType\": \"web\",\n  \"events\": [\n    \"ProjectBuildSuccess\",\n    \"ProjectBuildFailure\"\n  ],\n  \"config\": {\n    \"encoding\": \"json\",\n    \"sslVerify\": true,\n    \"url\": \"http://unity3d.com/example\"\n  },\n  \"active\": true,\n  \"id\": 7\n}"
            },
            "schema": {
              "required": [
                "hookType",
                "config"
              ],
              "properties": {
                "hookType": {
                  "enum": [
                    "web",
                    "slack"
                  ],
                  "type": "string"
                },
                "events": {
                  "type": "array",
                  "items": {
                    "enum": [
                      "ProjectBuildQueued",
                      "ProjectBuildStarted",
                      "ProjectBuildRestarted",
                      "ProjectBuildSuccess",
                      "ProjectBuildFailure",
                      "ProjectBuildCanceled",
                      "ProjectBuildUpload"
                    ],
                    "type": "string"
                  }
                },
                "config": {
                  "type": "object"
                },
                "active": {
                  "type": "boolean",
                  "default": true
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/orgs/{orgid}/projects/{projectid}/hooks/{id}": {
      "x-swagger-router-controller": "hooks",
      "get": {
        "tags": [
          "webhooks"
        ],
        "operationId": "getHookForProject",
        "summary": "Get project hook details",
        "description": "Get details of a hook by id",
        "security": [
          {
            "permissions": [
              "project:user"
            ],
            "apikey": []
          }
        ],
        "parameters": [
          {
            "name": "orgid",
            "in": "path",
            "description": "Organization identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectid",
            "in": "path",
            "description": "Project identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Hook record identifier",
            "required": true,
            "type": "string"
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X GET\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/orgs/{orgid}/hooks/projects/{projectid}/hooks/{id}"
          },
          {
            "language": "python",
            "code": "orgsApi = ProjectsApi(client);\norgsApi.get_hook('{orgid}', '{projectid}', '{id}')"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "application/json": "{\n  \"hookType\": \"web\",\n  \"events\": [\n    \"ProjectBuildSuccess\",\n    \"ProjectBuildFailure\"\n  ],\n  \"config\": {\n    \"encoding\": \"json\",\n    \"sslVerify\": true,\n    \"url\": \"http://unity3d.com/example\"\n  },\n  \"active\": true,\n  \"id\": 7\n}"
            },
            "schema": {
              "required": [
                "hookType",
                "config"
              ],
              "properties": {
                "hookType": {
                  "enum": [
                    "web",
                    "slack"
                  ],
                  "type": "string"
                },
                "events": {
                  "type": "array",
                  "items": {
                    "enum": [
                      "ProjectBuildQueued",
                      "ProjectBuildStarted",
                      "ProjectBuildRestarted",
                      "ProjectBuildSuccess",
                      "ProjectBuildFailure",
                      "ProjectBuildCanceled",
                      "ProjectBuildUpload"
                    ],
                    "type": "string"
                  }
                },
                "config": {
                  "type": "object"
                },
                "active": {
                  "type": "boolean",
                  "default": true
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "webhooks"
        ],
        "operationId": "deleteHookForProject",
        "summary": "Delete project hook",
        "security": [
          {
            "permissions": [
              "project:manager"
            ],
            "apikey": []
          }
        ],
        "parameters": [
          {
            "name": "orgid",
            "in": "path",
            "description": "Organization identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectid",
            "in": "path",
            "description": "Project identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Hook record identifier",
            "required": true,
            "type": "string"
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X DELETE\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/orgs/{orgid}/hooks/projects/{projectid}/hooks/{id}"
          },
          {
            "language": "python",
            "code": "orgsApi = ProjectsApi(client)\norgsApi.delete_hook('{orgid}', '{projectid}', '{id}')"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "put": {
        "tags": [
          "webhooks"
        ],
        "operationId": "updateHookForProject",
        "summary": "Update hook for project",
        "description": "Update an existing hook. NOTE: you must be a manager of the\nproject to update hooks.\n",
        "security": [
          {
            "permissions": [
              "project:manager"
            ],
            "apikey": []
          }
        ],
        "parameters": [
          {
            "name": "orgid",
            "in": "path",
            "description": "Organization identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectid",
            "in": "path",
            "description": "Project identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Hook record identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "options",
            "in": "body",
            "schema": {
              "required": [
                "hookType",
                "config"
              ],
              "properties": {
                "hookType": {
                  "enum": [
                    "web",
                    "slack"
                  ],
                  "type": "string"
                },
                "events": {
                  "type": "array",
                  "items": {
                    "enum": [
                      "ProjectBuildQueued",
                      "ProjectBuildStarted",
                      "ProjectBuildRestarted",
                      "ProjectBuildSuccess",
                      "ProjectBuildFailure",
                      "ProjectBuildCanceled",
                      "ProjectBuildUpload"
                    ],
                    "type": "string"
                  }
                },
                "config": {
                  "type": "object"
                },
                "active": {
                  "type": "boolean",
                  "default": true
                }
              }
            }
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X POST\n  -H \"Content-Type: application/json\"\n  -d '{\"hookType\":\"web\", \"active\":true, \"config\":{}}'\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/orgs/{orgid}/hooks/{id}"
          },
          {
            "language": "python",
            "code": "hooksApi = HooksApi(client)\nhook = hooksApi.update_hook('{hookid}', options)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "application/json": "{\n  \"hookType\": \"web\",\n  \"events\": [\n    \"ProjectBuildSuccess\",\n    \"ProjectBuildFailure\"\n  ],\n  \"config\": {\n    \"encoding\": \"json\",\n    \"sslVerify\": true,\n    \"url\": \"http://unity3d.com/example\"\n  },\n  \"active\": true,\n  \"id\": 7\n}"
            },
            "schema": {
              "required": [
                "hookType",
                "config"
              ],
              "properties": {
                "hookType": {
                  "enum": [
                    "web",
                    "slack"
                  ],
                  "type": "string"
                },
                "events": {
                  "type": "array",
                  "items": {
                    "enum": [
                      "ProjectBuildQueued",
                      "ProjectBuildStarted",
                      "ProjectBuildRestarted",
                      "ProjectBuildSuccess",
                      "ProjectBuildFailure",
                      "ProjectBuildCanceled",
                      "ProjectBuildUpload"
                    ],
                    "type": "string"
                  }
                },
                "config": {
                  "type": "object"
                },
                "active": {
                  "type": "boolean",
                  "default": true
                },
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/orgs/{orgid}/projects/{projectid}/hooks/{id}/ping": {
      "x-swagger-router-controller": "hooks",
      "post": {
        "tags": [
          "webhooks"
        ],
        "operationId": "pingHookForProject",
        "summary": "Ping a project hook",
        "description": "Send a ping event to a project hook.\n",
        "security": [
          {
            "permissions": [
              "project:user"
            ],
            "apikey": []
          }
        ],
        "parameters": [
          {
            "name": "orgid",
            "in": "path",
            "description": "Organization identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectid",
            "in": "path",
            "description": "Project identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Hook record identifier",
            "required": true,
            "type": "string"
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X POST\n  -H \"Content-Type: application/json\"\n  -d '{}'\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/orgs/{orgid}/projects/{projectid}/hooks/{id}/ping"
          },
          {
            "language": "python",
            "code": "hooksApi = HooksApi(client)\nhook = hooksApi.ping_hook('{orgid}', '{projectid}', '{hookid}')"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/orgs/{orgid}/projects/{projectid}/envvars": {
      "x-swagger-router-controller": "envvars",
      "get": {
        "tags": [
          "projects"
        ],
        "operationId": "getEnvVariablesForProject",
        "summary": "Get environment variables",
        "description": "Get all configured environment variables for a given project",
        "security": [
          {
            "permissions": [
              "project:manager"
            ],
            "apikey": []
          }
        ],
        "parameters": [
          {
            "name": "orgid",
            "in": "path",
            "description": "Organization identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectid",
            "in": "path",
            "description": "Project identifier",
            "required": true,
            "type": "string"
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X GET\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/orgs/{orgid}/projects/{projectid}/envvars"
          },
          {
            "language": "python",
            "code": "buildtargetsApi = BuildtargetsApi(client)\nbuildtargetsApi.get_env_variables_for_project('{orgid}', '{projectid}')"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "Object containing env variables. Name must follow env variable spec - a word consisting solely of underscores,\ndigits, and alphabetics from the portable character set. The first character of a name is not a digit. May not\noverride widely used env variables (see IEEE Std 1003.1-2008).",
              "example": {
                "MY_ENV_VARIABLE": "yellow",
                "BUILD_SERVICE": "https://build-api.cloud.unity3d.com/",
                "PORT": "1000"
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "projects"
        ],
        "operationId": "setEnvVariablesForProject",
        "summary": "Set environment variables",
        "description": "Set all configured environment variables for a given project",
        "security": [
          {
            "permissions": [
              "project:manager"
            ],
            "apikey": []
          }
        ],
        "parameters": [
          {
            "name": "orgid",
            "in": "path",
            "description": "Organization identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectid",
            "in": "path",
            "description": "Project identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "envvars",
            "in": "body",
            "description": "Environment variables",
            "required": true,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "Object containing env variables. Name must follow env variable spec - a word consisting solely of underscores,\ndigits, and alphabetics from the portable character set. The first character of a name is not a digit. May not\noverride widely used env variables (see IEEE Std 1003.1-2008).",
              "example": {
                "MY_ENV_VARIABLE": "yellow",
                "BUILD_SERVICE": "https://build-api.cloud.unity3d.com/",
                "PORT": "1000"
              }
            }
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X PUT\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/orgs/{orgid}/projects/{projectid}/envvars"
          },
          {
            "language": "python",
            "code": "buildtargetsApi = BuildtargetsApi(client)\nbuildtargetsApi.set_env_variables_for_project('{orgid}', '{projectid}', '{envvars}')"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "Object containing env variables. Name must follow env variable spec - a word consisting solely of underscores,\ndigits, and alphabetics from the portable character set. The first character of a name is not a digit. May not\noverride widely used env variables (see IEEE Std 1003.1-2008).",
              "example": {
                "MY_ENV_VARIABLE": "yellow",
                "BUILD_SERVICE": "https://build-api.cloud.unity3d.com/",
                "PORT": "1000"
              }
            }
          }
        }
      }
    },
    "/orgs/{orgid}/projects/{projectid}/buildtargets": {
      "x-swagger-router-controller": "buildtargets",
      "get": {
        "tags": [
          "buildtargets"
        ],
        "operationId": "getBuildTargets",
        "summary": "List all build targets for a project",
        "description": "Gets all configured build targets for a project, regardless of whether they are enabled. Add \"?include=settings,credentials\"\nas a query parameter to include the build target settings and credentials with the response.\n",
        "security": [
          {
            "permissions": [
              "project:user"
            ],
            "apikey": []
          }
        ],
        "parameters": [
          {
            "name": "orgid",
            "in": "path",
            "description": "Organization identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectid",
            "in": "path",
            "description": "Project identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Extra fields to include in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "include_last_success",
            "in": "query",
            "description": "Include last successful build",
            "required": false,
            "default": false,
            "type": "boolean"
          }
        ],
        "x-includequery-properties": [
          "settings",
          "credentials"
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X GET\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/orgs/{orgid}/projects/{projectid}/buildtargets"
          },
          {
            "language": "python",
            "code": "buildtargetsApi = BuildtargetsApi(client)\nbuildtargets = buildtargetsApi.get_build_targets('{orgid}', '{projectid}')"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "application/json": "[\n  {\n    \"name\": \"Default WebGL\",\n    \"platform\": \"webgl\",\n    \"buildtargetid\": \"default-webgl\",\n    \"enabled\": true,\n    \"links\": {\n      \"self\": {\n        \"method\": \"get\",\n        \"href\": \"/api/v1/orgs/example-org/projects/new-project/buildtargets/default-webgl\"\n      },\n      \"start_builds\": {\n        \"method\": \"post\",\n        \"href\": \"/api/v1/orgs/example-org/projects/new-project/buildtargets/default-webgl/builds\"\n      },\n      \"list_builds\": {\n        \"method\": \"get\",\n        \"href\": \"/api/v1/orgs/example-org/projects/new-project/buildtargets/default-webgl/builds\"\n      },\n      \"cancel_builds\": {\n        \"method\": \"delete\",\n        \"href\": \"/api/v1/orgs/example-org/projects/new-project/buildtargets/default-webgl/builds\"\n      },\n      \"polling\": {\n        \"method\": \"post\",\n        \"href\": \"/api/v1/orgs/example-org/projects/new-project/buildtargets/default-webgl/polling\"\n      }\n    }\n  },\n  {\n    \"name\": \"Default Linux desktop Universal\",\n    \"platform\": \"standalonelinuxuniversal\",\n    \"buildtargetid\": \"default-linux-desktop-universal\",\n    \"enabled\": true,\n    \"links\": {\n      \"self\": {\n        \"method\": \"get\",\n        \"href\": \"/api/v1/orgs/example-org/projects/new-project/buildtargets/default-linux-desktop-universal\"\n      },\n      \"start_builds\": {\n        \"method\": \"post\",\n        \"href\": \"/api/v1/orgs/example-org/projects/new-project/buildtargets/default-linux-desktop-universal/builds\"\n      },\n      \"list_builds\": {\n        \"method\": \"get\",\n        \"href\": \"/api/v1/orgs/example-org/projects/new-project/buildtargets/default-linux-desktop-universal/builds\"\n      },\n      \"cancel_builds\": {\n        \"method\": \"delete\",\n        \"href\": \"/api/v1/orgs/example-org/projects/new-project/buildtargets/default-linux-desktop-universal/builds\"\n      },\n      \"polling\": {\n        \"method\": \"post\",\n        \"href\": \"/api/v1/orgs/example-org/projects/new-project/buildtargets/default-linux-desktop-universal/polling\"\n      }\n    }\n  }\n]"
            },
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 64
                  },
                  "platform": {
                    "type": "string",
                    "enum": [
                      "ios",
                      "android",
                      "webplayer",
                      "webgl",
                      "standaloneosxintel",
                      "standaloneosxintel64",
                      "standaloneosxuniversal",
                      "standalonewindows",
                      "standalonewindows64",
                      "standalonelinux",
                      "standalonelinux64",
                      "standalonelinuxuniversal"
                    ]
                  },
                  "buildtargetid": {
                    "description": "unique id auto-generated from the build target name",
                    "type": "string"
                  },
                  "enabled": {
                    "description": "whether this target can be built by the API",
                    "type": "boolean"
                  },
                  "settings": {
                    "properties": {
                      "autoBuild": {
                        "description": "start builds automatically when your repo is updated",
                        "type": "boolean"
                      },
                      "unityVersion": {
                        "description": "'latest' or a unity dot version with underscores (ex. '4_6_5')",
                        "type": "string"
                      },
                      "autoDetectUnityVersion": {
                        "description": "attempt to automatically detect which unity version to use, fallback to specified unityVersion if unable to.",
                        "type": "boolean"
                      },
                      "fallbackPatchVersion": {
                        "description": "attempt to get a similar unity patch version to use, applies to unavailable auto-detected Unity versions only.",
                        "type": "boolean"
                      },
                      "executablename": {
                        "type": "string"
                      },
                      "scm": {
                        "properties": {
                          "type": {
                            "enum": [
                              "git",
                              "svn",
                              "p4",
                              "hg",
                              "collab",
                              "oauth",
                              "plastic"
                            ],
                            "type": "string"
                          },
                          "repo": {
                            "description": "Which repo to use. Only applies to Plastic SCM, other SCM types configure repo on the project level.",
                            "type": "string"
                          },
                          "branch": {
                            "type": "string"
                          },
                          "subdirectory": {
                            "description": "subdirectory to build from",
                            "type": "string"
                          },
                          "client": {
                            "description": "perforce only client workspace to build from",
                            "type": "string"
                          }
                        }
                      },
                      "platform": {
                        "properties": {
                          "bundleId": {
                            "description": "a unique identifier (com.example.name)",
                            "type": "string"
                          },
                          "xcodeVersion": {
                            "description": "'latest' or a supported xcode version (ex. 'xcode7')",
                            "type": "string"
                          }
                        }
                      },
                      "autoBuildCancellation": {
                        "type": "boolean",
                        "default": false
                      },
                      "advanced": {
                        "properties": {
                          "xcode": {
                            "properties": {
                              "useArchiveAndExport": {
                                "type": "boolean"
                              },
                              "customFastlaneConfigPath": {
                                "description": "The path (including file name) from the project root to the custom FastLane configuration json file to configure multiple provisioning files, or customize the FastLane build process.\nSee https://forum.unity.com/threads/xcode-9-multiple-provisioning-profiles.545121/\nWill look for Assets/ucb_xcode_fastlane.json by default, if not specified.",
                                "type": "string"
                              },
                              "shouldNotarize": {
                                "description": "Only used with OSX targets, this triggers signing and notarization process for the executable.",
                                "type": "boolean"
                              }
                            }
                          },
                          "android": {
                            "properties": {
                              "buildAppBundle": {
                                "type": "boolean"
                              }
                            }
                          },
                          "unity": {
                            "properties": {
                              "preExportMethod": {
                                "description": "The fully-qualified name of a public static method you want us to call before we start the Unity build process.\nFor example: ClassName.NeatMethod or NameSpace.ClassName.NeatMethod.\nNo trailing parenthesis, and it can't have the same name as your Post-Export method!",
                                "type": "string"
                              },
                              "postExportMethod": {
                                "description": "The fully-qualified name of a public static method you want us to call after we finish the Unity build process\n(but before Xcode). For example: ClassName.CoolMethod or NameSpace.ClassName.CoolMethod. No trailing parenthesis,\nand it can't have the same name as your Post-Export method! This method must accept a string parameter, which\nwill receive the path to the exported Unity player (or Xcode project in the case of iOS).",
                                "type": "string"
                              },
                              "preBuildScript": {
                                "description": "Relative path to the script that should be run before the build process starts.",
                                "type": "string"
                              },
                              "postBuildScript": {
                                "description": "Relative path to the script that should be run after the build process finishes.",
                                "type": "string"
                              },
                              "scriptingDefineSymbols": {
                                "description": "Enter the names of the symbols you want to define for iOS. These symbols can then be used as the conditions\nfor #if directives just like the built-in ones. (i.e. #IF MYDEFINE or #IF AMAZON)",
                                "type": "string"
                              },
                              "playerExporter": {
                                "properties": {
                                  "sceneList": {
                                    "description": "A list of scenes to build overriding those specified in the Build Settings menu of your Unity project.",
                                    "type": "array",
                                    "items": {
                                      "description": "scene names",
                                      "type": "string"
                                    }
                                  },
                                  "buildOptions": {
                                    "description": "Unity Editor build options. Use BuildOptions.Development and BuildOptions.AllowDebugging to create a development build.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "export": {
                                    "description": "Enable exporting a player from Unity (i.e. running BuildPipeline.BuildPlayer). In general, this should be true, unless you\nare doing something like an asset bundle only build or unit test only build without generating an actual build artifact.",
                                    "type": "boolean",
                                    "default": true
                                  }
                                }
                              },
                              "playerSettings": {
                                "properties": {
                                  "Android": {
                                    "properties": {
                                      "useAPKExpansionFiles": {
                                        "description": "break up android apk into an installable apk and expansion files",
                                        "type": "boolean"
                                      }
                                    }
                                  }
                                }
                              },
                              "editorUserBuildSettings": {
                                "properties": {
                                  "androidBuildSystem": {
                                    "description": "which android build system to build with (android only, supported in Unity 5.5+)",
                                    "enum": [
                                      "internal",
                                      "gradle"
                                    ],
                                    "type": "string"
                                  }
                                }
                              },
                              "assetBundles": {
                                "properties": {
                                  "buildBundles": {
                                    "description": "enable asset bundle builds for this target",
                                    "type": "boolean"
                                  },
                                  "basePath": {
                                    "description": "base path relative to Assets folder where asset bundles are output. Default is 'AssetBundles'",
                                    "type": "string"
                                  },
                                  "buildAssetBundleOptions": {
                                    "description": "comma separated list of flags from BuildAssetBundleOptions. see https://docs.unity3d.com/ScriptReference/BuildAssetBundleOptions.html",
                                    "type": "string"
                                  },
                                  "copyToStreamingAssets": {
                                    "description": "copy bundles to streaming assets folder, which will be packaged into the exported player.",
                                    "type": "boolean"
                                  },
                                  "copyBundlePatterns": {
                                    "description": "array of patterns to match (C# Regular Expressions) when copying asset bundle files. By default, all bundles will be copied.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "addressables": {
                                "properties": {
                                  "buildAddressables": {
                                    "description": "enable addressable builds for this target",
                                    "type": "boolean"
                                  },
                                  "contentUpdate": {
                                    "description": "Update a previously built player with new Addressable Content.",
                                    "type": "boolean"
                                  },
                                  "profileName": {
                                    "description": "which addressables profile should be used for the build",
                                    "type": "string"
                                  },
                                  "failedAddressablesFailsBuild": {
                                    "description": "Exit and mark the build as failed if an error occurs when addressables are built",
                                    "type": "boolean",
                                    "default": true
                                  },
                                  "contentUpdateSettings": {
                                    "properties": {
                                      "contentStatePath": {
                                        "description": "The path to a Content State .bin file relative to the project root",
                                        "type": "string"
                                      },
                                      "linkedTargetId": {
                                        "description": "The Id of the build target to obtain a Content State .bin file from",
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "runUnitTests": {
                                "description": "Run any unit tests your project has when a build happens.",
                                "type": "boolean"
                              },
                              "runEditModeTests": {
                                "description": "Should Edit Mode unit tests be run? NOTE: requires runUnitTests to be true and building\nwith Unity 5.6 or newer.",
                                "type": "boolean"
                              },
                              "runPlayModeTests": {
                                "description": "Should Play Mode unit tests be run? NOTE: requires runUnitTests to be true and building\nwith Unity 5.6 or newer.",
                                "type": "boolean"
                              },
                              "failedUnitTestFailsBuild": {
                                "description": "Mark builds as failed if the unit tests do not pass.",
                                "type": "boolean"
                              },
                              "unitTestMethod": {
                                "description": "LEGACY - The Unity method to call when running unit tests (only supported in Unity 5.2 and lower).",
                                "type": "string"
                              },
                              "enableLightBake": {
                                "description": "Enable lightmap baking (disabled by default since it is very slow and usually unnecessary)",
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "lastBuilt": {
                    "properties": {
                      "unityVersion": {
                        "description": "Last Unity version built by this target. Setting this has no effect.",
                        "type": "string"
                      }
                    }
                  },
                  "credentials": {
                    "properties": {
                      "signing": {
                        "properties": {
                          "credentialid": {
                            "type": "string"
                          },
                          "credentialResourceRef": {
                            "properties": {
                              "platform": {
                                "type": "string",
                                "enum": [
                                  "ios",
                                  "android",
                                  "webplayer",
                                  "webgl",
                                  "standaloneosxintel",
                                  "standaloneosxintel64",
                                  "standaloneosxuniversal",
                                  "standalonewindows",
                                  "standalonewindows64",
                                  "standalonelinux",
                                  "standalonelinux64",
                                  "standalonelinuxuniversal"
                                ]
                              },
                              "label": {
                                "type": "string"
                              },
                              "credentialid": {
                                "type": "string"
                              },
                              "created": {
                                "type": "string"
                              },
                              "lastMod": {
                                "type": "string"
                              },
                              "certificate": {
                                "properties": {
                                  "teamId": {
                                    "type": "string",
                                    "description": "generated team id from Apple"
                                  },
                                  "certName": {
                                    "description": "certificate name (from the certificate)",
                                    "type": "string"
                                  },
                                  "expiration": {
                                    "description": "expiration date",
                                    "type": "string"
                                  },
                                  "isDistribution": {
                                    "description": "if this is a distribution certificate",
                                    "type": "boolean"
                                  },
                                  "uploaded": {
                                    "description": "uploaded date",
                                    "type": "string"
                                  }
                                }
                              },
                              "provisioningProfile": {
                                "properties": {
                                  "teamId": {
                                    "description": "generated team id from Apple",
                                    "type": "string"
                                  },
                                  "bundleId": {
                                    "description": "a unique identifier (com.example.name)",
                                    "type": "string"
                                  },
                                  "uuid": {
                                    "description": "generated UUID of the profile",
                                    "type": "string"
                                  },
                                  "expiration": {
                                    "description": "expiration date",
                                    "type": "string"
                                  },
                                  "isEnterpriseProfile": {
                                    "description": "is this compiled for Apple's enterprise program",
                                    "type": "boolean"
                                  },
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "developer",
                                      "adhoc",
                                      "appstore"
                                    ]
                                  },
                                  "numDevices": {
                                    "description": "number of devices provisioned for this certificate",
                                    "type": "number"
                                  },
                                  "uploaded": {
                                    "description": "uploaded date",
                                    "type": "string"
                                  }
                                }
                              },
                              "keystore": {
                                "properties": {
                                  "alias": {
                                    "description": "friendly name for keystore",
                                    "type": "string"
                                  },
                                  "debug": {
                                    "description": "whether this is a debug or production keystore",
                                    "type": "boolean"
                                  },
                                  "expiration": {
                                    "description": "expiration date",
                                    "type": "string"
                                  }
                                }
                              },
                              "links": {
                                "type": "object"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "builds": {
                    "type": "array",
                    "items": {
                      "description": "buildattempt",
                      "properties": {
                        "build": {
                          "type": "number"
                        },
                        "buildtargetid": {
                          "description": "unique id auto-generated from the build target name",
                          "type": "string"
                        },
                        "buildTargetName": {
                          "type": "string",
                          "maxLength": 64
                        },
                        "buildGUID": {
                          "description": "unique GUID identifying this build",
                          "type": "string"
                        },
                        "buildStatus": {
                          "enum": [
                            "queued",
                            "sentToBuilder",
                            "started",
                            "restarted",
                            "success",
                            "failure",
                            "canceled",
                            "unknown"
                          ],
                          "type": "string"
                        },
                        "cleanBuild": {
                          "description": "if the build was built without using data cached from previous builds",
                          "type": "boolean"
                        },
                        "failureDetails": {
                          "description": "list of failure details for this build attempt, when available",
                          "type": "array",
                          "items": {
                            "properties": {
                              "label": {
                                "type": "string"
                              },
                              "resolutionHint": {
                                "type": "string"
                              },
                              "stages": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "failureType": {
                                "type": "string"
                              },
                              "count": {
                                "type": "number"
                              }
                            }
                          }
                        },
                        "canceledBy": {
                          "enum": [
                            "api",
                            "service",
                            "service-timelimit"
                          ],
                          "type": "string"
                        },
                        "platform": {
                          "type": "string",
                          "enum": [
                            "ios",
                            "android",
                            "webplayer",
                            "webgl",
                            "standaloneosxintel",
                            "standaloneosxintel64",
                            "standaloneosxuniversal",
                            "standalonewindows",
                            "standalonewindows64",
                            "standalonelinux",
                            "standalonelinux64",
                            "standalonelinuxuniversal"
                          ]
                        },
                        "workspaceSize": {
                          "description": "size of workspace in bytes",
                          "type": "number"
                        },
                        "created": {
                          "description": "when the build was created",
                          "type": "string"
                        },
                        "finished": {
                          "description": "when the build completely finished",
                          "type": "string"
                        },
                        "checkoutStartTime": {
                          "description": "when the build starting checking out code",
                          "type": "string"
                        },
                        "checkoutTimeInSeconds": {
                          "description": "amount of time spent checking out code",
                          "type": "number"
                        },
                        "buildStartTime": {
                          "description": "when the build started compiling",
                          "type": "string"
                        },
                        "buildTimeInSeconds": {
                          "description": "amount of time spend compiling",
                          "type": "number"
                        },
                        "publishStartTime": {
                          "description": "when the build started saving build artifacts",
                          "type": "string"
                        },
                        "publishTimeInSeconds": {
                          "description": "amount of time spent saving build artifacts",
                          "type": "number"
                        },
                        "totalTimeInSeconds": {
                          "description": "total time for the build",
                          "type": "number"
                        },
                        "unitTestTimeInSeconds": {
                          "description": "total time for unit test execution step",
                          "type": "number"
                        },
                        "editModeTestTimeInSeconds": {
                          "description": "total time for unit test execution step",
                          "type": "number"
                        },
                        "playModeTestTimeInSeconds": {
                          "description": "total time for unit test execution step",
                          "type": "number"
                        },
                        "lastBuiltRevision": {
                          "description": "source control commit id for the build",
                          "type": "string"
                        },
                        "changeset": {
                          "description": "a list of source control changes between this and the last build",
                          "type": "array",
                          "items": {
                            "type": "object"
                          }
                        },
                        "favorited": {
                          "description": "if the build is marked as do not delete or not",
                          "type": "boolean"
                        },
                        "label": {
                          "description": "description given when a build is favorited",
                          "type": "string"
                        },
                        "deleted": {
                          "description": "if the build is deleted or not",
                          "type": "boolean"
                        },
                        "headless": {
                          "description": "if the build was built to run in linux headless mode"
                        },
                        "credentialsOutdated": {
                          "description": "if a newer credential has been attached to this buildtarget and the build can be re-signed",
                          "type": "boolean"
                        },
                        "deletedBy": {
                          "description": "email address of the user who deleted this attempt",
                          "type": "string"
                        },
                        "queuedReason": {
                          "description": "reason the build is currently waiting",
                          "enum": [
                            "targetConcurrency",
                            "cooldown",
                            "buildConcurrency",
                            "waitingForBuildAgent",
                            "evaluating",
                            "sentToBuilder",
                            "notPending"
                          ],
                          "type": "string"
                        },
                        "cooldownDate": {
                          "type": "string",
                          "description": "time until this build will be reconsidered for building"
                        },
                        "scmBranch": {
                          "description": "scm branch to be built",
                          "type": "string"
                        },
                        "unityVersion": {
                          "description": "'latest' or a unity dot version with underscores (ex. '4_6_5')",
                          "type": "string"
                        },
                        "xcodeVersion": {
                          "description": "'latest' or a supported xcode version (ex. 'xcode7')",
                          "type": "string"
                        },
                        "auditChanges": {
                          "type": "number"
                        },
                        "projectVersion": {
                          "properties": {
                            "name": {
                              "description": "automatically generated name for the build",
                              "type": "string"
                            },
                            "filename": {
                              "description": "filename for the primary artifact",
                              "type": "string"
                            },
                            "projectName": {
                              "description": "name of the project",
                              "type": "string"
                            },
                            "platform": {
                              "type": "string",
                              "enum": [
                                "ios",
                                "android",
                                "webplayer",
                                "webgl",
                                "standaloneosxintel",
                                "standaloneosxintel64",
                                "standaloneosxuniversal",
                                "standalonewindows",
                                "standalonewindows64",
                                "standalonelinux",
                                "standalonelinux64",
                                "standalonelinuxuniversal"
                              ]
                            },
                            "size": {
                              "type": "number",
                              "description": "size of the the primary build artifact in bytes"
                            },
                            "created": {
                              "type": "string",
                              "description": "creation date"
                            },
                            "lastMod": {
                              "type": "string",
                              "description": "last modified date"
                            },
                            "bundleId": {
                              "type": "string",
                              "description": "a unique identifier (com.example.name)"
                            },
                            "udids": {
                              "type": "array",
                              "description": "iPhone unique identifiers that are able to install this build",
                              "items": {
                                "type": "string"
                              }
                            },
                            "links": {
                              "description": "links to build artifacts",
                              "type": "object"
                            }
                          }
                        },
                        "projectName": {
                          "type": "string"
                        },
                        "projectId": {
                          "type": "string"
                        },
                        "projectGuid": {
                          "type": "string"
                        },
                        "orgId": {
                          "type": "string"
                        },
                        "orgFk": {
                          "type": "string"
                        },
                        "filetoken": {
                          "type": "string"
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "artifacts": {
                              "type": "array",
                              "items": {
                                "type": "object"
                              }
                            }
                          },
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string"
                              },
                              "method": {
                                "type": "string"
                              },
                              "meta": {
                                "type": "object"
                              }
                            }
                          }
                        },
                        "buildReport": {
                          "type": "object",
                          "properties": {
                            "errors": {
                              "type": "integer"
                            },
                            "warnings": {
                              "type": "integer"
                            }
                          }
                        },
                        "testResults": {
                          "description": "results from the build's unit tests, if any",
                          "type": "object",
                          "properties": {
                            "unit_test": {
                              "type": "object"
                            },
                            "unit_test_editmode": {
                              "type": "object"
                            },
                            "unit_test_playmode": {
                              "type": "object"
                            }
                          }
                        },
                        "error": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "links": {
                    "type": "object"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "buildtargets"
        ],
        "operationId": "addBuildTarget",
        "summary": "Create build target for a project",
        "security": [
          {
            "permissions": [
              "project:manager"
            ],
            "apikey": []
          }
        ],
        "parameters": [
          {
            "name": "orgid",
            "in": "path",
            "description": "Organization identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectid",
            "in": "path",
            "description": "Project identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "options",
            "in": "body",
            "required": true,
            "description": "Options for build target create/update",
            "schema": {
              "properties": {
                "name": {
                  "type": "string",
                  "maxLength": 64
                },
                "platform": {
                  "type": "string",
                  "enum": [
                    "ios",
                    "android",
                    "webplayer",
                    "webgl",
                    "standaloneosxintel",
                    "standaloneosxintel64",
                    "standaloneosxuniversal",
                    "standalonewindows",
                    "standalonewindows64",
                    "standalonelinux",
                    "standalonelinux64",
                    "standalonelinuxuniversal"
                  ]
                },
                "enabled": {
                  "type": "boolean"
                },
                "settings": {
                  "properties": {
                    "autoBuild": {
                      "description": "start builds automatically when your repo is updated",
                      "type": "boolean"
                    },
                    "unityVersion": {
                      "description": "'latest' or a unity dot version with underscores (ex. '4_6_5')",
                      "type": "string"
                    },
                    "autoDetectUnityVersion": {
                      "description": "attempt to automatically detect which unity version to use, fallback to specified unityVersion if unable to.",
                      "type": "boolean"
                    },
                    "fallbackPatchVersion": {
                      "description": "attempt to get a similar unity patch version to use, applies to unavailable auto-detected Unity versions only.",
                      "type": "boolean"
                    },
                    "executablename": {
                      "type": "string"
                    },
                    "scm": {
                      "properties": {
                        "type": {
                          "enum": [
                            "git",
                            "svn",
                            "p4",
                            "hg",
                            "collab",
                            "oauth",
                            "plastic"
                          ],
                          "type": "string"
                        },
                        "repo": {
                          "description": "Which repo to use. Only applies to Plastic SCM, other SCM types configure repo on the project level.",
                          "type": "string"
                        },
                        "branch": {
                          "type": "string"
                        },
                        "subdirectory": {
                          "description": "subdirectory to build from",
                          "type": "string"
                        },
                        "client": {
                          "description": "perforce only client workspace to build from",
                          "type": "string"
                        }
                      }
                    },
                    "platform": {
                      "properties": {
                        "bundleId": {
                          "description": "a unique identifier (com.example.name)",
                          "type": "string"
                        },
                        "xcodeVersion": {
                          "description": "'latest' or a supported xcode version (ex. 'xcode7')",
                          "type": "string"
                        }
                      }
                    },
                    "autoBuildCancellation": {
                      "type": "boolean",
                      "default": false
                    },
                    "advanced": {
                      "properties": {
                        "xcode": {
                          "properties": {
                            "useArchiveAndExport": {
                              "type": "boolean"
                            },
                            "customFastlaneConfigPath": {
                              "description": "The path (including file name) from the project root to the custom FastLane configuration json file to configure multiple provisioning files, or customize the FastLane build process.\nSee https://forum.unity.com/threads/xcode-9-multiple-provisioning-profiles.545121/\nWill look for Assets/ucb_xcode_fastlane.json by default, if not specified.",
                              "type": "string"
                            },
                            "shouldNotarize": {
                              "description": "Only used with OSX targets, this triggers signing and notarization process for the executable.",
                              "type": "boolean"
                            }
                          }
                        },
                        "android": {
                          "properties": {
                            "buildAppBundle": {
                              "type": "boolean"
                            }
                          }
                        },
                        "unity": {
                          "properties": {
                            "preExportMethod": {
                              "description": "The fully-qualified name of a public static method you want us to call before we start the Unity build process.\nFor example: ClassName.NeatMethod or NameSpace.ClassName.NeatMethod.\nNo trailing parenthesis, and it can't have the same name as your Post-Export method!",
                              "type": "string"
                            },
                            "postExportMethod": {
                              "description": "The fully-qualified name of a public static method you want us to call after we finish the Unity build process\n(but before Xcode). For example: ClassName.CoolMethod or NameSpace.ClassName.CoolMethod. No trailing parenthesis,\nand it can't have the same name as your Post-Export method! This method must accept a string parameter, which\nwill receive the path to the exported Unity player (or Xcode project in the case of iOS).",
                              "type": "string"
                            },
                            "preBuildScript": {
                              "description": "Relative path to the script that should be run before the build process starts.",
                              "type": "string"
                            },
                            "postBuildScript": {
                              "description": "Relative path to the script that should be run after the build process finishes.",
                              "type": "string"
                            },
                            "scriptingDefineSymbols": {
                              "description": "Enter the names of the symbols you want to define for iOS. These symbols can then be used as the conditions\nfor #if directives just like the built-in ones. (i.e. #IF MYDEFINE or #IF AMAZON)",
                              "type": "string"
                            },
                            "playerExporter": {
                              "properties": {
                                "sceneList": {
                                  "description": "A list of scenes to build overriding those specified in the Build Settings menu of your Unity project.",
                                  "type": "array",
                                  "items": {
                                    "description": "scene names",
                                    "type": "string"
                                  }
                                },
                                "buildOptions": {
                                  "description": "Unity Editor build options. Use BuildOptions.Development and BuildOptions.AllowDebugging to create a development build.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "export": {
                                  "description": "Enable exporting a player from Unity (i.e. running BuildPipeline.BuildPlayer). In general, this should be true, unless you\nare doing something like an asset bundle only build or unit test only build without generating an actual build artifact.",
                                  "type": "boolean",
                                  "default": true
                                }
                              }
                            },
                            "playerSettings": {
                              "properties": {
                                "Android": {
                                  "properties": {
                                    "useAPKExpansionFiles": {
                                      "description": "break up android apk into an installable apk and expansion files",
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            },
                            "editorUserBuildSettings": {
                              "properties": {
                                "androidBuildSystem": {
                                  "description": "which android build system to build with (android only, supported in Unity 5.5+)",
                                  "enum": [
                                    "internal",
                                    "gradle"
                                  ],
                                  "type": "string"
                                }
                              }
                            },
                            "assetBundles": {
                              "properties": {
                                "buildBundles": {
                                  "description": "enable asset bundle builds for this target",
                                  "type": "boolean"
                                },
                                "basePath": {
                                  "description": "base path relative to Assets folder where asset bundles are output. Default is 'AssetBundles'",
                                  "type": "string"
                                },
                                "buildAssetBundleOptions": {
                                  "description": "comma separated list of flags from BuildAssetBundleOptions. see https://docs.unity3d.com/ScriptReference/BuildAssetBundleOptions.html",
                                  "type": "string"
                                },
                                "copyToStreamingAssets": {
                                  "description": "copy bundles to streaming assets folder, which will be packaged into the exported player.",
                                  "type": "boolean"
                                },
                                "copyBundlePatterns": {
                                  "description": "array of patterns to match (C# Regular Expressions) when copying asset bundle files. By default, all bundles will be copied.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "addressables": {
                              "properties": {
                                "buildAddressables": {
                                  "description": "enable addressable builds for this target",
                                  "type": "boolean"
                                },
                                "contentUpdate": {
                                  "description": "Update a previously built player with new Addressable Content.",
                                  "type": "boolean"
                                },
                                "profileName": {
                                  "description": "which addressables profile should be used for the build",
                                  "type": "string"
                                },
                                "failedAddressablesFailsBuild": {
                                  "description": "Exit and mark the build as failed if an error occurs when addressables are built",
                                  "type": "boolean",
                                  "default": true
                                },
                                "contentUpdateSettings": {
                                  "properties": {
                                    "contentStatePath": {
                                      "description": "The path to a Content State .bin file relative to the project root",
                                      "type": "string"
                                    },
                                    "linkedTargetId": {
                                      "description": "The Id of the build target to obtain a Content State .bin file from",
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            },
                            "runUnitTests": {
                              "description": "Run any unit tests your project has when a build happens.",
                              "type": "boolean"
                            },
                            "runEditModeTests": {
                              "description": "Should Edit Mode unit tests be run? NOTE: requires runUnitTests to be true and building\nwith Unity 5.6 or newer.",
                              "type": "boolean"
                            },
                            "runPlayModeTests": {
                              "description": "Should Play Mode unit tests be run? NOTE: requires runUnitTests to be true and building\nwith Unity 5.6 or newer.",
                              "type": "boolean"
                            },
                            "failedUnitTestFailsBuild": {
                              "description": "Mark builds as failed if the unit tests do not pass.",
                              "type": "boolean"
                            },
                            "unitTestMethod": {
                              "description": "LEGACY - The Unity method to call when running unit tests (only supported in Unity 5.2 and lower).",
                              "type": "string"
                            },
                            "enableLightBake": {
                              "description": "Enable lightmap baking (disabled by default since it is very slow and usually unnecessary)",
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "credentials": {
                  "properties": {
                    "signing": {
                      "properties": {
                        "credentialid": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X POST\n  -H \"Content-Type: application/json\"\n  -d '{\"name\": \"Default Mac desktop Universal\", \"platform\": \"standaloneosxuniversal\", \"enabled\": true}'\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/orgs/{orgid}/projects/{projectid}/buildtargets"
          },
          {
            "language": "python",
            "code": "buildtargetsApi = BuildtargetsApi(client)\nbuildtarget = buildtargetsApi.add_build_target('{orgid}', '{projectid}', options={\"name\": \"Default Mac desktop Universal\", \"platform\": \"standaloneosxuniversal\", \"enabled\": True})"
          }
        ],
        "responses": {
          "201": {
            "description": "OK",
            "examples": {
              "application/json": "{\n  \"name\": \"Default Mac desktop Universal\",\n  \"platform\": \"standaloneosxuniversal\",\n  \"buildtargetid\": \"default-mac-desktop-universal\",\n  \"enabled\": true,\n  \"settings\": {\n    \"autoBuild\": false,\n    \"unityVersion\": \"latest\",\n    \"autoDetectUnityVersion\": \"false\",\n    \"fallbackPatchVersion\": \"false\",\n    \"executablename\": \"Default Mac desktop Universal\",\n    \"scm\": {\n      \"type\": \"git\"\n    },\n    \"platform\": {},\n    \"advanced\": {}\n  },\n  \"credentials\": {\n    \"signing\": {}\n  },\n  \"links\": {\n    \"self\": {\n      \"method\": \"get\",\n      \"href\": \"/api/v1/orgs/example-org/projects/new-project/buildtargets/default-mac-desktop-universal\"\n    },\n    \"start_builds\": {\n      \"method\": \"post\",\n      \"href\": \"/api/v1/orgs/example-org/projects/new-project/buildtargets/default-mac-desktop-universal/builds\"\n    },\n    \"list_builds\": {\n      \"method\": \"get\",\n      \"href\": \"/api/v1/orgs/example-org/projects/new-project/buildtargets/default-mac-desktop-universal/builds\"\n    },\n    \"cancel_builds\": {\n      \"method\": \"delete\",\n      \"href\": \"/api/v1/orgs/example-org/projects/new-project/buildtargets/default-mac-desktop-universal/builds\"\n    },\n    \"polling\": {\n      \"method\": \"post\",\n      \"href\": \"/api/v1/orgs/example-org/projects/new-project/buildtargets/default-mac-desktop-universal/polling\"\n    }\n  }\n}"
            },
            "schema": {
              "properties": {
                "name": {
                  "type": "string",
                  "maxLength": 64
                },
                "platform": {
                  "type": "string",
                  "enum": [
                    "ios",
                    "android",
                    "webplayer",
                    "webgl",
                    "standaloneosxintel",
                    "standaloneosxintel64",
                    "standaloneosxuniversal",
                    "standalonewindows",
                    "standalonewindows64",
                    "standalonelinux",
                    "standalonelinux64",
                    "standalonelinuxuniversal"
                  ]
                },
                "buildtargetid": {
                  "description": "unique id auto-generated from the build target name",
                  "type": "string"
                },
                "enabled": {
                  "description": "whether this target can be built by the API",
                  "type": "boolean"
                },
                "settings": {
                  "properties": {
                    "autoBuild": {
                      "description": "start builds automatically when your repo is updated",
                      "type": "boolean"
                    },
                    "unityVersion": {
                      "description": "'latest' or a unity dot version with underscores (ex. '4_6_5')",
                      "type": "string"
                    },
                    "autoDetectUnityVersion": {
                      "description": "attempt to automatically detect which unity version to use, fallback to specified unityVersion if unable to.",
                      "type": "boolean"
                    },
                    "fallbackPatchVersion": {
                      "description": "attempt to get a similar unity patch version to use, applies to unavailable auto-detected Unity versions only.",
                      "type": "boolean"
                    },
                    "executablename": {
                      "type": "string"
                    },
                    "scm": {
                      "properties": {
                        "type": {
                          "enum": [
                            "git",
                            "svn",
                            "p4",
                            "hg",
                            "collab",
                            "oauth",
                            "plastic"
                          ],
                          "type": "string"
                        },
                        "repo": {
                          "description": "Which repo to use. Only applies to Plastic SCM, other SCM types configure repo on the project level.",
                          "type": "string"
                        },
                        "branch": {
                          "type": "string"
                        },
                        "subdirectory": {
                          "description": "subdirectory to build from",
                          "type": "string"
                        },
                        "client": {
                          "description": "perforce only client workspace to build from",
                          "type": "string"
                        }
                      }
                    },
                    "platform": {
                      "properties": {
                        "bundleId": {
                          "description": "a unique identifier (com.example.name)",
                          "type": "string"
                        },
                        "xcodeVersion": {
                          "description": "'latest' or a supported xcode version (ex. 'xcode7')",
                          "type": "string"
                        }
                      }
                    },
                    "autoBuildCancellation": {
                      "type": "boolean",
                      "default": false
                    },
                    "advanced": {
                      "properties": {
                        "xcode": {
                          "properties": {
                            "useArchiveAndExport": {
                              "type": "boolean"
                            },
                            "customFastlaneConfigPath": {
                              "description": "The path (including file name) from the project root to the custom FastLane configuration json file to configure multiple provisioning files, or customize the FastLane build process.\nSee https://forum.unity.com/threads/xcode-9-multiple-provisioning-profiles.545121/\nWill look for Assets/ucb_xcode_fastlane.json by default, if not specified.",
                              "type": "string"
                            },
                            "shouldNotarize": {
                              "description": "Only used with OSX targets, this triggers signing and notarization process for the executable.",
                              "type": "boolean"
                            }
                          }
                        },
                        "android": {
                          "properties": {
                            "buildAppBundle": {
                              "type": "boolean"
                            }
                          }
                        },
                        "unity": {
                          "properties": {
                            "preExportMethod": {
                              "description": "The fully-qualified name of a public static method you want us to call before we start the Unity build process.\nFor example: ClassName.NeatMethod or NameSpace.ClassName.NeatMethod.\nNo trailing parenthesis, and it can't have the same name as your Post-Export method!",
                              "type": "string"
                            },
                            "postExportMethod": {
                              "description": "The fully-qualified name of a public static method you want us to call after we finish the Unity build process\n(but before Xcode). For example: ClassName.CoolMethod or NameSpace.ClassName.CoolMethod. No trailing parenthesis,\nand it can't have the same name as your Post-Export method! This method must accept a string parameter, which\nwill receive the path to the exported Unity player (or Xcode project in the case of iOS).",
                              "type": "string"
                            },
                            "preBuildScript": {
                              "description": "Relative path to the script that should be run before the build process starts.",
                              "type": "string"
                            },
                            "postBuildScript": {
                              "description": "Relative path to the script that should be run after the build process finishes.",
                              "type": "string"
                            },
                            "scriptingDefineSymbols": {
                              "description": "Enter the names of the symbols you want to define for iOS. These symbols can then be used as the conditions\nfor #if directives just like the built-in ones. (i.e. #IF MYDEFINE or #IF AMAZON)",
                              "type": "string"
                            },
                            "playerExporter": {
                              "properties": {
                                "sceneList": {
                                  "description": "A list of scenes to build overriding those specified in the Build Settings menu of your Unity project.",
                                  "type": "array",
                                  "items": {
                                    "description": "scene names",
                                    "type": "string"
                                  }
                                },
                                "buildOptions": {
                                  "description": "Unity Editor build options. Use BuildOptions.Development and BuildOptions.AllowDebugging to create a development build.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "export": {
                                  "description": "Enable exporting a player from Unity (i.e. running BuildPipeline.BuildPlayer). In general, this should be true, unless you\nare doing something like an asset bundle only build or unit test only build without generating an actual build artifact.",
                                  "type": "boolean",
                                  "default": true
                                }
                              }
                            },
                            "playerSettings": {
                              "properties": {
                                "Android": {
                                  "properties": {
                                    "useAPKExpansionFiles": {
                                      "description": "break up android apk into an installable apk and expansion files",
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            },
                            "editorUserBuildSettings": {
                              "properties": {
                                "androidBuildSystem": {
                                  "description": "which android build system to build with (android only, supported in Unity 5.5+)",
                                  "enum": [
                                    "internal",
                                    "gradle"
                                  ],
                                  "type": "string"
                                }
                              }
                            },
                            "assetBundles": {
                              "properties": {
                                "buildBundles": {
                                  "description": "enable asset bundle builds for this target",
                                  "type": "boolean"
                                },
                                "basePath": {
                                  "description": "base path relative to Assets folder where asset bundles are output. Default is 'AssetBundles'",
                                  "type": "string"
                                },
                                "buildAssetBundleOptions": {
                                  "description": "comma separated list of flags from BuildAssetBundleOptions. see https://docs.unity3d.com/ScriptReference/BuildAssetBundleOptions.html",
                                  "type": "string"
                                },
                                "copyToStreamingAssets": {
                                  "description": "copy bundles to streaming assets folder, which will be packaged into the exported player.",
                                  "type": "boolean"
                                },
                                "copyBundlePatterns": {
                                  "description": "array of patterns to match (C# Regular Expressions) when copying asset bundle files. By default, all bundles will be copied.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "addressables": {
                              "properties": {
                                "buildAddressables": {
                                  "description": "enable addressable builds for this target",
                                  "type": "boolean"
                                },
                                "contentUpdate": {
                                  "description": "Update a previously built player with new Addressable Content.",
                                  "type": "boolean"
                                },
                                "profileName": {
                                  "description": "which addressables profile should be used for the build",
                                  "type": "string"
                                },
                                "failedAddressablesFailsBuild": {
                                  "description": "Exit and mark the build as failed if an error occurs when addressables are built",
                                  "type": "boolean",
                                  "default": true
                                },
                                "contentUpdateSettings": {
                                  "properties": {
                                    "contentStatePath": {
                                      "description": "The path to a Content State .bin file relative to the project root",
                                      "type": "string"
                                    },
                                    "linkedTargetId": {
                                      "description": "The Id of the build target to obtain a Content State .bin file from",
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            },
                            "runUnitTests": {
                              "description": "Run any unit tests your project has when a build happens.",
                              "type": "boolean"
                            },
                            "runEditModeTests": {
                              "description": "Should Edit Mode unit tests be run? NOTE: requires runUnitTests to be true and building\nwith Unity 5.6 or newer.",
                              "type": "boolean"
                            },
                            "runPlayModeTests": {
                              "description": "Should Play Mode unit tests be run? NOTE: requires runUnitTests to be true and building\nwith Unity 5.6 or newer.",
                              "type": "boolean"
                            },
                            "failedUnitTestFailsBuild": {
                              "description": "Mark builds as failed if the unit tests do not pass.",
                              "type": "boolean"
                            },
                            "unitTestMethod": {
                              "description": "LEGACY - The Unity method to call when running unit tests (only supported in Unity 5.2 and lower).",
                              "type": "string"
                            },
                            "enableLightBake": {
                              "description": "Enable lightmap baking (disabled by default since it is very slow and usually unnecessary)",
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "lastBuilt": {
                  "properties": {
                    "unityVersion": {
                      "description": "Last Unity version built by this target. Setting this has no effect.",
                      "type": "string"
                    }
                  }
                },
                "credentials": {
                  "properties": {
                    "signing": {
                      "properties": {
                        "credentialid": {
                          "type": "string"
                        },
                        "credentialResourceRef": {
                          "properties": {
                            "platform": {
                              "type": "string",
                              "enum": [
                                "ios",
                                "android",
                                "webplayer",
                                "webgl",
                                "standaloneosxintel",
                                "standaloneosxintel64",
                                "standaloneosxuniversal",
                                "standalonewindows",
                                "standalonewindows64",
                                "standalonelinux",
                                "standalonelinux64",
                                "standalonelinuxuniversal"
                              ]
                            },
                            "label": {
                              "type": "string"
                            },
                            "credentialid": {
                              "type": "string"
                            },
                            "created": {
                              "type": "string"
                            },
                            "lastMod": {
                              "type": "string"
                            },
                            "certificate": {
                              "properties": {
                                "teamId": {
                                  "type": "string",
                                  "description": "generated team id from Apple"
                                },
                                "certName": {
                                  "description": "certificate name (from the certificate)",
                                  "type": "string"
                                },
                                "expiration": {
                                  "description": "expiration date",
                                  "type": "string"
                                },
                                "isDistribution": {
                                  "description": "if this is a distribution certificate",
                                  "type": "boolean"
                                },
                                "uploaded": {
                                  "description": "uploaded date",
                                  "type": "string"
                                }
                              }
                            },
                            "provisioningProfile": {
                              "properties": {
                                "teamId": {
                                  "description": "generated team id from Apple",
                                  "type": "string"
                                },
                                "bundleId": {
                                  "description": "a unique identifier (com.example.name)",
                                  "type": "string"
                                },
                                "uuid": {
                                  "description": "generated UUID of the profile",
                                  "type": "string"
                                },
                                "expiration": {
                                  "description": "expiration date",
                                  "type": "string"
                                },
                                "isEnterpriseProfile": {
                                  "description": "is this compiled for Apple's enterprise program",
                                  "type": "boolean"
                                },
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "developer",
                                    "adhoc",
                                    "appstore"
                                  ]
                                },
                                "numDevices": {
                                  "description": "number of devices provisioned for this certificate",
                                  "type": "number"
                                },
                                "uploaded": {
                                  "description": "uploaded date",
                                  "type": "string"
                                }
                              }
                            },
                            "keystore": {
                              "properties": {
                                "alias": {
                                  "description": "friendly name for keystore",
                                  "type": "string"
                                },
                                "debug": {
                                  "description": "whether this is a debug or production keystore",
                                  "type": "boolean"
                                },
                                "expiration": {
                                  "description": "expiration date",
                                  "type": "string"
                                }
                              }
                            },
                            "links": {
                              "type": "object"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "builds": {
                  "type": "array",
                  "items": {
                    "description": "buildattempt",
                    "properties": {
                      "build": {
                        "type": "number"
                      },
                      "buildtargetid": {
                        "description": "unique id auto-generated from the build target name",
                        "type": "string"
                      },
                      "buildTargetName": {
                        "type": "string",
                        "maxLength": 64
                      },
                      "buildGUID": {
                        "description": "unique GUID identifying this build",
                        "type": "string"
                      },
                      "buildStatus": {
                        "enum": [
                          "queued",
                          "sentToBuilder",
                          "started",
                          "restarted",
                          "success",
                          "failure",
                          "canceled",
                          "unknown"
                        ],
                        "type": "string"
                      },
                      "cleanBuild": {
                        "description": "if the build was built without using data cached from previous builds",
                        "type": "boolean"
                      },
                      "failureDetails": {
                        "description": "list of failure details for this build attempt, when available",
                        "type": "array",
                        "items": {
                          "properties": {
                            "label": {
                              "type": "string"
                            },
                            "resolutionHint": {
                              "type": "string"
                            },
                            "stages": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "failureType": {
                              "type": "string"
                            },
                            "count": {
                              "type": "number"
                            }
                          }
                        }
                      },
                      "canceledBy": {
                        "enum": [
                          "api",
                          "service",
                          "service-timelimit"
                        ],
                        "type": "string"
                      },
                      "platform": {
                        "type": "string",
                        "enum": [
                          "ios",
                          "android",
                          "webplayer",
                          "webgl",
                          "standaloneosxintel",
                          "standaloneosxintel64",
                          "standaloneosxuniversal",
                          "standalonewindows",
                          "standalonewindows64",
                          "standalonelinux",
                          "standalonelinux64",
                          "standalonelinuxuniversal"
                        ]
                      },
                      "workspaceSize": {
                        "description": "size of workspace in bytes",
                        "type": "number"
                      },
                      "created": {
                        "description": "when the build was created",
                        "type": "string"
                      },
                      "finished": {
                        "description": "when the build completely finished",
                        "type": "string"
                      },
                      "checkoutStartTime": {
                        "description": "when the build starting checking out code",
                        "type": "string"
                      },
                      "checkoutTimeInSeconds": {
                        "description": "amount of time spent checking out code",
                        "type": "number"
                      },
                      "buildStartTime": {
                        "description": "when the build started compiling",
                        "type": "string"
                      },
                      "buildTimeInSeconds": {
                        "description": "amount of time spend compiling",
                        "type": "number"
                      },
                      "publishStartTime": {
                        "description": "when the build started saving build artifacts",
                        "type": "string"
                      },
                      "publishTimeInSeconds": {
                        "description": "amount of time spent saving build artifacts",
                        "type": "number"
                      },
                      "totalTimeInSeconds": {
                        "description": "total time for the build",
                        "type": "number"
                      },
                      "unitTestTimeInSeconds": {
                        "description": "total time for unit test execution step",
                        "type": "number"
                      },
                      "editModeTestTimeInSeconds": {
                        "description": "total time for unit test execution step",
                        "type": "number"
                      },
                      "playModeTestTimeInSeconds": {
                        "description": "total time for unit test execution step",
                        "type": "number"
                      },
                      "lastBuiltRevision": {
                        "description": "source control commit id for the build",
                        "type": "string"
                      },
                      "changeset": {
                        "description": "a list of source control changes between this and the last build",
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      },
                      "favorited": {
                        "description": "if the build is marked as do not delete or not",
                        "type": "boolean"
                      },
                      "label": {
                        "description": "description given when a build is favorited",
                        "type": "string"
                      },
                      "deleted": {
                        "description": "if the build is deleted or not",
                        "type": "boolean"
                      },
                      "headless": {
                        "description": "if the build was built to run in linux headless mode"
                      },
                      "credentialsOutdated": {
                        "description": "if a newer credential has been attached to this buildtarget and the build can be re-signed",
                        "type": "boolean"
                      },
                      "deletedBy": {
                        "description": "email address of the user who deleted this attempt",
                        "type": "string"
                      },
                      "queuedReason": {
                        "description": "reason the build is currently waiting",
                        "enum": [
                          "targetConcurrency",
                          "cooldown",
                          "buildConcurrency",
                          "waitingForBuildAgent",
                          "evaluating",
                          "sentToBuilder",
                          "notPending"
                        ],
                        "type": "string"
                      },
                      "cooldownDate": {
                        "type": "string",
                        "description": "time until this build will be reconsidered for building"
                      },
                      "scmBranch": {
                        "description": "scm branch to be built",
                        "type": "string"
                      },
                      "unityVersion": {
                        "description": "'latest' or a unity dot version with underscores (ex. '4_6_5')",
                        "type": "string"
                      },
                      "xcodeVersion": {
                        "description": "'latest' or a supported xcode version (ex. 'xcode7')",
                        "type": "string"
                      },
                      "auditChanges": {
                        "type": "number"
                      },
                      "projectVersion": {
                        "properties": {
                          "name": {
                            "description": "automatically generated name for the build",
                            "type": "string"
                          },
                          "filename": {
                            "description": "filename for the primary artifact",
                            "type": "string"
                          },
                          "projectName": {
                            "description": "name of the project",
                            "type": "string"
                          },
                          "platform": {
                            "type": "string",
                            "enum": [
                              "ios",
                              "android",
                              "webplayer",
                              "webgl",
                              "standaloneosxintel",
                              "standaloneosxintel64",
                              "standaloneosxuniversal",
                              "standalonewindows",
                              "standalonewindows64",
                              "standalonelinux",
                              "standalonelinux64",
                              "standalonelinuxuniversal"
                            ]
                          },
                          "size": {
                            "type": "number",
                            "description": "size of the the primary build artifact in bytes"
                          },
                          "created": {
                            "type": "string",
                            "description": "creation date"
                          },
                          "lastMod": {
                            "type": "string",
                            "description": "last modified date"
                          },
                          "bundleId": {
                            "type": "string",
                            "description": "a unique identifier (com.example.name)"
                          },
                          "udids": {
                            "type": "array",
                            "description": "iPhone unique identifiers that are able to install this build",
                            "items": {
                              "type": "string"
                            }
                          },
                          "links": {
                            "description": "links to build artifacts",
                            "type": "object"
                          }
                        }
                      },
                      "projectName": {
                        "type": "string"
                      },
                      "projectId": {
                        "type": "string"
                      },
                      "projectGuid": {
                        "type": "string"
                      },
                      "orgId": {
                        "type": "string"
                      },
                      "orgFk": {
                        "type": "string"
                      },
                      "filetoken": {
                        "type": "string"
                      },
                      "links": {
                        "type": "object",
                        "properties": {
                          "artifacts": {
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          }
                        },
                        "additionalProperties": {
                          "type": "object",
                          "properties": {
                            "href": {
                              "type": "string"
                            },
                            "method": {
                              "type": "string"
                            },
                            "meta": {
                              "type": "object"
                            }
                          }
                        }
                      },
                      "buildReport": {
                        "type": "object",
                        "properties": {
                          "errors": {
                            "type": "integer"
                          },
                          "warnings": {
                            "type": "integer"
                          }
                        }
                      },
                      "testResults": {
                        "description": "results from the build's unit tests, if any",
                        "type": "object",
                        "properties": {
                          "unit_test": {
                            "type": "object"
                          },
                          "unit_test_editmode": {
                            "type": "object"
                          },
                          "unit_test_playmode": {
                            "type": "object"
                          }
                        }
                      },
                      "error": {
                        "type": "string"
                      }
                    }
                  }
                },
                "links": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/orgs/{orgid}/projects/{projectid}/buildtargets/{buildtargetid}": {
      "x-swagger-router-controller": "buildtargets",
      "get": {
        "tags": [
          "buildtargets"
        ],
        "operationId": "getBuildTarget",
        "summary": "Get a build target",
        "security": [
          {
            "permissions": [
              "project:user"
            ],
            "apikey": []
          }
        ],
        "parameters": [
          {
            "name": "orgid",
            "in": "path",
            "description": "Organization identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectid",
            "in": "path",
            "description": "Project identifier",
            "required": true,
            "type": "string"
          },
          {
            "description": "unique id auto-generated from the build target name",
            "name": "buildtargetid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X GET\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/orgs/{orgid}/projects/{projectid}/buildtargets/{buildtargetid}"
          },
          {
            "language": "python",
            "code": "buildtargetsApi = BuildtargetsApi(client)\nbuildtarget = buildtargetsApi.get_build_target('{orgid}', '{projectid}', '{buildtargetid}')"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "application/json": "{\n  \"name\": \"Default WebGL\",\n  \"platform\": \"webgl\",\n  \"buildtargetid\": \"default-webgl\",\n  \"enabled\": true,\n  \"settings\": {\n    \"autoBuild\": true,\n    \"unityVersion\": \"latest5\",\n    \"autoDetectUnityVersion\": \"false\",\n    \"fallbackPatchVersion\": \"false\",\n    \"executablename\": \"Default WebGL\",\n    \"scm\": {\n      \"type\": \"git\",\n      \"branch\": \"master\"\n    },\n    \"platform\": {},\n    \"advanced\": {}\n  },\n  \"credentials\": {\n    \"signing\": {}\n  },\n  \"links\": {\n    \"self\": {\n      \"method\": \"get\",\n      \"href\": \"/api/v1/orgs/example-org/projects/new-project/buildtargets/default-webgl\"\n    },\n    \"start_builds\": {\n      \"method\": \"post\",\n      \"href\": \"/api/v1/orgs/example-org/projects/new-project/buildtargets/default-webgl/builds\"\n    },\n    \"list_builds\": {\n      \"method\": \"get\",\n      \"href\": \"/api/v1/orgs/example-org/projects/new-project/buildtargets/default-webgl/builds\"\n    },\n    \"cancel_builds\": {\n      \"method\": \"delete\",\n      \"href\": \"/api/v1/orgs/example-org/projects/new-project/buildtargets/default-webgl/builds\"\n    },\n    \"polling\": {\n      \"method\": \"post\",\n      \"href\": \"/api/v1/orgs/example-org/projects/new-project/buildtargets/default-webgl/polling\"\n    }\n  }\n}"
            },
            "schema": {
              "properties": {
                "name": {
                  "type": "string",
                  "maxLength": 64
                },
                "platform": {
                  "type": "string",
                  "enum": [
                    "ios",
                    "android",
                    "webplayer",
                    "webgl",
                    "standaloneosxintel",
                    "standaloneosxintel64",
                    "standaloneosxuniversal",
                    "standalonewindows",
                    "standalonewindows64",
                    "standalonelinux",
                    "standalonelinux64",
                    "standalonelinuxuniversal"
                  ]
                },
                "buildtargetid": {
                  "description": "unique id auto-generated from the build target name",
                  "type": "string"
                },
                "enabled": {
                  "description": "whether this target can be built by the API",
                  "type": "boolean"
                },
                "settings": {
                  "properties": {
                    "autoBuild": {
                      "description": "start builds automatically when your repo is updated",
                      "type": "boolean"
                    },
                    "unityVersion": {
                      "description": "'latest' or a unity dot version with underscores (ex. '4_6_5')",
                      "type": "string"
                    },
                    "autoDetectUnityVersion": {
                      "description": "attempt to automatically detect which unity version to use, fallback to specified unityVersion if unable to.",
                      "type": "boolean"
                    },
                    "fallbackPatchVersion": {
                      "description": "attempt to get a similar unity patch version to use, applies to unavailable auto-detected Unity versions only.",
                      "type": "boolean"
                    },
                    "executablename": {
                      "type": "string"
                    },
                    "scm": {
                      "properties": {
                        "type": {
                          "enum": [
                            "git",
                            "svn",
                            "p4",
                            "hg",
                            "collab",
                            "oauth",
                            "plastic"
                          ],
                          "type": "string"
                        },
                        "repo": {
                          "description": "Which repo to use. Only applies to Plastic SCM, other SCM types configure repo on the project level.",
                          "type": "string"
                        },
                        "branch": {
                          "type": "string"
                        },
                        "subdirectory": {
                          "description": "subdirectory to build from",
                          "type": "string"
                        },
                        "client": {
                          "description": "perforce only client workspace to build from",
                          "type": "string"
                        }
                      }
                    },
                    "platform": {
                      "properties": {
                        "bundleId": {
                          "description": "a unique identifier (com.example.name)",
                          "type": "string"
                        },
                        "xcodeVersion": {
                          "description": "'latest' or a supported xcode version (ex. 'xcode7')",
                          "type": "string"
                        }
                      }
                    },
                    "autoBuildCancellation": {
                      "type": "boolean",
                      "default": false
                    },
                    "advanced": {
                      "properties": {
                        "xcode": {
                          "properties": {
                            "useArchiveAndExport": {
                              "type": "boolean"
                            },
                            "customFastlaneConfigPath": {
                              "description": "The path (including file name) from the project root to the custom FastLane configuration json file to configure multiple provisioning files, or customize the FastLane build process.\nSee https://forum.unity.com/threads/xcode-9-multiple-provisioning-profiles.545121/\nWill look for Assets/ucb_xcode_fastlane.json by default, if not specified.",
                              "type": "string"
                            },
                            "shouldNotarize": {
                              "description": "Only used with OSX targets, this triggers signing and notarization process for the executable.",
                              "type": "boolean"
                            }
                          }
                        },
                        "android": {
                          "properties": {
                            "buildAppBundle": {
                              "type": "boolean"
                            }
                          }
                        },
                        "unity": {
                          "properties": {
                            "preExportMethod": {
                              "description": "The fully-qualified name of a public static method you want us to call before we start the Unity build process.\nFor example: ClassName.NeatMethod or NameSpace.ClassName.NeatMethod.\nNo trailing parenthesis, and it can't have the same name as your Post-Export method!",
                              "type": "string"
                            },
                            "postExportMethod": {
                              "description": "The fully-qualified name of a public static method you want us to call after we finish the Unity build process\n(but before Xcode). For example: ClassName.CoolMethod or NameSpace.ClassName.CoolMethod. No trailing parenthesis,\nand it can't have the same name as your Post-Export method! This method must accept a string parameter, which\nwill receive the path to the exported Unity player (or Xcode project in the case of iOS).",
                              "type": "string"
                            },
                            "preBuildScript": {
                              "description": "Relative path to the script that should be run before the build process starts.",
                              "type": "string"
                            },
                            "postBuildScript": {
                              "description": "Relative path to the script that should be run after the build process finishes.",
                              "type": "string"
                            },
                            "scriptingDefineSymbols": {
                              "description": "Enter the names of the symbols you want to define for iOS. These symbols can then be used as the conditions\nfor #if directives just like the built-in ones. (i.e. #IF MYDEFINE or #IF AMAZON)",
                              "type": "string"
                            },
                            "playerExporter": {
                              "properties": {
                                "sceneList": {
                                  "description": "A list of scenes to build overriding those specified in the Build Settings menu of your Unity project.",
                                  "type": "array",
                                  "items": {
                                    "description": "scene names",
                                    "type": "string"
                                  }
                                },
                                "buildOptions": {
                                  "description": "Unity Editor build options. Use BuildOptions.Development and BuildOptions.AllowDebugging to create a development build.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "export": {
                                  "description": "Enable exporting a player from Unity (i.e. running BuildPipeline.BuildPlayer). In general, this should be true, unless you\nare doing something like an asset bundle only build or unit test only build without generating an actual build artifact.",
                                  "type": "boolean",
                                  "default": true
                                }
                              }
                            },
                            "playerSettings": {
                              "properties": {
                                "Android": {
                                  "properties": {
                                    "useAPKExpansionFiles": {
                                      "description": "break up android apk into an installable apk and expansion files",
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            },
                            "editorUserBuildSettings": {
                              "properties": {
                                "androidBuildSystem": {
                                  "description": "which android build system to build with (android only, supported in Unity 5.5+)",
                                  "enum": [
                                    "internal",
                                    "gradle"
                                  ],
                                  "type": "string"
                                }
                              }
                            },
                            "assetBundles": {
                              "properties": {
                                "buildBundles": {
                                  "description": "enable asset bundle builds for this target",
                                  "type": "boolean"
                                },
                                "basePath": {
                                  "description": "base path relative to Assets folder where asset bundles are output. Default is 'AssetBundles'",
                                  "type": "string"
                                },
                                "buildAssetBundleOptions": {
                                  "description": "comma separated list of flags from BuildAssetBundleOptions. see https://docs.unity3d.com/ScriptReference/BuildAssetBundleOptions.html",
                                  "type": "string"
                                },
                                "copyToStreamingAssets": {
                                  "description": "copy bundles to streaming assets folder, which will be packaged into the exported player.",
                                  "type": "boolean"
                                },
                                "copyBundlePatterns": {
                                  "description": "array of patterns to match (C# Regular Expressions) when copying asset bundle files. By default, all bundles will be copied.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "addressables": {
                              "properties": {
                                "buildAddressables": {
                                  "description": "enable addressable builds for this target",
                                  "type": "boolean"
                                },
                                "contentUpdate": {
                                  "description": "Update a previously built player with new Addressable Content.",
                                  "type": "boolean"
                                },
                                "profileName": {
                                  "description": "which addressables profile should be used for the build",
                                  "type": "string"
                                },
                                "failedAddressablesFailsBuild": {
                                  "description": "Exit and mark the build as failed if an error occurs when addressables are built",
                                  "type": "boolean",
                                  "default": true
                                },
                                "contentUpdateSettings": {
                                  "properties": {
                                    "contentStatePath": {
                                      "description": "The path to a Content State .bin file relative to the project root",
                                      "type": "string"
                                    },
                                    "linkedTargetId": {
                                      "description": "The Id of the build target to obtain a Content State .bin file from",
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            },
                            "runUnitTests": {
                              "description": "Run any unit tests your project has when a build happens.",
                              "type": "boolean"
                            },
                            "runEditModeTests": {
                              "description": "Should Edit Mode unit tests be run? NOTE: requires runUnitTests to be true and building\nwith Unity 5.6 or newer.",
                              "type": "boolean"
                            },
                            "runPlayModeTests": {
                              "description": "Should Play Mode unit tests be run? NOTE: requires runUnitTests to be true and building\nwith Unity 5.6 or newer.",
                              "type": "boolean"
                            },
                            "failedUnitTestFailsBuild": {
                              "description": "Mark builds as failed if the unit tests do not pass.",
                              "type": "boolean"
                            },
                            "unitTestMethod": {
                              "description": "LEGACY - The Unity method to call when running unit tests (only supported in Unity 5.2 and lower).",
                              "type": "string"
                            },
                            "enableLightBake": {
                              "description": "Enable lightmap baking (disabled by default since it is very slow and usually unnecessary)",
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "lastBuilt": {
                  "properties": {
                    "unityVersion": {
                      "description": "Last Unity version built by this target. Setting this has no effect.",
                      "type": "string"
                    }
                  }
                },
                "credentials": {
                  "properties": {
                    "signing": {
                      "properties": {
                        "credentialid": {
                          "type": "string"
                        },
                        "credentialResourceRef": {
                          "properties": {
                            "platform": {
                              "type": "string",
                              "enum": [
                                "ios",
                                "android",
                                "webplayer",
                                "webgl",
                                "standaloneosxintel",
                                "standaloneosxintel64",
                                "standaloneosxuniversal",
                                "standalonewindows",
                                "standalonewindows64",
                                "standalonelinux",
                                "standalonelinux64",
                                "standalonelinuxuniversal"
                              ]
                            },
                            "label": {
                              "type": "string"
                            },
                            "credentialid": {
                              "type": "string"
                            },
                            "created": {
                              "type": "string"
                            },
                            "lastMod": {
                              "type": "string"
                            },
                            "certificate": {
                              "properties": {
                                "teamId": {
                                  "type": "string",
                                  "description": "generated team id from Apple"
                                },
                                "certName": {
                                  "description": "certificate name (from the certificate)",
                                  "type": "string"
                                },
                                "expiration": {
                                  "description": "expiration date",
                                  "type": "string"
                                },
                                "isDistribution": {
                                  "description": "if this is a distribution certificate",
                                  "type": "boolean"
                                },
                                "uploaded": {
                                  "description": "uploaded date",
                                  "type": "string"
                                }
                              }
                            },
                            "provisioningProfile": {
                              "properties": {
                                "teamId": {
                                  "description": "generated team id from Apple",
                                  "type": "string"
                                },
                                "bundleId": {
                                  "description": "a unique identifier (com.example.name)",
                                  "type": "string"
                                },
                                "uuid": {
                                  "description": "generated UUID of the profile",
                                  "type": "string"
                                },
                                "expiration": {
                                  "description": "expiration date",
                                  "type": "string"
                                },
                                "isEnterpriseProfile": {
                                  "description": "is this compiled for Apple's enterprise program",
                                  "type": "boolean"
                                },
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "developer",
                                    "adhoc",
                                    "appstore"
                                  ]
                                },
                                "numDevices": {
                                  "description": "number of devices provisioned for this certificate",
                                  "type": "number"
                                },
                                "uploaded": {
                                  "description": "uploaded date",
                                  "type": "string"
                                }
                              }
                            },
                            "keystore": {
                              "properties": {
                                "alias": {
                                  "description": "friendly name for keystore",
                                  "type": "string"
                                },
                                "debug": {
                                  "description": "whether this is a debug or production keystore",
                                  "type": "boolean"
                                },
                                "expiration": {
                                  "description": "expiration date",
                                  "type": "string"
                                }
                              }
                            },
                            "links": {
                              "type": "object"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "builds": {
                  "type": "array",
                  "items": {
                    "description": "buildattempt",
                    "properties": {
                      "build": {
                        "type": "number"
                      },
                      "buildtargetid": {
                        "description": "unique id auto-generated from the build target name",
                        "type": "string"
                      },
                      "buildTargetName": {
                        "type": "string",
                        "maxLength": 64
                      },
                      "buildGUID": {
                        "description": "unique GUID identifying this build",
                        "type": "string"
                      },
                      "buildStatus": {
                        "enum": [
                          "queued",
                          "sentToBuilder",
                          "started",
                          "restarted",
                          "success",
                          "failure",
                          "canceled",
                          "unknown"
                        ],
                        "type": "string"
                      },
                      "cleanBuild": {
                        "description": "if the build was built without using data cached from previous builds",
                        "type": "boolean"
                      },
                      "failureDetails": {
                        "description": "list of failure details for this build attempt, when available",
                        "type": "array",
                        "items": {
                          "properties": {
                            "label": {
                              "type": "string"
                            },
                            "resolutionHint": {
                              "type": "string"
                            },
                            "stages": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "failureType": {
                              "type": "string"
                            },
                            "count": {
                              "type": "number"
                            }
                          }
                        }
                      },
                      "canceledBy": {
                        "enum": [
                          "api",
                          "service",
                          "service-timelimit"
                        ],
                        "type": "string"
                      },
                      "platform": {
                        "type": "string",
                        "enum": [
                          "ios",
                          "android",
                          "webplayer",
                          "webgl",
                          "standaloneosxintel",
                          "standaloneosxintel64",
                          "standaloneosxuniversal",
                          "standalonewindows",
                          "standalonewindows64",
                          "standalonelinux",
                          "standalonelinux64",
                          "standalonelinuxuniversal"
                        ]
                      },
                      "workspaceSize": {
                        "description": "size of workspace in bytes",
                        "type": "number"
                      },
                      "created": {
                        "description": "when the build was created",
                        "type": "string"
                      },
                      "finished": {
                        "description": "when the build completely finished",
                        "type": "string"
                      },
                      "checkoutStartTime": {
                        "description": "when the build starting checking out code",
                        "type": "string"
                      },
                      "checkoutTimeInSeconds": {
                        "description": "amount of time spent checking out code",
                        "type": "number"
                      },
                      "buildStartTime": {
                        "description": "when the build started compiling",
                        "type": "string"
                      },
                      "buildTimeInSeconds": {
                        "description": "amount of time spend compiling",
                        "type": "number"
                      },
                      "publishStartTime": {
                        "description": "when the build started saving build artifacts",
                        "type": "string"
                      },
                      "publishTimeInSeconds": {
                        "description": "amount of time spent saving build artifacts",
                        "type": "number"
                      },
                      "totalTimeInSeconds": {
                        "description": "total time for the build",
                        "type": "number"
                      },
                      "unitTestTimeInSeconds": {
                        "description": "total time for unit test execution step",
                        "type": "number"
                      },
                      "editModeTestTimeInSeconds": {
                        "description": "total time for unit test execution step",
                        "type": "number"
                      },
                      "playModeTestTimeInSeconds": {
                        "description": "total time for unit test execution step",
                        "type": "number"
                      },
                      "lastBuiltRevision": {
                        "description": "source control commit id for the build",
                        "type": "string"
                      },
                      "changeset": {
                        "description": "a list of source control changes between this and the last build",
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      },
                      "favorited": {
                        "description": "if the build is marked as do not delete or not",
                        "type": "boolean"
                      },
                      "label": {
                        "description": "description given when a build is favorited",
                        "type": "string"
                      },
                      "deleted": {
                        "description": "if the build is deleted or not",
                        "type": "boolean"
                      },
                      "headless": {
                        "description": "if the build was built to run in linux headless mode"
                      },
                      "credentialsOutdated": {
                        "description": "if a newer credential has been attached to this buildtarget and the build can be re-signed",
                        "type": "boolean"
                      },
                      "deletedBy": {
                        "description": "email address of the user who deleted this attempt",
                        "type": "string"
                      },
                      "queuedReason": {
                        "description": "reason the build is currently waiting",
                        "enum": [
                          "targetConcurrency",
                          "cooldown",
                          "buildConcurrency",
                          "waitingForBuildAgent",
                          "evaluating",
                          "sentToBuilder",
                          "notPending"
                        ],
                        "type": "string"
                      },
                      "cooldownDate": {
                        "type": "string",
                        "description": "time until this build will be reconsidered for building"
                      },
                      "scmBranch": {
                        "description": "scm branch to be built",
                        "type": "string"
                      },
                      "unityVersion": {
                        "description": "'latest' or a unity dot version with underscores (ex. '4_6_5')",
                        "type": "string"
                      },
                      "xcodeVersion": {
                        "description": "'latest' or a supported xcode version (ex. 'xcode7')",
                        "type": "string"
                      },
                      "auditChanges": {
                        "type": "number"
                      },
                      "projectVersion": {
                        "properties": {
                          "name": {
                            "description": "automatically generated name for the build",
                            "type": "string"
                          },
                          "filename": {
                            "description": "filename for the primary artifact",
                            "type": "string"
                          },
                          "projectName": {
                            "description": "name of the project",
                            "type": "string"
                          },
                          "platform": {
                            "type": "string",
                            "enum": [
                              "ios",
                              "android",
                              "webplayer",
                              "webgl",
                              "standaloneosxintel",
                              "standaloneosxintel64",
                              "standaloneosxuniversal",
                              "standalonewindows",
                              "standalonewindows64",
                              "standalonelinux",
                              "standalonelinux64",
                              "standalonelinuxuniversal"
                            ]
                          },
                          "size": {
                            "type": "number",
                            "description": "size of the the primary build artifact in bytes"
                          },
                          "created": {
                            "type": "string",
                            "description": "creation date"
                          },
                          "lastMod": {
                            "type": "string",
                            "description": "last modified date"
                          },
                          "bundleId": {
                            "type": "string",
                            "description": "a unique identifier (com.example.name)"
                          },
                          "udids": {
                            "type": "array",
                            "description": "iPhone unique identifiers that are able to install this build",
                            "items": {
                              "type": "string"
                            }
                          },
                          "links": {
                            "description": "links to build artifacts",
                            "type": "object"
                          }
                        }
                      },
                      "projectName": {
                        "type": "string"
                      },
                      "projectId": {
                        "type": "string"
                      },
                      "projectGuid": {
                        "type": "string"
                      },
                      "orgId": {
                        "type": "string"
                      },
                      "orgFk": {
                        "type": "string"
                      },
                      "filetoken": {
                        "type": "string"
                      },
                      "links": {
                        "type": "object",
                        "properties": {
                          "artifacts": {
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          }
                        },
                        "additionalProperties": {
                          "type": "object",
                          "properties": {
                            "href": {
                              "type": "string"
                            },
                            "method": {
                              "type": "string"
                            },
                            "meta": {
                              "type": "object"
                            }
                          }
                        }
                      },
                      "buildReport": {
                        "type": "object",
                        "properties": {
                          "errors": {
                            "type": "integer"
                          },
                          "warnings": {
                            "type": "integer"
                          }
                        }
                      },
                      "testResults": {
                        "description": "results from the build's unit tests, if any",
                        "type": "object",
                        "properties": {
                          "unit_test": {
                            "type": "object"
                          },
                          "unit_test_editmode": {
                            "type": "object"
                          },
                          "unit_test_playmode": {
                            "type": "object"
                          }
                        }
                      },
                      "error": {
                        "type": "string"
                      }
                    }
                  }
                },
                "links": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "buildtargets"
        ],
        "operationId": "updateBuildTarget",
        "summary": "Update build target details",
        "security": [
          {
            "permissions": [
              "project:manager"
            ],
            "apikey": []
          }
        ],
        "parameters": [
          {
            "name": "orgid",
            "in": "path",
            "description": "Organization identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectid",
            "in": "path",
            "description": "Project identifier",
            "required": true,
            "type": "string"
          },
          {
            "description": "unique id auto-generated from the build target name",
            "name": "buildtargetid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "options",
            "in": "body",
            "required": true,
            "description": "Options for build target create/update",
            "schema": {
              "properties": {
                "name": {
                  "type": "string",
                  "maxLength": 64
                },
                "platform": {
                  "type": "string",
                  "enum": [
                    "ios",
                    "android",
                    "webplayer",
                    "webgl",
                    "standaloneosxintel",
                    "standaloneosxintel64",
                    "standaloneosxuniversal",
                    "standalonewindows",
                    "standalonewindows64",
                    "standalonelinux",
                    "standalonelinux64",
                    "standalonelinuxuniversal"
                  ]
                },
                "enabled": {
                  "type": "boolean"
                },
                "settings": {
                  "properties": {
                    "autoBuild": {
                      "description": "start builds automatically when your repo is updated",
                      "type": "boolean"
                    },
                    "unityVersion": {
                      "description": "'latest' or a unity dot version with underscores (ex. '4_6_5')",
                      "type": "string"
                    },
                    "autoDetectUnityVersion": {
                      "description": "attempt to automatically detect which unity version to use, fallback to specified unityVersion if unable to.",
                      "type": "boolean"
                    },
                    "fallbackPatchVersion": {
                      "description": "attempt to get a similar unity patch version to use, applies to unavailable auto-detected Unity versions only.",
                      "type": "boolean"
                    },
                    "executablename": {
                      "type": "string"
                    },
                    "scm": {
                      "properties": {
                        "type": {
                          "enum": [
                            "git",
                            "svn",
                            "p4",
                            "hg",
                            "collab",
                            "oauth",
                            "plastic"
                          ],
                          "type": "string"
                        },
                        "repo": {
                          "description": "Which repo to use. Only applies to Plastic SCM, other SCM types configure repo on the project level.",
                          "type": "string"
                        },
                        "branch": {
                          "type": "string"
                        },
                        "subdirectory": {
                          "description": "subdirectory to build from",
                          "type": "string"
                        },
                        "client": {
                          "description": "perforce only client workspace to build from",
                          "type": "string"
                        }
                      }
                    },
                    "platform": {
                      "properties": {
                        "bundleId": {
                          "description": "a unique identifier (com.example.name)",
                          "type": "string"
                        },
                        "xcodeVersion": {
                          "description": "'latest' or a supported xcode version (ex. 'xcode7')",
                          "type": "string"
                        }
                      }
                    },
                    "autoBuildCancellation": {
                      "type": "boolean",
                      "default": false
                    },
                    "advanced": {
                      "properties": {
                        "xcode": {
                          "properties": {
                            "useArchiveAndExport": {
                              "type": "boolean"
                            },
                            "customFastlaneConfigPath": {
                              "description": "The path (including file name) from the project root to the custom FastLane configuration json file to configure multiple provisioning files, or customize the FastLane build process.\nSee https://forum.unity.com/threads/xcode-9-multiple-provisioning-profiles.545121/\nWill look for Assets/ucb_xcode_fastlane.json by default, if not specified.",
                              "type": "string"
                            },
                            "shouldNotarize": {
                              "description": "Only used with OSX targets, this triggers signing and notarization process for the executable.",
                              "type": "boolean"
                            }
                          }
                        },
                        "android": {
                          "properties": {
                            "buildAppBundle": {
                              "type": "boolean"
                            }
                          }
                        },
                        "unity": {
                          "properties": {
                            "preExportMethod": {
                              "description": "The fully-qualified name of a public static method you want us to call before we start the Unity build process.\nFor example: ClassName.NeatMethod or NameSpace.ClassName.NeatMethod.\nNo trailing parenthesis, and it can't have the same name as your Post-Export method!",
                              "type": "string"
                            },
                            "postExportMethod": {
                              "description": "The fully-qualified name of a public static method you want us to call after we finish the Unity build process\n(but before Xcode). For example: ClassName.CoolMethod or NameSpace.ClassName.CoolMethod. No trailing parenthesis,\nand it can't have the same name as your Post-Export method! This method must accept a string parameter, which\nwill receive the path to the exported Unity player (or Xcode project in the case of iOS).",
                              "type": "string"
                            },
                            "preBuildScript": {
                              "description": "Relative path to the script that should be run before the build process starts.",
                              "type": "string"
                            },
                            "postBuildScript": {
                              "description": "Relative path to the script that should be run after the build process finishes.",
                              "type": "string"
                            },
                            "scriptingDefineSymbols": {
                              "description": "Enter the names of the symbols you want to define for iOS. These symbols can then be used as the conditions\nfor #if directives just like the built-in ones. (i.e. #IF MYDEFINE or #IF AMAZON)",
                              "type": "string"
                            },
                            "playerExporter": {
                              "properties": {
                                "sceneList": {
                                  "description": "A list of scenes to build overriding those specified in the Build Settings menu of your Unity project.",
                                  "type": "array",
                                  "items": {
                                    "description": "scene names",
                                    "type": "string"
                                  }
                                },
                                "buildOptions": {
                                  "description": "Unity Editor build options. Use BuildOptions.Development and BuildOptions.AllowDebugging to create a development build.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "export": {
                                  "description": "Enable exporting a player from Unity (i.e. running BuildPipeline.BuildPlayer). In general, this should be true, unless you\nare doing something like an asset bundle only build or unit test only build without generating an actual build artifact.",
                                  "type": "boolean",
                                  "default": true
                                }
                              }
                            },
                            "playerSettings": {
                              "properties": {
                                "Android": {
                                  "properties": {
                                    "useAPKExpansionFiles": {
                                      "description": "break up android apk into an installable apk and expansion files",
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            },
                            "editorUserBuildSettings": {
                              "properties": {
                                "androidBuildSystem": {
                                  "description": "which android build system to build with (android only, supported in Unity 5.5+)",
                                  "enum": [
                                    "internal",
                                    "gradle"
                                  ],
                                  "type": "string"
                                }
                              }
                            },
                            "assetBundles": {
                              "properties": {
                                "buildBundles": {
                                  "description": "enable asset bundle builds for this target",
                                  "type": "boolean"
                                },
                                "basePath": {
                                  "description": "base path relative to Assets folder where asset bundles are output. Default is 'AssetBundles'",
                                  "type": "string"
                                },
                                "buildAssetBundleOptions": {
                                  "description": "comma separated list of flags from BuildAssetBundleOptions. see https://docs.unity3d.com/ScriptReference/BuildAssetBundleOptions.html",
                                  "type": "string"
                                },
                                "copyToStreamingAssets": {
                                  "description": "copy bundles to streaming assets folder, which will be packaged into the exported player.",
                                  "type": "boolean"
                                },
                                "copyBundlePatterns": {
                                  "description": "array of patterns to match (C# Regular Expressions) when copying asset bundle files. By default, all bundles will be copied.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "addressables": {
                              "properties": {
                                "buildAddressables": {
                                  "description": "enable addressable builds for this target",
                                  "type": "boolean"
                                },
                                "contentUpdate": {
                                  "description": "Update a previously built player with new Addressable Content.",
                                  "type": "boolean"
                                },
                                "profileName": {
                                  "description": "which addressables profile should be used for the build",
                                  "type": "string"
                                },
                                "failedAddressablesFailsBuild": {
                                  "description": "Exit and mark the build as failed if an error occurs when addressables are built",
                                  "type": "boolean",
                                  "default": true
                                },
                                "contentUpdateSettings": {
                                  "properties": {
                                    "contentStatePath": {
                                      "description": "The path to a Content State .bin file relative to the project root",
                                      "type": "string"
                                    },
                                    "linkedTargetId": {
                                      "description": "The Id of the build target to obtain a Content State .bin file from",
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            },
                            "runUnitTests": {
                              "description": "Run any unit tests your project has when a build happens.",
                              "type": "boolean"
                            },
                            "runEditModeTests": {
                              "description": "Should Edit Mode unit tests be run? NOTE: requires runUnitTests to be true and building\nwith Unity 5.6 or newer.",
                              "type": "boolean"
                            },
                            "runPlayModeTests": {
                              "description": "Should Play Mode unit tests be run? NOTE: requires runUnitTests to be true and building\nwith Unity 5.6 or newer.",
                              "type": "boolean"
                            },
                            "failedUnitTestFailsBuild": {
                              "description": "Mark builds as failed if the unit tests do not pass.",
                              "type": "boolean"
                            },
                            "unitTestMethod": {
                              "description": "LEGACY - The Unity method to call when running unit tests (only supported in Unity 5.2 and lower).",
                              "type": "string"
                            },
                            "enableLightBake": {
                              "description": "Enable lightmap baking (disabled by default since it is very slow and usually unnecessary)",
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "credentials": {
                  "properties": {
                    "signing": {
                      "properties": {
                        "credentialid": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X PUT\n  -H \"Content-Type: application/json\"\n  -d '{\"name\": \"Mac\", \"enabled\": false}'\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/orgs/{orgid}/projects/{projectid}/buildtargets/{buildtargetid}"
          },
          {
            "language": "python",
            "code": "buildtargetsApi = BuildtargetsApi(client)\nbuildtarget = buildtargetsApi.update_build_target('{orgid}', '{projectid}', '{buildtargetid}', options={\"name\": \"Mac\", \"enabled\": False})"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "application/json": "{\n  \"name\": \"Mac\",\n  \"platform\": \"webplayer\",\n  \"buildtargetid\": \"mac\",\n  \"enabled\": false,\n  \"settings\": {\n    \"autoBuild\": false,\n    \"unityVersion\": \"latest\",\n    \"autoDetectUnityVersion\": \"false\",\n    \"fallbackPatchVersion\": \"false\",\n    \"executablename\": \"Mac\",\n    \"scm\": {\n      \"type\": \"git\"\n    },\n    \"platform\": {},\n    \"advanced\": {}\n  },\n  \"credentials\": {\n    \"signing\": {}\n  },\n  \"links\": {\n    \"self\": {\n      \"method\": \"get\",\n      \"href\": \"/api/v1/orgs/example-org/projects/new-project/buildtargets/mac\"\n    },\n    \"start_builds\": {\n      \"method\": \"post\",\n      \"href\": \"/api/v1/orgs/example-org/projects/new-project/buildtargets/mac/builds\"\n    },\n    \"list_builds\": {\n      \"method\": \"get\",\n      \"href\": \"/api/v1/orgs/example-org/projects/new-project/buildtargets/mac/builds\"\n    },\n    \"cancel_builds\": {\n      \"method\": \"delete\",\n      \"href\": \"/api/v1/orgs/example-org/projects/new-project/buildtargets/mac/builds\"\n    },\n    \"polling\": {\n      \"method\": \"post\",\n      \"href\": \"/api/v1/orgs/example-org/projects/new-project/buildtargets/mac/polling\"\n    }\n  }\n}"
            },
            "schema": {
              "properties": {
                "name": {
                  "type": "string",
                  "maxLength": 64
                },
                "platform": {
                  "type": "string",
                  "enum": [
                    "ios",
                    "android",
                    "webplayer",
                    "webgl",
                    "standaloneosxintel",
                    "standaloneosxintel64",
                    "standaloneosxuniversal",
                    "standalonewindows",
                    "standalonewindows64",
                    "standalonelinux",
                    "standalonelinux64",
                    "standalonelinuxuniversal"
                  ]
                },
                "buildtargetid": {
                  "description": "unique id auto-generated from the build target name",
                  "type": "string"
                },
                "enabled": {
                  "description": "whether this target can be built by the API",
                  "type": "boolean"
                },
                "settings": {
                  "properties": {
                    "autoBuild": {
                      "description": "start builds automatically when your repo is updated",
                      "type": "boolean"
                    },
                    "unityVersion": {
                      "description": "'latest' or a unity dot version with underscores (ex. '4_6_5')",
                      "type": "string"
                    },
                    "autoDetectUnityVersion": {
                      "description": "attempt to automatically detect which unity version to use, fallback to specified unityVersion if unable to.",
                      "type": "boolean"
                    },
                    "fallbackPatchVersion": {
                      "description": "attempt to get a similar unity patch version to use, applies to unavailable auto-detected Unity versions only.",
                      "type": "boolean"
                    },
                    "executablename": {
                      "type": "string"
                    },
                    "scm": {
                      "properties": {
                        "type": {
                          "enum": [
                            "git",
                            "svn",
                            "p4",
                            "hg",
                            "collab",
                            "oauth",
                            "plastic"
                          ],
                          "type": "string"
                        },
                        "repo": {
                          "description": "Which repo to use. Only applies to Plastic SCM, other SCM types configure repo on the project level.",
                          "type": "string"
                        },
                        "branch": {
                          "type": "string"
                        },
                        "subdirectory": {
                          "description": "subdirectory to build from",
                          "type": "string"
                        },
                        "client": {
                          "description": "perforce only client workspace to build from",
                          "type": "string"
                        }
                      }
                    },
                    "platform": {
                      "properties": {
                        "bundleId": {
                          "description": "a unique identifier (com.example.name)",
                          "type": "string"
                        },
                        "xcodeVersion": {
                          "description": "'latest' or a supported xcode version (ex. 'xcode7')",
                          "type": "string"
                        }
                      }
                    },
                    "autoBuildCancellation": {
                      "type": "boolean",
                      "default": false
                    },
                    "advanced": {
                      "properties": {
                        "xcode": {
                          "properties": {
                            "useArchiveAndExport": {
                              "type": "boolean"
                            },
                            "customFastlaneConfigPath": {
                              "description": "The path (including file name) from the project root to the custom FastLane configuration json file to configure multiple provisioning files, or customize the FastLane build process.\nSee https://forum.unity.com/threads/xcode-9-multiple-provisioning-profiles.545121/\nWill look for Assets/ucb_xcode_fastlane.json by default, if not specified.",
                              "type": "string"
                            },
                            "shouldNotarize": {
                              "description": "Only used with OSX targets, this triggers signing and notarization process for the executable.",
                              "type": "boolean"
                            }
                          }
                        },
                        "android": {
                          "properties": {
                            "buildAppBundle": {
                              "type": "boolean"
                            }
                          }
                        },
                        "unity": {
                          "properties": {
                            "preExportMethod": {
                              "description": "The fully-qualified name of a public static method you want us to call before we start the Unity build process.\nFor example: ClassName.NeatMethod or NameSpace.ClassName.NeatMethod.\nNo trailing parenthesis, and it can't have the same name as your Post-Export method!",
                              "type": "string"
                            },
                            "postExportMethod": {
                              "description": "The fully-qualified name of a public static method you want us to call after we finish the Unity build process\n(but before Xcode). For example: ClassName.CoolMethod or NameSpace.ClassName.CoolMethod. No trailing parenthesis,\nand it can't have the same name as your Post-Export method! This method must accept a string parameter, which\nwill receive the path to the exported Unity player (or Xcode project in the case of iOS).",
                              "type": "string"
                            },
                            "preBuildScript": {
                              "description": "Relative path to the script that should be run before the build process starts.",
                              "type": "string"
                            },
                            "postBuildScript": {
                              "description": "Relative path to the script that should be run after the build process finishes.",
                              "type": "string"
                            },
                            "scriptingDefineSymbols": {
                              "description": "Enter the names of the symbols you want to define for iOS. These symbols can then be used as the conditions\nfor #if directives just like the built-in ones. (i.e. #IF MYDEFINE or #IF AMAZON)",
                              "type": "string"
                            },
                            "playerExporter": {
                              "properties": {
                                "sceneList": {
                                  "description": "A list of scenes to build overriding those specified in the Build Settings menu of your Unity project.",
                                  "type": "array",
                                  "items": {
                                    "description": "scene names",
                                    "type": "string"
                                  }
                                },
                                "buildOptions": {
                                  "description": "Unity Editor build options. Use BuildOptions.Development and BuildOptions.AllowDebugging to create a development build.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "export": {
                                  "description": "Enable exporting a player from Unity (i.e. running BuildPipeline.BuildPlayer). In general, this should be true, unless you\nare doing something like an asset bundle only build or unit test only build without generating an actual build artifact.",
                                  "type": "boolean",
                                  "default": true
                                }
                              }
                            },
                            "playerSettings": {
                              "properties": {
                                "Android": {
                                  "properties": {
                                    "useAPKExpansionFiles": {
                                      "description": "break up android apk into an installable apk and expansion files",
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            },
                            "editorUserBuildSettings": {
                              "properties": {
                                "androidBuildSystem": {
                                  "description": "which android build system to build with (android only, supported in Unity 5.5+)",
                                  "enum": [
                                    "internal",
                                    "gradle"
                                  ],
                                  "type": "string"
                                }
                              }
                            },
                            "assetBundles": {
                              "properties": {
                                "buildBundles": {
                                  "description": "enable asset bundle builds for this target",
                                  "type": "boolean"
                                },
                                "basePath": {
                                  "description": "base path relative to Assets folder where asset bundles are output. Default is 'AssetBundles'",
                                  "type": "string"
                                },
                                "buildAssetBundleOptions": {
                                  "description": "comma separated list of flags from BuildAssetBundleOptions. see https://docs.unity3d.com/ScriptReference/BuildAssetBundleOptions.html",
                                  "type": "string"
                                },
                                "copyToStreamingAssets": {
                                  "description": "copy bundles to streaming assets folder, which will be packaged into the exported player.",
                                  "type": "boolean"
                                },
                                "copyBundlePatterns": {
                                  "description": "array of patterns to match (C# Regular Expressions) when copying asset bundle files. By default, all bundles will be copied.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "addressables": {
                              "properties": {
                                "buildAddressables": {
                                  "description": "enable addressable builds for this target",
                                  "type": "boolean"
                                },
                                "contentUpdate": {
                                  "description": "Update a previously built player with new Addressable Content.",
                                  "type": "boolean"
                                },
                                "profileName": {
                                  "description": "which addressables profile should be used for the build",
                                  "type": "string"
                                },
                                "failedAddressablesFailsBuild": {
                                  "description": "Exit and mark the build as failed if an error occurs when addressables are built",
                                  "type": "boolean",
                                  "default": true
                                },
                                "contentUpdateSettings": {
                                  "properties": {
                                    "contentStatePath": {
                                      "description": "The path to a Content State .bin file relative to the project root",
                                      "type": "string"
                                    },
                                    "linkedTargetId": {
                                      "description": "The Id of the build target to obtain a Content State .bin file from",
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            },
                            "runUnitTests": {
                              "description": "Run any unit tests your project has when a build happens.",
                              "type": "boolean"
                            },
                            "runEditModeTests": {
                              "description": "Should Edit Mode unit tests be run? NOTE: requires runUnitTests to be true and building\nwith Unity 5.6 or newer.",
                              "type": "boolean"
                            },
                            "runPlayModeTests": {
                              "description": "Should Play Mode unit tests be run? NOTE: requires runUnitTests to be true and building\nwith Unity 5.6 or newer.",
                              "type": "boolean"
                            },
                            "failedUnitTestFailsBuild": {
                              "description": "Mark builds as failed if the unit tests do not pass.",
                              "type": "boolean"
                            },
                            "unitTestMethod": {
                              "description": "LEGACY - The Unity method to call when running unit tests (only supported in Unity 5.2 and lower).",
                              "type": "string"
                            },
                            "enableLightBake": {
                              "description": "Enable lightmap baking (disabled by default since it is very slow and usually unnecessary)",
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "lastBuilt": {
                  "properties": {
                    "unityVersion": {
                      "description": "Last Unity version built by this target. Setting this has no effect.",
                      "type": "string"
                    }
                  }
                },
                "credentials": {
                  "properties": {
                    "signing": {
                      "properties": {
                        "credentialid": {
                          "type": "string"
                        },
                        "credentialResourceRef": {
                          "properties": {
                            "platform": {
                              "type": "string",
                              "enum": [
                                "ios",
                                "android",
                                "webplayer",
                                "webgl",
                                "standaloneosxintel",
                                "standaloneosxintel64",
                                "standaloneosxuniversal",
                                "standalonewindows",
                                "standalonewindows64",
                                "standalonelinux",
                                "standalonelinux64",
                                "standalonelinuxuniversal"
                              ]
                            },
                            "label": {
                              "type": "string"
                            },
                            "credentialid": {
                              "type": "string"
                            },
                            "created": {
                              "type": "string"
                            },
                            "lastMod": {
                              "type": "string"
                            },
                            "certificate": {
                              "properties": {
                                "teamId": {
                                  "type": "string",
                                  "description": "generated team id from Apple"
                                },
                                "certName": {
                                  "description": "certificate name (from the certificate)",
                                  "type": "string"
                                },
                                "expiration": {
                                  "description": "expiration date",
                                  "type": "string"
                                },
                                "isDistribution": {
                                  "description": "if this is a distribution certificate",
                                  "type": "boolean"
                                },
                                "uploaded": {
                                  "description": "uploaded date",
                                  "type": "string"
                                }
                              }
                            },
                            "provisioningProfile": {
                              "properties": {
                                "teamId": {
                                  "description": "generated team id from Apple",
                                  "type": "string"
                                },
                                "bundleId": {
                                  "description": "a unique identifier (com.example.name)",
                                  "type": "string"
                                },
                                "uuid": {
                                  "description": "generated UUID of the profile",
                                  "type": "string"
                                },
                                "expiration": {
                                  "description": "expiration date",
                                  "type": "string"
                                },
                                "isEnterpriseProfile": {
                                  "description": "is this compiled for Apple's enterprise program",
                                  "type": "boolean"
                                },
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "developer",
                                    "adhoc",
                                    "appstore"
                                  ]
                                },
                                "numDevices": {
                                  "description": "number of devices provisioned for this certificate",
                                  "type": "number"
                                },
                                "uploaded": {
                                  "description": "uploaded date",
                                  "type": "string"
                                }
                              }
                            },
                            "keystore": {
                              "properties": {
                                "alias": {
                                  "description": "friendly name for keystore",
                                  "type": "string"
                                },
                                "debug": {
                                  "description": "whether this is a debug or production keystore",
                                  "type": "boolean"
                                },
                                "expiration": {
                                  "description": "expiration date",
                                  "type": "string"
                                }
                              }
                            },
                            "links": {
                              "type": "object"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "builds": {
                  "type": "array",
                  "items": {
                    "description": "buildattempt",
                    "properties": {
                      "build": {
                        "type": "number"
                      },
                      "buildtargetid": {
                        "description": "unique id auto-generated from the build target name",
                        "type": "string"
                      },
                      "buildTargetName": {
                        "type": "string",
                        "maxLength": 64
                      },
                      "buildGUID": {
                        "description": "unique GUID identifying this build",
                        "type": "string"
                      },
                      "buildStatus": {
                        "enum": [
                          "queued",
                          "sentToBuilder",
                          "started",
                          "restarted",
                          "success",
                          "failure",
                          "canceled",
                          "unknown"
                        ],
                        "type": "string"
                      },
                      "cleanBuild": {
                        "description": "if the build was built without using data cached from previous builds",
                        "type": "boolean"
                      },
                      "failureDetails": {
                        "description": "list of failure details for this build attempt, when available",
                        "type": "array",
                        "items": {
                          "properties": {
                            "label": {
                              "type": "string"
                            },
                            "resolutionHint": {
                              "type": "string"
                            },
                            "stages": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "failureType": {
                              "type": "string"
                            },
                            "count": {
                              "type": "number"
                            }
                          }
                        }
                      },
                      "canceledBy": {
                        "enum": [
                          "api",
                          "service",
                          "service-timelimit"
                        ],
                        "type": "string"
                      },
                      "platform": {
                        "type": "string",
                        "enum": [
                          "ios",
                          "android",
                          "webplayer",
                          "webgl",
                          "standaloneosxintel",
                          "standaloneosxintel64",
                          "standaloneosxuniversal",
                          "standalonewindows",
                          "standalonewindows64",
                          "standalonelinux",
                          "standalonelinux64",
                          "standalonelinuxuniversal"
                        ]
                      },
                      "workspaceSize": {
                        "description": "size of workspace in bytes",
                        "type": "number"
                      },
                      "created": {
                        "description": "when the build was created",
                        "type": "string"
                      },
                      "finished": {
                        "description": "when the build completely finished",
                        "type": "string"
                      },
                      "checkoutStartTime": {
                        "description": "when the build starting checking out code",
                        "type": "string"
                      },
                      "checkoutTimeInSeconds": {
                        "description": "amount of time spent checking out code",
                        "type": "number"
                      },
                      "buildStartTime": {
                        "description": "when the build started compiling",
                        "type": "string"
                      },
                      "buildTimeInSeconds": {
                        "description": "amount of time spend compiling",
                        "type": "number"
                      },
                      "publishStartTime": {
                        "description": "when the build started saving build artifacts",
                        "type": "string"
                      },
                      "publishTimeInSeconds": {
                        "description": "amount of time spent saving build artifacts",
                        "type": "number"
                      },
                      "totalTimeInSeconds": {
                        "description": "total time for the build",
                        "type": "number"
                      },
                      "unitTestTimeInSeconds": {
                        "description": "total time for unit test execution step",
                        "type": "number"
                      },
                      "editModeTestTimeInSeconds": {
                        "description": "total time for unit test execution step",
                        "type": "number"
                      },
                      "playModeTestTimeInSeconds": {
                        "description": "total time for unit test execution step",
                        "type": "number"
                      },
                      "lastBuiltRevision": {
                        "description": "source control commit id for the build",
                        "type": "string"
                      },
                      "changeset": {
                        "description": "a list of source control changes between this and the last build",
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      },
                      "favorited": {
                        "description": "if the build is marked as do not delete or not",
                        "type": "boolean"
                      },
                      "label": {
                        "description": "description given when a build is favorited",
                        "type": "string"
                      },
                      "deleted": {
                        "description": "if the build is deleted or not",
                        "type": "boolean"
                      },
                      "headless": {
                        "description": "if the build was built to run in linux headless mode"
                      },
                      "credentialsOutdated": {
                        "description": "if a newer credential has been attached to this buildtarget and the build can be re-signed",
                        "type": "boolean"
                      },
                      "deletedBy": {
                        "description": "email address of the user who deleted this attempt",
                        "type": "string"
                      },
                      "queuedReason": {
                        "description": "reason the build is currently waiting",
                        "enum": [
                          "targetConcurrency",
                          "cooldown",
                          "buildConcurrency",
                          "waitingForBuildAgent",
                          "evaluating",
                          "sentToBuilder",
                          "notPending"
                        ],
                        "type": "string"
                      },
                      "cooldownDate": {
                        "type": "string",
                        "description": "time until this build will be reconsidered for building"
                      },
                      "scmBranch": {
                        "description": "scm branch to be built",
                        "type": "string"
                      },
                      "unityVersion": {
                        "description": "'latest' or a unity dot version with underscores (ex. '4_6_5')",
                        "type": "string"
                      },
                      "xcodeVersion": {
                        "description": "'latest' or a supported xcode version (ex. 'xcode7')",
                        "type": "string"
                      },
                      "auditChanges": {
                        "type": "number"
                      },
                      "projectVersion": {
                        "properties": {
                          "name": {
                            "description": "automatically generated name for the build",
                            "type": "string"
                          },
                          "filename": {
                            "description": "filename for the primary artifact",
                            "type": "string"
                          },
                          "projectName": {
                            "description": "name of the project",
                            "type": "string"
                          },
                          "platform": {
                            "type": "string",
                            "enum": [
                              "ios",
                              "android",
                              "webplayer",
                              "webgl",
                              "standaloneosxintel",
                              "standaloneosxintel64",
                              "standaloneosxuniversal",
                              "standalonewindows",
                              "standalonewindows64",
                              "standalonelinux",
                              "standalonelinux64",
                              "standalonelinuxuniversal"
                            ]
                          },
                          "size": {
                            "type": "number",
                            "description": "size of the the primary build artifact in bytes"
                          },
                          "created": {
                            "type": "string",
                            "description": "creation date"
                          },
                          "lastMod": {
                            "type": "string",
                            "description": "last modified date"
                          },
                          "bundleId": {
                            "type": "string",
                            "description": "a unique identifier (com.example.name)"
                          },
                          "udids": {
                            "type": "array",
                            "description": "iPhone unique identifiers that are able to install this build",
                            "items": {
                              "type": "string"
                            }
                          },
                          "links": {
                            "description": "links to build artifacts",
                            "type": "object"
                          }
                        }
                      },
                      "projectName": {
                        "type": "string"
                      },
                      "projectId": {
                        "type": "string"
                      },
                      "projectGuid": {
                        "type": "string"
                      },
                      "orgId": {
                        "type": "string"
                      },
                      "orgFk": {
                        "type": "string"
                      },
                      "filetoken": {
                        "type": "string"
                      },
                      "links": {
                        "type": "object",
                        "properties": {
                          "artifacts": {
                            "type": "array",
                            "items": {
                              "type": "object"
                            }
                          }
                        },
                        "additionalProperties": {
                          "type": "object",
                          "properties": {
                            "href": {
                              "type": "string"
                            },
                            "method": {
                              "type": "string"
                            },
                            "meta": {
                              "type": "object"
                            }
                          }
                        }
                      },
                      "buildReport": {
                        "type": "object",
                        "properties": {
                          "errors": {
                            "type": "integer"
                          },
                          "warnings": {
                            "type": "integer"
                          }
                        }
                      },
                      "testResults": {
                        "description": "results from the build's unit tests, if any",
                        "type": "object",
                        "properties": {
                          "unit_test": {
                            "type": "object"
                          },
                          "unit_test_editmode": {
                            "type": "object"
                          },
                          "unit_test_playmode": {
                            "type": "object"
                          }
                        }
                      },
                      "error": {
                        "type": "string"
                      }
                    }
                  }
                },
                "links": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "buildtargets"
        ],
        "operationId": "deleteBuildTarget",
        "summary": "Delete build target",
        "security": [
          {
            "permissions": [
              "project:manager"
            ],
            "apikey": []
          }
        ],
        "parameters": [
          {
            "name": "orgid",
            "in": "path",
            "description": "Organization identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectid",
            "in": "path",
            "description": "Project identifier",
            "required": true,
            "type": "string"
          },
          {
            "description": "unique id auto-generated from the build target name",
            "name": "buildtargetid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X DELETE\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/orgs/{orgid}/projects/{projectid}/buildtargets/{buildtargetid}"
          },
          {
            "language": "python",
            "code": "buildtargetsApi = BuildtargetsApi(client)\nbuildtargetsApi.delete_build_target('{orgid}', '{projectid}', '{buildtargetid}')"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/orgs/{orgid}/projects/{projectid}/buildtargets/{buildtargetid}/envvars": {
      "x-swagger-router-controller": "envvars",
      "get": {
        "tags": [
          "buildtargets"
        ],
        "operationId": "getEnvVariablesForBuildTarget",
        "summary": "Get environment variables",
        "description": "Get all configured environment variables for a given build target",
        "security": [
          {
            "permissions": [
              "project:manager"
            ],
            "apikey": []
          }
        ],
        "parameters": [
          {
            "name": "orgid",
            "in": "path",
            "description": "Organization identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectid",
            "in": "path",
            "description": "Project identifier",
            "required": true,
            "type": "string"
          },
          {
            "description": "unique id auto-generated from the build target name",
            "name": "buildtargetid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X GET\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/orgs/{orgid}/projects/{projectid}/buildtargets/{buildtargetid}/envvars"
          },
          {
            "language": "python",
            "code": "buildtargetsApi = BuildtargetsApi(client)\nbuildtargetsApi.get_env_variables_for_build_target('{orgid}', '{projectid}', '{buildtargetid}')"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "Object containing env variables. Name must follow env variable spec - a word consisting solely of underscores,\ndigits, and alphabetics from the portable character set. The first character of a name is not a digit. May not\noverride widely used env variables (see IEEE Std 1003.1-2008).",
              "example": {
                "MY_ENV_VARIABLE": "yellow",
                "BUILD_SERVICE": "https://build-api.cloud.unity3d.com/",
                "PORT": "1000"
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "buildtargets"
        ],
        "operationId": "setEnvVariablesForBuildTarget",
        "summary": "Set environment variables",
        "description": "Set all configured environment variables for a given build target",
        "security": [
          {
            "permissions": [
              "project:manager"
            ],
            "apikey": []
          }
        ],
        "parameters": [
          {
            "name": "orgid",
            "in": "path",
            "description": "Organization identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectid",
            "in": "path",
            "description": "Project identifier",
            "required": true,
            "type": "string"
          },
          {
            "description": "unique id auto-generated from the build target name",
            "name": "buildtargetid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "envvars",
            "in": "body",
            "description": "Environment variables",
            "required": true,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "Object containing env variables. Name must follow env variable spec - a word consisting solely of underscores,\ndigits, and alphabetics from the portable character set. The first character of a name is not a digit. May not\noverride widely used env variables (see IEEE Std 1003.1-2008).",
              "example": {
                "MY_ENV_VARIABLE": "yellow",
                "BUILD_SERVICE": "https://build-api.cloud.unity3d.com/",
                "PORT": "1000"
              }
            }
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X PUT\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/orgs/{orgid}/projects/{projectid}/buildtargets/{buildtargetid}/envvars"
          },
          {
            "language": "python",
            "code": "buildtargetsApi = BuildtargetsApi(client)\nbuildtargetsApi.set_env_variables_for_build_target('{orgid}', '{projectid}', '{buildtargetid}', '{envvars}')"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "description": "Object containing env variables. Name must follow env variable spec - a word consisting solely of underscores,\ndigits, and alphabetics from the portable character set. The first character of a name is not a digit. May not\noverride widely used env variables (see IEEE Std 1003.1-2008).",
              "example": {
                "MY_ENV_VARIABLE": "yellow",
                "BUILD_SERVICE": "https://build-api.cloud.unity3d.com/",
                "PORT": "1000"
              }
            }
          }
        }
      }
    },
    "/orgs/{orgid}/projects/{projectid}/buildtargets/{buildtargetid}/auditlog": {
      "x-swagger-router-controller": "buildtargets",
      "get": {
        "tags": [
          "builds"
        ],
        "operationId": "getAuditLogForBuildTarget",
        "summary": "Get audit log",
        "description": "Retrieve a list of historical settings changes for this build target.",
        "security": [
          {
            "permissions": [
              "project:user"
            ],
            "apikey": []
          }
        ],
        "parameters": [
          {
            "name": "orgid",
            "in": "path",
            "description": "Organization identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectid",
            "in": "path",
            "description": "Project identifier",
            "required": true,
            "type": "string"
          },
          {
            "description": "unique id auto-generated from the build target name",
            "name": "buildtargetid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of audit log records to retrieve",
            "required": false,
            "default": 25,
            "type": "number"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Skip to page number, based on per_page value",
            "required": false,
            "default": 1,
            "type": "number"
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X GET\n  -H \"Content-Type: application/json\"\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/orgs/{orgid}/projects/{projectid}/buildtargets/{buildtargetid}/auditlog"
          },
          {
            "language": "python",
            "code": "buildsApi = BuildsApi(client)\nauditlog = buildsApi.get_audit_log('{orgid}', '{projectid}', '{buildtargetid}')"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "required": [
                  "lines",
                  "updated"
                ],
                "properties": {
                  "updatingUserEmail": {
                    "type": "string"
                  },
                  "updated": {
                    "type": "string",
                    "format": "dateTime"
                  },
                  "lines": {
                    "type": "array",
                    "items": {
                      "required": [
                        "field",
                        "to"
                      ],
                      "properties": {
                        "label": {
                          "type": "string"
                        },
                        "field": {
                          "type": "string"
                        },
                        "to": {
                          "type": "string"
                        },
                        "from": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "application/json": "[\n  {\n    \"updatingUserEmail\": \"julie.smith@example.org\",\n    \"updated\": \"2015-08-04T17:18:24.532Z\",\n    \"lines\": [{\n      \"from\": \"Latest 4.x\",\n      \"to\": \"4.6.5\",\n      \"label\": \"Unity version\",\n      \"field\": \"buildtarget.settings.unityVersion\"\n    }]\n  },\n  {\n    \"updatingUserEmail\": \"sandra.johnson@example.org\",\n    \"updated\": \"2015-08-02T12:02:44.532Z\",\n    \"lines\": [{\n      \"label\": \"Keypass\",\n      \"field\": \"buildtarget.settings.platform.keystoreInfo.keypass\",\n      \"from\": \"\",\n      \"to\": \"changed\"\n    }]\n  }\n]"
            }
          }
        }
      }
    },
    "/orgs/{orgid}/projects/{projectid}/buildtargets/{buildtargetid}/stats": {
      "x-swagger-router-controller": "buildtargets",
      "get": {
        "tags": [
          "buildtargets"
        ],
        "operationId": "getStatsForBuildTarget",
        "summary": "Get build target statistics",
        "description": "Get statistics for the specified build target",
        "security": [
          {
            "permissions": [
              "project:user"
            ],
            "apikey": []
          }
        ],
        "parameters": [
          {
            "name": "orgid",
            "in": "path",
            "description": "Organization identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectid",
            "in": "path",
            "description": "Project identifier",
            "required": true,
            "type": "string"
          },
          {
            "description": "unique id auto-generated from the build target name",
            "name": "buildtargetid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "buildStatus",
            "in": "query",
            "description": "Query for only builds of a specific status",
            "required": false,
            "default": "",
            "type": "string"
          },
          {
            "name": "cleanBuild",
            "in": "query",
            "description": "Query for builds that have either been built clean or using caches",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Get stats for last limit builds",
            "required": false,
            "type": "number"
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X GET\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/orgs/{orgid}/projects/{projectid}/buildtargets/{buildtargetid}/stats"
          },
          {
            "language": "python",
            "code": "buildsApi = BuildsApi(client)\nstats = buildsApi.get_stats('{orgid}', '{projectid}', '{buildtargetid}')"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "totalBuilds": {
                  "type": "number"
                },
                "successfulBuilds": {
                  "type": "number"
                },
                "canceledBuilds": {
                  "type": "number"
                },
                "failedBuilds": {
                  "type": "number"
                },
                "averageWorkspaceSize": {
                  "type": "number"
                },
                "averageTotalTime": {
                  "type": "number"
                },
                "averageWaitTime": {
                  "type": "number"
                },
                "averageCheckoutTime": {
                  "type": "number"
                },
                "averageBuildTime": {
                  "type": "number"
                },
                "averagePublishTime": {
                  "type": "number"
                }
              }
            },
            "examples": {
              "application/json": "{\n  \"totalBuilds\":100,\n  \"successfulBuilds\":60,\n  \"canceledBuilds\":20,\n  \"failedBuilds\":20,\n  \"averageWorkspaceSize\":8386947559\n  \"averageTotalTime\":4628,\n  \"averageWaitTime\":100,\n  \"averageCheckoutTime\":828,\n  \"averageBuildTime\":3200,\n  \"averagePublishTime\":500\n}"
            }
          }
        }
      }
    },
    "/orgs/{orgid}/buildtargets": {
      "x-swagger-router-controller": "buildtargets",
      "get": {
        "tags": [
          "buildtargets"
        ],
        "operationId": "getBuildTargetsForOrg",
        "summary": "List all build targets for an org",
        "description": "Gets all configured build targets for an org, regardless of whether they are enabled. Add \"?include=settings,credentials\"\nas a query parameter to include the build target settings and credentials with the response.\n",
        "security": [
          {
            "permissions": [
              "org:user"
            ],
            "apikey": []
          }
        ],
        "parameters": [
          {
            "name": "orgid",
            "in": "path",
            "description": "Organization identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Extra fields to include in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "include_last_success",
            "in": "query",
            "description": "Include last successful build",
            "required": false,
            "default": false,
            "type": "boolean"
          }
        ],
        "x-includequery-properties": [
          "settings",
          "credentials"
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X GET\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/orgs/{orgid}/buildtargets"
          },
          {
            "language": "python",
            "code": "buildtargetsApi = BuildtargetsApi(client)\nbuildtargets = buildtargetsApi.get_build_targets('{orgid}')"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "application/json": "[\n  {\n    \"name\": \"Default WebGL\",\n    \"platform\": \"webgl\",\n    \"buildtargetid\": \"default-webgl\",\n    \"enabled\": true,\n    \"links\": {\n      \"self\": {\n        \"method\": \"get\",\n        \"href\": \"/api/v1/orgs/example-org/projects/new-project/buildtargets/default-webgl\"\n      },\n      \"start_builds\": {\n        \"method\": \"post\",\n        \"href\": \"/api/v1/orgs/example-org/projects/new-project/buildtargets/default-webgl/builds\"\n      },\n      \"list_builds\": {\n        \"method\": \"get\",\n        \"href\": \"/api/v1/orgs/example-org/projects/new-project/buildtargets/default-webgl/builds\"\n      },\n      \"cancel_builds\": {\n        \"method\": \"delete\",\n        \"href\": \"/api/v1/orgs/example-org/projects/new-project/buildtargets/default-webgl/builds\"\n      },\n      \"polling\": {\n        \"method\": \"post\",\n        \"href\": \"/api/v1/orgs/example-org/projects/new-project/buildtargets/default-webgl/polling\"\n      }\n    }\n  },\n  {\n    \"name\": \"Default Linux desktop Universal\",\n    \"platform\": \"standalonelinuxuniversal\",\n    \"buildtargetid\": \"default-linux-desktop-universal\",\n    \"enabled\": true,\n    \"links\": {\n      \"self\": {\n        \"method\": \"get\",\n        \"href\": \"/api/v1/orgs/example-org/projects/new-project/buildtargets/default-linux-desktop-universal\"\n      },\n      \"start_builds\": {\n        \"method\": \"post\",\n        \"href\": \"/api/v1/orgs/example-org/projects/new-project/buildtargets/default-linux-desktop-universal/builds\"\n      },\n      \"list_builds\": {\n        \"method\": \"get\",\n        \"href\": \"/api/v1/orgs/example-org/projects/new-project/buildtargets/default-linux-desktop-universal/builds\"\n      },\n      \"cancel_builds\": {\n        \"method\": \"delete\",\n        \"href\": \"/api/v1/orgs/example-org/projects/new-project/buildtargets/default-linux-desktop-universal/builds\"\n      },\n      \"polling\": {\n        \"method\": \"post\",\n        \"href\": \"/api/v1/orgs/example-org/projects/new-project/buildtargets/default-linux-desktop-universal/polling\"\n      }\n    }\n  }\n]"
            },
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 64
                  },
                  "platform": {
                    "type": "string",
                    "enum": [
                      "ios",
                      "android",
                      "webplayer",
                      "webgl",
                      "standaloneosxintel",
                      "standaloneosxintel64",
                      "standaloneosxuniversal",
                      "standalonewindows",
                      "standalonewindows64",
                      "standalonelinux",
                      "standalonelinux64",
                      "standalonelinuxuniversal"
                    ]
                  },
                  "buildtargetid": {
                    "description": "unique id auto-generated from the build target name",
                    "type": "string"
                  },
                  "enabled": {
                    "description": "whether this target can be built by the API",
                    "type": "boolean"
                  },
                  "settings": {
                    "properties": {
                      "autoBuild": {
                        "description": "start builds automatically when your repo is updated",
                        "type": "boolean"
                      },
                      "unityVersion": {
                        "description": "'latest' or a unity dot version with underscores (ex. '4_6_5')",
                        "type": "string"
                      },
                      "autoDetectUnityVersion": {
                        "description": "attempt to automatically detect which unity version to use, fallback to specified unityVersion if unable to.",
                        "type": "boolean"
                      },
                      "fallbackPatchVersion": {
                        "description": "attempt to get a similar unity patch version to use, applies to unavailable auto-detected Unity versions only.",
                        "type": "boolean"
                      },
                      "executablename": {
                        "type": "string"
                      },
                      "scm": {
                        "properties": {
                          "type": {
                            "enum": [
                              "git",
                              "svn",
                              "p4",
                              "hg",
                              "collab",
                              "oauth",
                              "plastic"
                            ],
                            "type": "string"
                          },
                          "repo": {
                            "description": "Which repo to use. Only applies to Plastic SCM, other SCM types configure repo on the project level.",
                            "type": "string"
                          },
                          "branch": {
                            "type": "string"
                          },
                          "subdirectory": {
                            "description": "subdirectory to build from",
                            "type": "string"
                          },
                          "client": {
                            "description": "perforce only client workspace to build from",
                            "type": "string"
                          }
                        }
                      },
                      "platform": {
                        "properties": {
                          "bundleId": {
                            "description": "a unique identifier (com.example.name)",
                            "type": "string"
                          },
                          "xcodeVersion": {
                            "description": "'latest' or a supported xcode version (ex. 'xcode7')",
                            "type": "string"
                          }
                        }
                      },
                      "autoBuildCancellation": {
                        "type": "boolean",
                        "default": false
                      },
                      "advanced": {
                        "properties": {
                          "xcode": {
                            "properties": {
                              "useArchiveAndExport": {
                                "type": "boolean"
                              },
                              "customFastlaneConfigPath": {
                                "description": "The path (including file name) from the project root to the custom FastLane configuration json file to configure multiple provisioning files, or customize the FastLane build process.\nSee https://forum.unity.com/threads/xcode-9-multiple-provisioning-profiles.545121/\nWill look for Assets/ucb_xcode_fastlane.json by default, if not specified.",
                                "type": "string"
                              },
                              "shouldNotarize": {
                                "description": "Only used with OSX targets, this triggers signing and notarization process for the executable.",
                                "type": "boolean"
                              }
                            }
                          },
                          "android": {
                            "properties": {
                              "buildAppBundle": {
                                "type": "boolean"
                              }
                            }
                          },
                          "unity": {
                            "properties": {
                              "preExportMethod": {
                                "description": "The fully-qualified name of a public static method you want us to call before we start the Unity build process.\nFor example: ClassName.NeatMethod or NameSpace.ClassName.NeatMethod.\nNo trailing parenthesis, and it can't have the same name as your Post-Export method!",
                                "type": "string"
                              },
                              "postExportMethod": {
                                "description": "The fully-qualified name of a public static method you want us to call after we finish the Unity build process\n(but before Xcode). For example: ClassName.CoolMethod or NameSpace.ClassName.CoolMethod. No trailing parenthesis,\nand it can't have the same name as your Post-Export method! This method must accept a string parameter, which\nwill receive the path to the exported Unity player (or Xcode project in the case of iOS).",
                                "type": "string"
                              },
                              "preBuildScript": {
                                "description": "Relative path to the script that should be run before the build process starts.",
                                "type": "string"
                              },
                              "postBuildScript": {
                                "description": "Relative path to the script that should be run after the build process finishes.",
                                "type": "string"
                              },
                              "scriptingDefineSymbols": {
                                "description": "Enter the names of the symbols you want to define for iOS. These symbols can then be used as the conditions\nfor #if directives just like the built-in ones. (i.e. #IF MYDEFINE or #IF AMAZON)",
                                "type": "string"
                              },
                              "playerExporter": {
                                "properties": {
                                  "sceneList": {
                                    "description": "A list of scenes to build overriding those specified in the Build Settings menu of your Unity project.",
                                    "type": "array",
                                    "items": {
                                      "description": "scene names",
                                      "type": "string"
                                    }
                                  },
                                  "buildOptions": {
                                    "description": "Unity Editor build options. Use BuildOptions.Development and BuildOptions.AllowDebugging to create a development build.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "export": {
                                    "description": "Enable exporting a player from Unity (i.e. running BuildPipeline.BuildPlayer). In general, this should be true, unless you\nare doing something like an asset bundle only build or unit test only build without generating an actual build artifact.",
                                    "type": "boolean",
                                    "default": true
                                  }
                                }
                              },
                              "playerSettings": {
                                "properties": {
                                  "Android": {
                                    "properties": {
                                      "useAPKExpansionFiles": {
                                        "description": "break up android apk into an installable apk and expansion files",
                                        "type": "boolean"
                                      }
                                    }
                                  }
                                }
                              },
                              "editorUserBuildSettings": {
                                "properties": {
                                  "androidBuildSystem": {
                                    "description": "which android build system to build with (android only, supported in Unity 5.5+)",
                                    "enum": [
                                      "internal",
                                      "gradle"
                                    ],
                                    "type": "string"
                                  }
                                }
                              },
                              "assetBundles": {
                                "properties": {
                                  "buildBundles": {
                                    "description": "enable asset bundle builds for this target",
                                    "type": "boolean"
                                  },
                                  "basePath": {
                                    "description": "base path relative to Assets folder where asset bundles are output. Default is 'AssetBundles'",
                                    "type": "string"
                                  },
                                  "buildAssetBundleOptions": {
                                    "description": "comma separated list of flags from BuildAssetBundleOptions. see https://docs.unity3d.com/ScriptReference/BuildAssetBundleOptions.html",
                                    "type": "string"
                                  },
                                  "copyToStreamingAssets": {
                                    "description": "copy bundles to streaming assets folder, which will be packaged into the exported player.",
                                    "type": "boolean"
                                  },
                                  "copyBundlePatterns": {
                                    "description": "array of patterns to match (C# Regular Expressions) when copying asset bundle files. By default, all bundles will be copied.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "addressables": {
                                "properties": {
                                  "buildAddressables": {
                                    "description": "enable addressable builds for this target",
                                    "type": "boolean"
                                  },
                                  "contentUpdate": {
                                    "description": "Update a previously built player with new Addressable Content.",
                                    "type": "boolean"
                                  },
                                  "profileName": {
                                    "description": "which addressables profile should be used for the build",
                                    "type": "string"
                                  },
                                  "failedAddressablesFailsBuild": {
                                    "description": "Exit and mark the build as failed if an error occurs when addressables are built",
                                    "type": "boolean",
                                    "default": true
                                  },
                                  "contentUpdateSettings": {
                                    "properties": {
                                      "contentStatePath": {
                                        "description": "The path to a Content State .bin file relative to the project root",
                                        "type": "string"
                                      },
                                      "linkedTargetId": {
                                        "description": "The Id of the build target to obtain a Content State .bin file from",
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "runUnitTests": {
                                "description": "Run any unit tests your project has when a build happens.",
                                "type": "boolean"
                              },
                              "runEditModeTests": {
                                "description": "Should Edit Mode unit tests be run? NOTE: requires runUnitTests to be true and building\nwith Unity 5.6 or newer.",
                                "type": "boolean"
                              },
                              "runPlayModeTests": {
                                "description": "Should Play Mode unit tests be run? NOTE: requires runUnitTests to be true and building\nwith Unity 5.6 or newer.",
                                "type": "boolean"
                              },
                              "failedUnitTestFailsBuild": {
                                "description": "Mark builds as failed if the unit tests do not pass.",
                                "type": "boolean"
                              },
                              "unitTestMethod": {
                                "description": "LEGACY - The Unity method to call when running unit tests (only supported in Unity 5.2 and lower).",
                                "type": "string"
                              },
                              "enableLightBake": {
                                "description": "Enable lightmap baking (disabled by default since it is very slow and usually unnecessary)",
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "lastBuilt": {
                    "properties": {
                      "unityVersion": {
                        "description": "Last Unity version built by this target. Setting this has no effect.",
                        "type": "string"
                      }
                    }
                  },
                  "credentials": {
                    "properties": {
                      "signing": {
                        "properties": {
                          "credentialid": {
                            "type": "string"
                          },
                          "credentialResourceRef": {
                            "properties": {
                              "platform": {
                                "type": "string",
                                "enum": [
                                  "ios",
                                  "android",
                                  "webplayer",
                                  "webgl",
                                  "standaloneosxintel",
                                  "standaloneosxintel64",
                                  "standaloneosxuniversal",
                                  "standalonewindows",
                                  "standalonewindows64",
                                  "standalonelinux",
                                  "standalonelinux64",
                                  "standalonelinuxuniversal"
                                ]
                              },
                              "label": {
                                "type": "string"
                              },
                              "credentialid": {
                                "type": "string"
                              },
                              "created": {
                                "type": "string"
                              },
                              "lastMod": {
                                "type": "string"
                              },
                              "certificate": {
                                "properties": {
                                  "teamId": {
                                    "type": "string",
                                    "description": "generated team id from Apple"
                                  },
                                  "certName": {
                                    "description": "certificate name (from the certificate)",
                                    "type": "string"
                                  },
                                  "expiration": {
                                    "description": "expiration date",
                                    "type": "string"
                                  },
                                  "isDistribution": {
                                    "description": "if this is a distribution certificate",
                                    "type": "boolean"
                                  },
                                  "uploaded": {
                                    "description": "uploaded date",
                                    "type": "string"
                                  }
                                }
                              },
                              "provisioningProfile": {
                                "properties": {
                                  "teamId": {
                                    "description": "generated team id from Apple",
                                    "type": "string"
                                  },
                                  "bundleId": {
                                    "description": "a unique identifier (com.example.name)",
                                    "type": "string"
                                  },
                                  "uuid": {
                                    "description": "generated UUID of the profile",
                                    "type": "string"
                                  },
                                  "expiration": {
                                    "description": "expiration date",
                                    "type": "string"
                                  },
                                  "isEnterpriseProfile": {
                                    "description": "is this compiled for Apple's enterprise program",
                                    "type": "boolean"
                                  },
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "developer",
                                      "adhoc",
                                      "appstore"
                                    ]
                                  },
                                  "numDevices": {
                                    "description": "number of devices provisioned for this certificate",
                                    "type": "number"
                                  },
                                  "uploaded": {
                                    "description": "uploaded date",
                                    "type": "string"
                                  }
                                }
                              },
                              "keystore": {
                                "properties": {
                                  "alias": {
                                    "description": "friendly name for keystore",
                                    "type": "string"
                                  },
                                  "debug": {
                                    "description": "whether this is a debug or production keystore",
                                    "type": "boolean"
                                  },
                                  "expiration": {
                                    "description": "expiration date",
                                    "type": "string"
                                  }
                                }
                              },
                              "links": {
                                "type": "object"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "builds": {
                    "type": "array",
                    "items": {
                      "description": "buildattempt",
                      "properties": {
                        "build": {
                          "type": "number"
                        },
                        "buildtargetid": {
                          "description": "unique id auto-generated from the build target name",
                          "type": "string"
                        },
                        "buildTargetName": {
                          "type": "string",
                          "maxLength": 64
                        },
                        "buildGUID": {
                          "description": "unique GUID identifying this build",
                          "type": "string"
                        },
                        "buildStatus": {
                          "enum": [
                            "queued",
                            "sentToBuilder",
                            "started",
                            "restarted",
                            "success",
                            "failure",
                            "canceled",
                            "unknown"
                          ],
                          "type": "string"
                        },
                        "cleanBuild": {
                          "description": "if the build was built without using data cached from previous builds",
                          "type": "boolean"
                        },
                        "failureDetails": {
                          "description": "list of failure details for this build attempt, when available",
                          "type": "array",
                          "items": {
                            "properties": {
                              "label": {
                                "type": "string"
                              },
                              "resolutionHint": {
                                "type": "string"
                              },
                              "stages": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "failureType": {
                                "type": "string"
                              },
                              "count": {
                                "type": "number"
                              }
                            }
                          }
                        },
                        "canceledBy": {
                          "enum": [
                            "api",
                            "service",
                            "service-timelimit"
                          ],
                          "type": "string"
                        },
                        "platform": {
                          "type": "string",
                          "enum": [
                            "ios",
                            "android",
                            "webplayer",
                            "webgl",
                            "standaloneosxintel",
                            "standaloneosxintel64",
                            "standaloneosxuniversal",
                            "standalonewindows",
                            "standalonewindows64",
                            "standalonelinux",
                            "standalonelinux64",
                            "standalonelinuxuniversal"
                          ]
                        },
                        "workspaceSize": {
                          "description": "size of workspace in bytes",
                          "type": "number"
                        },
                        "created": {
                          "description": "when the build was created",
                          "type": "string"
                        },
                        "finished": {
                          "description": "when the build completely finished",
                          "type": "string"
                        },
                        "checkoutStartTime": {
                          "description": "when the build starting checking out code",
                          "type": "string"
                        },
                        "checkoutTimeInSeconds": {
                          "description": "amount of time spent checking out code",
                          "type": "number"
                        },
                        "buildStartTime": {
                          "description": "when the build started compiling",
                          "type": "string"
                        },
                        "buildTimeInSeconds": {
                          "description": "amount of time spend compiling",
                          "type": "number"
                        },
                        "publishStartTime": {
                          "description": "when the build started saving build artifacts",
                          "type": "string"
                        },
                        "publishTimeInSeconds": {
                          "description": "amount of time spent saving build artifacts",
                          "type": "number"
                        },
                        "totalTimeInSeconds": {
                          "description": "total time for the build",
                          "type": "number"
                        },
                        "unitTestTimeInSeconds": {
                          "description": "total time for unit test execution step",
                          "type": "number"
                        },
                        "editModeTestTimeInSeconds": {
                          "description": "total time for unit test execution step",
                          "type": "number"
                        },
                        "playModeTestTimeInSeconds": {
                          "description": "total time for unit test execution step",
                          "type": "number"
                        },
                        "lastBuiltRevision": {
                          "description": "source control commit id for the build",
                          "type": "string"
                        },
                        "changeset": {
                          "description": "a list of source control changes between this and the last build",
                          "type": "array",
                          "items": {
                            "type": "object"
                          }
                        },
                        "favorited": {
                          "description": "if the build is marked as do not delete or not",
                          "type": "boolean"
                        },
                        "label": {
                          "description": "description given when a build is favorited",
                          "type": "string"
                        },
                        "deleted": {
                          "description": "if the build is deleted or not",
                          "type": "boolean"
                        },
                        "headless": {
                          "description": "if the build was built to run in linux headless mode"
                        },
                        "credentialsOutdated": {
                          "description": "if a newer credential has been attached to this buildtarget and the build can be re-signed",
                          "type": "boolean"
                        },
                        "deletedBy": {
                          "description": "email address of the user who deleted this attempt",
                          "type": "string"
                        },
                        "queuedReason": {
                          "description": "reason the build is currently waiting",
                          "enum": [
                            "targetConcurrency",
                            "cooldown",
                            "buildConcurrency",
                            "waitingForBuildAgent",
                            "evaluating",
                            "sentToBuilder",
                            "notPending"
                          ],
                          "type": "string"
                        },
                        "cooldownDate": {
                          "type": "string",
                          "description": "time until this build will be reconsidered for building"
                        },
                        "scmBranch": {
                          "description": "scm branch to be built",
                          "type": "string"
                        },
                        "unityVersion": {
                          "description": "'latest' or a unity dot version with underscores (ex. '4_6_5')",
                          "type": "string"
                        },
                        "xcodeVersion": {
                          "description": "'latest' or a supported xcode version (ex. 'xcode7')",
                          "type": "string"
                        },
                        "auditChanges": {
                          "type": "number"
                        },
                        "projectVersion": {
                          "properties": {
                            "name": {
                              "description": "automatically generated name for the build",
                              "type": "string"
                            },
                            "filename": {
                              "description": "filename for the primary artifact",
                              "type": "string"
                            },
                            "projectName": {
                              "description": "name of the project",
                              "type": "string"
                            },
                            "platform": {
                              "type": "string",
                              "enum": [
                                "ios",
                                "android",
                                "webplayer",
                                "webgl",
                                "standaloneosxintel",
                                "standaloneosxintel64",
                                "standaloneosxuniversal",
                                "standalonewindows",
                                "standalonewindows64",
                                "standalonelinux",
                                "standalonelinux64",
                                "standalonelinuxuniversal"
                              ]
                            },
                            "size": {
                              "type": "number",
                              "description": "size of the the primary build artifact in bytes"
                            },
                            "created": {
                              "type": "string",
                              "description": "creation date"
                            },
                            "lastMod": {
                              "type": "string",
                              "description": "last modified date"
                            },
                            "bundleId": {
                              "type": "string",
                              "description": "a unique identifier (com.example.name)"
                            },
                            "udids": {
                              "type": "array",
                              "description": "iPhone unique identifiers that are able to install this build",
                              "items": {
                                "type": "string"
                              }
                            },
                            "links": {
                              "description": "links to build artifacts",
                              "type": "object"
                            }
                          }
                        },
                        "projectName": {
                          "type": "string"
                        },
                        "projectId": {
                          "type": "string"
                        },
                        "projectGuid": {
                          "type": "string"
                        },
                        "orgId": {
                          "type": "string"
                        },
                        "orgFk": {
                          "type": "string"
                        },
                        "filetoken": {
                          "type": "string"
                        },
                        "links": {
                          "type": "object",
                          "properties": {
                            "artifacts": {
                              "type": "array",
                              "items": {
                                "type": "object"
                              }
                            }
                          },
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "href": {
                                "type": "string"
                              },
                              "method": {
                                "type": "string"
                              },
                              "meta": {
                                "type": "object"
                              }
                            }
                          }
                        },
                        "buildReport": {
                          "type": "object",
                          "properties": {
                            "errors": {
                              "type": "integer"
                            },
                            "warnings": {
                              "type": "integer"
                            }
                          }
                        },
                        "testResults": {
                          "description": "results from the build's unit tests, if any",
                          "type": "object",
                          "properties": {
                            "unit_test": {
                              "type": "object"
                            },
                            "unit_test_editmode": {
                              "type": "object"
                            },
                            "unit_test_playmode": {
                              "type": "object"
                            }
                          }
                        },
                        "error": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "links": {
                    "type": "object"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/orgs/{orgid}/credentials/signing/android": {
      "x-swagger-router-controller": "credentials",
      "get": {
        "tags": [
          "credentials"
        ],
        "operationId": "getAllAndroidForOrg",
        "summary": "Get All Android Credentials for an organization",
        "description": "Get all credentials available for the organization. A list of\nprojects using a credential is included in the links element.\n",
        "security": [
          {
            "permissions": [
              "org:manager"
            ],
            "apikey": []
          }
        ],
        "parameters": [
          {
            "name": "orgid",
            "in": "path",
            "description": "Organization identifier",
            "required": true,
            "type": "string"
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X GET\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/orgs/{orgid}/credentials/signing/android"
          },
          {
            "language": "python",
            "code": "credentialsApi = CredentialsApi(client)\ncredentials = credentialsApi.get_all_android_for_org('{orgid}')"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "application/json": "[\n  {\n    \"platform\": \"android\",\n    \"label\": \"Auto Generated Debug Keystore\",\n    \"credentialid\": \"a7dba621-a877-43c5-8163-bda58247124e\",\n    \"created\": \"2015-08-27T22:29:00.023Z\",\n    \"lastMod\": \"2015-08-27T22:29:00.023Z\",\n    \"keystore\": {\n      \"alias\": \"androiddebugkey\",\n      \"debug\": true\n    },\n    \"links\": {\n      \"self\": {\n        \"method\": \"get\",\n        \"href\": \"/api/v1/orgs/example-org/credentials/signing/android/a7dba621-a877-43c5-8163-bda58247124e\"\n      },\n      \"delete\": {\n        \"method\": \"delete\",\n        \"href\": \"/api/v1/orgs/example-org/credentials/signing/android/a7dba621-a877-43c5-8163-bda58247124e\"\n      }\n      \"projects\": [\n        {\n          \"method\": \"get\",\n          \"href\": \"/api/v1/orgs/example-org/projects/new-project/\"\n        },\n        {\n          \"method\": \"get\",\n          \"href\": \"/api/v1/orgs/example-org/projects/new-project2/\"\n        }\n      ]\n    }\n  }\n]"
            },
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "platform": {
                    "type": "string",
                    "enum": [
                      "ios",
                      "android",
                      "webplayer",
                      "webgl",
                      "standaloneosxintel",
                      "standaloneosxintel64",
                      "standaloneosxuniversal",
                      "standalonewindows",
                      "standalonewindows64",
                      "standalonelinux",
                      "standalonelinux64",
                      "standalonelinuxuniversal"
                    ]
                  },
                  "label": {
                    "type": "string"
                  },
                  "credentialid": {
                    "type": "string"
                  },
                  "created": {
                    "type": "string"
                  },
                  "lastMod": {
                    "type": "string"
                  },
                  "keystore": {
                    "properties": {
                      "alias": {
                        "description": "friendly name for keystore",
                        "type": "string"
                      },
                      "debug": {
                        "description": "whether this is a debug or production keystore",
                        "type": "boolean"
                      },
                      "expiration": {
                        "type": "string"
                      }
                    }
                  },
                  "links": {
                    "type": "object"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "credentials"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "operationId": "addCredentialsAndroidForOrg",
        "summary": "Upload Android Credentials",
        "description": "Upload a new android keystore for an organization. NOTE: you must\nbe a manager in the organization to add new credentials.\n",
        "security": [
          {
            "permissions": [
              "org:manager"
            ],
            "apikey": []
          }
        ],
        "parameters": [
          {
            "name": "orgid",
            "in": "path",
            "description": "Organization identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "label",
            "in": "formData",
            "description": "Label for the uploaded credential",
            "required": true,
            "type": "string"
          },
          {
            "name": "file",
            "in": "formData",
            "description": "Keystore file",
            "required": true,
            "type": "file"
          },
          {
            "name": "alias",
            "in": "formData",
            "description": "Keystore alias",
            "required": true,
            "type": "string"
          },
          {
            "name": "keypass",
            "in": "formData",
            "description": "Keystore keypass",
            "required": true,
            "type": "string"
          },
          {
            "name": "storepass",
            "in": "formData",
            "description": "Keystore storepass",
            "required": true,
            "type": "string"
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X POST\n  -F file=@/Full/Path/To/android.keystore\n  -F label=Beta%20Credentials\n  -F alias=betacred\n  -F keypass=betapass\n  -F storepass=unitypass\n  -H \"Content-Type: multipart/form-data\"\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/orgs/{orgid}/credentials/signing/android"
          },
          {
            "language": "python",
            "code": "credentialsApi = CredentialsApi(client)\ncredentials = credentialsApi.add_credentials_android_for_org('{orgid}', \"Beta Credentials\", \"/Full/Path/To/android.keystore\", \"betacred\", \"betapass\", \"unitypass\")"
          }
        ],
        "responses": {
          "201": {
            "description": "OK",
            "examples": {
              "application/json": "{\n  \"platform\": \"android\",\n  \"label\": \"Beta Credentials\",\n  \"credentialid\": \"a7dba621-a877-43c5-8163-bda58247124e\",\n  \"created\": \"2015-08-27T22:29:00.023Z\",\n  \"lastMod\": \"2015-08-27T22:29:00.023Z\",\n  \"keystore\": {\n    \"alias\": \"betacred\",\n    \"debug\": true\n  },\n  \"links\": {\n    \"self\": {\n      \"method\": \"get\",\n      \"href\": \"/api/v1/orgs/example-org/credentials/signing/android/a7dba621-a877-43c5-8163-bda58247124e\"\n    },\n    \"delete\": {\n      \"method\": \"delete\",\n      \"href\": \"/api/v1/orgs/example-org/credentials/signing/android/a7dba621-a877-43c5-8163-bda58247124e\"\n    },\n    \"projects\": [\n    ]\n  }\n}"
            },
            "schema": {
              "properties": {
                "platform": {
                  "type": "string",
                  "enum": [
                    "ios",
                    "android",
                    "webplayer",
                    "webgl",
                    "standaloneosxintel",
                    "standaloneosxintel64",
                    "standaloneosxuniversal",
                    "standalonewindows",
                    "standalonewindows64",
                    "standalonelinux",
                    "standalonelinux64",
                    "standalonelinuxuniversal"
                  ]
                },
                "label": {
                  "type": "string"
                },
                "credentialid": {
                  "type": "string"
                },
                "created": {
                  "type": "string"
                },
                "lastMod": {
                  "type": "string"
                },
                "keystore": {
                  "properties": {
                    "alias": {
                      "description": "friendly name for keystore",
                      "type": "string"
                    },
                    "debug": {
                      "description": "whether this is a debug or production keystore",
                      "type": "boolean"
                    },
                    "expiration": {
                      "type": "string"
                    }
                  }
                },
                "links": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/orgs/{orgid}/credentials/signing/android/{credentialid}": {
      "x-swagger-router-controller": "credentials",
      "get": {
        "tags": [
          "credentials"
        ],
        "operationId": "getOneAndroidForOrg",
        "summary": "Get Android Credential Details for organization",
        "description": "Get specific organization android credential details",
        "security": [
          {
            "permissions": [
              "org:manager"
            ],
            "apikey": []
          }
        ],
        "parameters": [
          {
            "name": "orgid",
            "in": "path",
            "description": "Organization identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "credentialid",
            "in": "path",
            "description": "Credential Identifier",
            "required": true,
            "type": "string"
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X GET\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/orgs/{orgid}/credentials/signing/android/{credentialid}"
          },
          {
            "language": "python",
            "code": "credentialsApi = CredentialsApi(client)\ncredential = credentialsApi.get_one_android_for_org('{orgid}', '{credentialid}')"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "application/json": "{\n  \"platform\": \"android\",\n  \"label\": \"Auto Generated Debug Keystore\",\n  \"credentialid\": \"a7dba621-a877-43c5-8163-bda58247124e\",\n  \"created\": \"2015-08-27T22:29:00.023Z\",\n  \"lastMod\": \"2015-08-27T22:29:00.023Z\",\n  \"keystore\": {\n    \"alias\": \"androiddebugkey\",\n    \"debug\": true\n  },\n  \"links\": {\n    \"self\": {\n      \"method\": \"get\",\n      \"href\": \"/api/v1/orgs/example-org/credentials/signing/android/a7dba621-a877-43c5-8163-bda58247124e\"\n    },\n    \"delete\": {\n      \"method\": \"delete\",\n      \"href\": \"/api/v1/orgs/example-org/credentials/signing/android/a7dba621-a877-43c5-8163-bda58247124e\"\n    },\n    \"projects\": [\n      {\n        \"method\": \"get\",\n        \"href\": \"/api/v1/orgs/example-org/projects/new-project/\"\n      },\n      {\n        \"method\": \"get\",\n        \"href\": \"/api/v1/orgs/example-org/projects/new-project2/\"\n      }\n    ]\n  }\n}"
            },
            "schema": {
              "properties": {
                "platform": {
                  "type": "string",
                  "enum": [
                    "ios",
                    "android",
                    "webplayer",
                    "webgl",
                    "standaloneosxintel",
                    "standaloneosxintel64",
                    "standaloneosxuniversal",
                    "standalonewindows",
                    "standalonewindows64",
                    "standalonelinux",
                    "standalonelinux64",
                    "standalonelinuxuniversal"
                  ]
                },
                "label": {
                  "type": "string"
                },
                "credentialid": {
                  "type": "string"
                },
                "created": {
                  "type": "string"
                },
                "lastMod": {
                  "type": "string"
                },
                "keystore": {
                  "properties": {
                    "alias": {
                      "description": "friendly name for keystore",
                      "type": "string"
                    },
                    "debug": {
                      "description": "whether this is a debug or production keystore",
                      "type": "boolean"
                    },
                    "expiration": {
                      "type": "string"
                    }
                  }
                },
                "links": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "credentials"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "operationId": "updateAndroidForOrg",
        "summary": "Update Android Credentials for organization",
        "description": "Update an android keystore for the organization. NOTE: you must\nbe a manager in the organization to update credentials.\n",
        "security": [
          {
            "permissions": [
              "org:manager"
            ],
            "apikey": []
          }
        ],
        "parameters": [
          {
            "name": "orgid",
            "in": "path",
            "description": "Organization identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "credentialid",
            "in": "path",
            "description": "Credential Identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "label",
            "in": "formData",
            "description": "Label for the uploaded credential",
            "required": false,
            "type": "string"
          },
          {
            "name": "file",
            "in": "formData",
            "description": "Keystore file",
            "required": false,
            "type": "file"
          },
          {
            "name": "alias",
            "in": "formData",
            "description": "Keystore alias",
            "required": false,
            "type": "string"
          },
          {
            "name": "keypass",
            "in": "formData",
            "description": "Keystore keypass",
            "required": false,
            "type": "string"
          },
          {
            "name": "storepass",
            "in": "formData",
            "description": "Keystore storepass",
            "required": false,
            "type": "string"
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X PUT\n  -F file=@/Full/Path/To/android.keystore\n  -F label=Renamed%20Credentials\n  -F alias=betacred\n  -F keypass=betapass\n  -F storepass=unitypass\n  -H \"Content-Type: multipart/form-data\"\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/orgs/{orgid}/credentials/signing/android/{credentialid}"
          },
          {
            "language": "python",
            "code": "credentialsApi = CredentialsApi(client)\ncredentials = credentialsApi.update_android_for_org('{orgid}', '{credentialid}', \"Renamed Credentials\", \"/Full/Path/To/android.keystore\", \"betacred\", \"betapass\", \"unitypass\")"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "application/json": "{\n  \"platform\": \"android\",\n  \"label\": \"Renamed Credentials\",\n  \"credentialid\": \"a7dba621-a877-43c5-8163-bda58247124e\",\n  \"created\": \"2015-08-27T22:29:00.023Z\",\n  \"lastMod\": \"2015-08-27T22:29:00.023Z\",\n  \"keystore\": {\n    \"alias\": \"betacred\",\n    \"debug\": true\n  },\n  \"links\": {\n    \"self\": {\n      \"method\": \"get\",\n      \"href\": \"/api/v1/orgs/example-org/credentials/signing/android/a7dba621-a877-43c5-8163-bda58247124e\"\n    },\n    \"delete\": {\n      \"method\": \"delete\",\n      \"href\": \"/api/v1/orgs/example-org/credentials/signing/android/a7dba621-a877-43c5-8163-bda58247124e\"\n    },\n     \"projects\": [\n      {\n        \"method\": \"get\",\n        \"href\": \"/api/v1/orgs/example-org/projects/new-project/\"\n      },\n      {\n        \"method\": \"get\",\n        \"href\": \"/api/v1/orgs/example-org/projects/new-project2/\"\n      }\n    ]\n  }\n}"
            },
            "schema": {
              "properties": {
                "platform": {
                  "type": "string",
                  "enum": [
                    "ios",
                    "android",
                    "webplayer",
                    "webgl",
                    "standaloneosxintel",
                    "standaloneosxintel64",
                    "standaloneosxuniversal",
                    "standalonewindows",
                    "standalonewindows64",
                    "standalonelinux",
                    "standalonelinux64",
                    "standalonelinuxuniversal"
                  ]
                },
                "label": {
                  "type": "string"
                },
                "credentialid": {
                  "type": "string"
                },
                "created": {
                  "type": "string"
                },
                "lastMod": {
                  "type": "string"
                },
                "keystore": {
                  "properties": {
                    "alias": {
                      "description": "friendly name for keystore",
                      "type": "string"
                    },
                    "debug": {
                      "description": "whether this is a debug or production keystore",
                      "type": "boolean"
                    },
                    "expiration": {
                      "type": "string"
                    }
                  }
                },
                "links": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "credentials"
        ],
        "operationId": "deleteAndroidForOrg",
        "summary": "Delete Android Credentials for organization",
        "description": "Delete specific android credentials for an organization. NOTE:\nyou must be a manager in the organization to\ndelete credentials.\n",
        "security": [
          {
            "permissions": [
              "org:manager"
            ],
            "apikey": []
          }
        ],
        "parameters": [
          {
            "name": "orgid",
            "in": "path",
            "description": "Organization identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "credentialid",
            "in": "path",
            "description": "Credential Identifier",
            "required": true,
            "type": "string"
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X DELETE\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/orgs/{orgid}/credentials/signing/android/{credentialid}"
          },
          {
            "language": "python",
            "code": "credentialsApi = CredentialsApi(client)\ncredential = credentialsApi.delete_android_for_org('{orgid}', '{credentialid}')"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/orgs/{orgid}/projects/{projectid}/credentials/signing/android": {
      "x-swagger-router-controller": "credentials",
      "get": {
        "tags": [
          "credentials"
        ],
        "operationId": "getAllAndroid",
        "summary": "Get All Android Credentials",
        "description": "Get all credentials available for the project. A user in the\nprojects org will see all credentials uploaded for any project\nwithin the org, whereas a user with project-level permissions\nwill only see credentials assigned to the specific project.\n",
        "security": [
          {
            "permissions": [
              "project:manager"
            ],
            "apikey": []
          }
        ],
        "parameters": [
          {
            "name": "orgid",
            "in": "path",
            "description": "Organization identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectid",
            "in": "path",
            "description": "Project identifier",
            "required": true,
            "type": "string"
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X GET\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/orgs/{orgid}/projects/{projectid}/credentials/signing/android"
          },
          {
            "language": "python",
            "code": "credentialsApi = CredentialsApi(client)\ncredentials = credentialsApi.get_all_android('{orgid}', '{projectid}')"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "application/json": "[\n  {\n    \"platform\": \"android\",\n    \"label\": \"Auto Generated Debug Keystore\",\n    \"credentialid\": \"a7dba621-a877-43c5-8163-bda58247124e\",\n    \"created\": \"2015-08-27T22:29:00.023Z\",\n    \"lastMod\": \"2015-08-27T22:29:00.023Z\",\n    \"keystore\": {\n      \"alias\": \"androiddebugkey\",\n      \"debug\": true\n    },\n    \"links\": {\n      \"self\": {\n        \"method\": \"get\",\n        \"href\": \"/api/v1/orgs/example-org/projects/new-project/credentials/signing/android/a7dba621-a877-43c5-8163-bda58247124e\"\n      },\n      \"delete\": {\n        \"method\": \"delete\",\n        \"href\": \"/api/v1/orgs/example-org/projects/new-project/credentials/signing/android/a7dba621-a877-43c5-8163-bda58247124e\"\n      }\n    }\n  }\n]"
            },
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "platform": {
                    "type": "string",
                    "enum": [
                      "ios",
                      "android",
                      "webplayer",
                      "webgl",
                      "standaloneosxintel",
                      "standaloneosxintel64",
                      "standaloneosxuniversal",
                      "standalonewindows",
                      "standalonewindows64",
                      "standalonelinux",
                      "standalonelinux64",
                      "standalonelinuxuniversal"
                    ]
                  },
                  "label": {
                    "type": "string"
                  },
                  "credentialid": {
                    "type": "string"
                  },
                  "created": {
                    "type": "string"
                  },
                  "lastMod": {
                    "type": "string"
                  },
                  "keystore": {
                    "properties": {
                      "alias": {
                        "description": "friendly name for keystore",
                        "type": "string"
                      },
                      "debug": {
                        "description": "whether this is a debug or production keystore",
                        "type": "boolean"
                      },
                      "expiration": {
                        "type": "string"
                      }
                    }
                  },
                  "links": {
                    "type": "object"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "credentials"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "operationId": "addCredentialsAndroid",
        "summary": "Upload Android Credentials",
        "description": "Upload a new android keystore for the project. NOTE: you must\nbe a manager in the project's organization to add new credentials.\n",
        "security": [
          {
            "permissions": [
              "project:manager"
            ],
            "apikey": []
          }
        ],
        "parameters": [
          {
            "name": "orgid",
            "in": "path",
            "description": "Organization identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectid",
            "in": "path",
            "description": "Project identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "label",
            "in": "formData",
            "description": "Label for the uploaded credential",
            "required": true,
            "type": "string"
          },
          {
            "name": "file",
            "in": "formData",
            "description": "Keystore file",
            "required": true,
            "type": "file"
          },
          {
            "name": "alias",
            "in": "formData",
            "description": "Keystore alias",
            "required": true,
            "type": "string"
          },
          {
            "name": "keypass",
            "in": "formData",
            "description": "Keystore keypass",
            "required": true,
            "type": "string"
          },
          {
            "name": "storepass",
            "in": "formData",
            "description": "Keystore storepass",
            "required": true,
            "type": "string"
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X POST\n  -F file=@/Full/Path/To/android.keystore\n  -F label=Beta%20Credentials\n  -F alias=betacred\n  -F keypass=betapass\n  -F storepass=unitypass\n  -H \"Content-Type: multipart/form-data\"\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/orgs/{orgid}/projects/{projectid}/credentials/signing/android"
          },
          {
            "language": "python",
            "code": "credentialsApi = CredentialsApi(client)\ncredentials = credentialsApi.add_credentials_android('{orgid}', '{projectid}', \"Beta Credentials\", \"/Full/Path/To/android.keystore\", \"betacred\", \"betapass\", \"unitypass\")"
          }
        ],
        "responses": {
          "201": {
            "description": "OK",
            "examples": {
              "application/json": "{\n  \"platform\": \"android\",\n  \"label\": \"Beta Credentials\",\n  \"credentialid\": \"a7dba621-a877-43c5-8163-bda58247124e\",\n  \"created\": \"2015-08-27T22:29:00.023Z\",\n  \"lastMod\": \"2015-08-27T22:29:00.023Z\",\n  \"keystore\": {\n    \"alias\": \"betacred\",\n    \"debug\": true\n  },\n  \"links\": {\n    \"self\": {\n      \"method\": \"get\",\n      \"href\": \"/api/v1/orgs/example-org/projects/new-project/credentials/signing/android/a7dba621-a877-43c5-8163-bda58247124e\"\n    },\n    \"delete\": {\n      \"method\": \"delete\",\n      \"href\": \"/api/v1/orgs/example-org/projects/new-project/credentials/signing/android/a7dba621-a877-43c5-8163-bda58247124e\"\n    }\n  }\n}"
            },
            "schema": {
              "properties": {
                "platform": {
                  "type": "string",
                  "enum": [
                    "ios",
                    "android",
                    "webplayer",
                    "webgl",
                    "standaloneosxintel",
                    "standaloneosxintel64",
                    "standaloneosxuniversal",
                    "standalonewindows",
                    "standalonewindows64",
                    "standalonelinux",
                    "standalonelinux64",
                    "standalonelinuxuniversal"
                  ]
                },
                "label": {
                  "type": "string"
                },
                "credentialid": {
                  "type": "string"
                },
                "created": {
                  "type": "string"
                },
                "lastMod": {
                  "type": "string"
                },
                "keystore": {
                  "properties": {
                    "alias": {
                      "description": "friendly name for keystore",
                      "type": "string"
                    },
                    "debug": {
                      "description": "whether this is a debug or production keystore",
                      "type": "boolean"
                    },
                    "expiration": {
                      "type": "string"
                    }
                  }
                },
                "links": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/orgs/{orgid}/projects/{projectid}/credentials/signing/android/{credentialid}": {
      "x-swagger-router-controller": "credentials",
      "get": {
        "tags": [
          "credentials"
        ],
        "operationId": "getOneAndroid",
        "summary": "Get Android Credential Details",
        "description": "Get specific android credential details",
        "security": [
          {
            "permissions": [
              "project:manager"
            ],
            "apikey": []
          }
        ],
        "parameters": [
          {
            "name": "orgid",
            "in": "path",
            "description": "Organization identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectid",
            "in": "path",
            "description": "Project identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "credentialid",
            "in": "path",
            "description": "Credential Identifier",
            "required": true,
            "type": "string"
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X GET\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/orgs/{orgid}/projects/{projectid}/credentials/signing/android/{credentialid}"
          },
          {
            "language": "python",
            "code": "credentialsApi = CredentialsApi(client)\ncredential = credentialsApi.get_one_android('{orgid}', '{projectid}', '{credentialid}')"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "application/json": "{\n  \"platform\": \"android\",\n  \"label\": \"Auto Generated Debug Keystore\",\n  \"credentialid\": \"a7dba621-a877-43c5-8163-bda58247124e\",\n  \"created\": \"2015-08-27T22:29:00.023Z\",\n  \"lastMod\": \"2015-08-27T22:29:00.023Z\",\n  \"keystore\": {\n    \"alias\": \"androiddebugkey\",\n    \"debug\": true\n  },\n  \"links\": {\n    \"self\": {\n      \"method\": \"get\",\n      \"href\": \"/api/v1/orgs/example-org/projects/new-project/credentials/signing/android/a7dba621-a877-43c5-8163-bda58247124e\"\n    },\n    \"delete\": {\n      \"method\": \"delete\",\n      \"href\": \"/api/v1/orgs/example-org/projects/new-project/credentials/signing/android/a7dba621-a877-43c5-8163-bda58247124e\"\n    }\n  }\n}"
            },
            "schema": {
              "properties": {
                "platform": {
                  "type": "string",
                  "enum": [
                    "ios",
                    "android",
                    "webplayer",
                    "webgl",
                    "standaloneosxintel",
                    "standaloneosxintel64",
                    "standaloneosxuniversal",
                    "standalonewindows",
                    "standalonewindows64",
                    "standalonelinux",
                    "standalonelinux64",
                    "standalonelinuxuniversal"
                  ]
                },
                "label": {
                  "type": "string"
                },
                "credentialid": {
                  "type": "string"
                },
                "created": {
                  "type": "string"
                },
                "lastMod": {
                  "type": "string"
                },
                "keystore": {
                  "properties": {
                    "alias": {
                      "description": "friendly name for keystore",
                      "type": "string"
                    },
                    "debug": {
                      "description": "whether this is a debug or production keystore",
                      "type": "boolean"
                    },
                    "expiration": {
                      "type": "string"
                    }
                  }
                },
                "links": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "credentials"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "operationId": "updateAndroid",
        "summary": "Update Android Credentials",
        "description": "Update an android keystore for the project. NOTE: you must\nbe a manager in the project's organization to add new credentials.\n",
        "security": [
          {
            "permissions": [
              "project:manager"
            ],
            "apikey": []
          }
        ],
        "parameters": [
          {
            "name": "orgid",
            "in": "path",
            "description": "Organization identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectid",
            "in": "path",
            "description": "Project identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "credentialid",
            "in": "path",
            "description": "Credential Identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "label",
            "in": "formData",
            "description": "Label for the uploaded credential",
            "required": false,
            "type": "string"
          },
          {
            "name": "file",
            "in": "formData",
            "description": "Keystore file",
            "required": false,
            "type": "file"
          },
          {
            "name": "alias",
            "in": "formData",
            "description": "Keystore alias",
            "required": false,
            "type": "string"
          },
          {
            "name": "keypass",
            "in": "formData",
            "description": "Keystore keypass",
            "required": false,
            "type": "string"
          },
          {
            "name": "storepass",
            "in": "formData",
            "description": "Keystore storepass",
            "required": false,
            "type": "string"
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X PUT\n  -F file=@/Full/Path/To/android.keystore\n  -F label=Renamed%20Credentials\n  -F alias=betacred\n  -F keypass=betapass\n  -F storepass=unitypass\n  -H \"Content-Type: multipart/form-data\"\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/orgs/{orgid}/projects/{projectid}/credentials/signing/android/{credentialid}"
          },
          {
            "language": "python",
            "code": "credentialsApi = CredentialsApi(client)\ncredentials = credentialsApi.update_android('{orgid}', '{projectid}', '{credentialid}', \"Renamed Credentials\", \"/Full/Path/To/android.keystore\", \"betacred\", \"betapass\", \"unitypass\")"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "application/json": "{\n  \"platform\": \"android\",\n  \"label\": \"Renamed Credentials\",\n  \"credentialid\": \"a7dba621-a877-43c5-8163-bda58247124e\",\n  \"created\": \"2015-08-27T22:29:00.023Z\",\n  \"lastMod\": \"2015-08-27T22:29:00.023Z\",\n  \"keystore\": {\n    \"alias\": \"betacred\",\n    \"debug\": true\n  },\n  \"links\": {\n    \"self\": {\n      \"method\": \"get\",\n      \"href\": \"/api/v1/orgs/example-org/projects/new-project/credentials/signing/android/a7dba621-a877-43c5-8163-bda58247124e\"\n    },\n    \"delete\": {\n      \"method\": \"delete\",\n      \"href\": \"/api/v1/orgs/example-org/projects/new-project/credentials/signing/android/a7dba621-a877-43c5-8163-bda58247124e\"\n    }\n  }\n}"
            },
            "schema": {
              "properties": {
                "platform": {
                  "type": "string",
                  "enum": [
                    "ios",
                    "android",
                    "webplayer",
                    "webgl",
                    "standaloneosxintel",
                    "standaloneosxintel64",
                    "standaloneosxuniversal",
                    "standalonewindows",
                    "standalonewindows64",
                    "standalonelinux",
                    "standalonelinux64",
                    "standalonelinuxuniversal"
                  ]
                },
                "label": {
                  "type": "string"
                },
                "credentialid": {
                  "type": "string"
                },
                "created": {
                  "type": "string"
                },
                "lastMod": {
                  "type": "string"
                },
                "keystore": {
                  "properties": {
                    "alias": {
                      "description": "friendly name for keystore",
                      "type": "string"
                    },
                    "debug": {
                      "description": "whether this is a debug or production keystore",
                      "type": "boolean"
                    },
                    "expiration": {
                      "type": "string"
                    }
                  }
                },
                "links": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "credentials"
        ],
        "operationId": "deleteAndroid",
        "summary": "Delete Android Credentials",
        "description": "Delete specific android credentials for a project. NOTE:\nyou must be a manager in the project's organization to\ndelete credentials.\n",
        "security": [
          {
            "permissions": [
              "project:manager",
              "org:manager"
            ],
            "apikey": []
          }
        ],
        "parameters": [
          {
            "name": "orgid",
            "in": "path",
            "description": "Organization identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectid",
            "in": "path",
            "description": "Project identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "credentialid",
            "in": "path",
            "description": "Credential Identifier",
            "required": true,
            "type": "string"
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X DELETE\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/orgs/{orgid}/projects/{projectid}/credentials/signing/android/{credentialid}"
          },
          {
            "language": "python",
            "code": "credentialsApi = CredentialsApi(client)\ncredential = credentialsApi.delete_android('{orgid}', '{projectid}', '{credentialid}')"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/orgs/{orgid}/credentials/signing/ios": {
      "x-swagger-router-controller": "credentials",
      "get": {
        "tags": [
          "credentials"
        ],
        "operationId": "getAllIosForOrg",
        "summary": "Get All iOS Credentials for an oganization",
        "description": "Get all credentials available for the project. A user in the\nprojects org will see all credentials uploaded for any project\nwithin the org, whereas a user with project-level permissions\nwill only see credentials assigned to the specific project.\n",
        "security": [
          {
            "permissions": [
              "org:manager"
            ],
            "apikey": []
          }
        ],
        "parameters": [
          {
            "name": "orgid",
            "in": "path",
            "description": "Organization identifier",
            "required": true,
            "type": "string"
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X GET\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/orgs/{orgid}/credentials/signing/ios"
          },
          {
            "language": "python",
            "code": "credentialsApi = CredentialsApi(client)\ncredentials = credentialsApi.get_all_ios_for_org('{orgid}')"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "application/json": "[\n  {\n    \"platform\": \"ios\",\n    \"label\": \"iOS Beta\",\n    \"credentialid\": \"89d503e6-0878-437f-a24f-2b93288d01c5\",\n    \"created\": \"2015-08-27T22:28:59.948Z\",\n    \"lastMod\": \"2015-08-27T22:28:59.948Z\",\n    \"certificate\": {\n      \"teamId\": \"AAAAAAAAAA\",\n      \"certName\": \"iPhone Developer: JULIE SMITH (BBBBBBBBB)\",\n      \"expiration\": \"2016-08-05T18:57:54.000Z\",\n      \"isDistribution\": false\n    },\n    \"provisioningProfile\": {\n      \"teamId\": \"AAAAAAAAAA\",\n      \"bundleId\": \"com.unity3d.cloudbuild.*\",\n      \"expiration\": \"2016-08-06T21:53:56.000Z\",\n      \"isEnterpriseProfile\": false,\n      \"type\": \"developer\",\n      \"numDevices\": 2\n    },\n    \"links\": {\n      \"self\": {\n        \"method\": \"get\",\n        \"href\": \"/api/v1/orgs/example-org/projects/new-project/credentials/signing/ios/89d503e6-0878-437f-a24f-2b93288d01c5\"\n      },\n      \"delete\": {\n        \"method\": \"delete\",\n        \"href\": \"/api/v1/orgs/example-org/projects/new-project/credentials/signing/ios/89d503e6-0878-437f-a24f-2b93288d01c5\"\n      }\n    }\n  }\n]"
            },
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "platform": {
                    "type": "string",
                    "enum": [
                      "ios",
                      "android",
                      "webplayer",
                      "webgl",
                      "standaloneosxintel",
                      "standaloneosxintel64",
                      "standaloneosxuniversal",
                      "standalonewindows",
                      "standalonewindows64",
                      "standalonelinux",
                      "standalonelinux64",
                      "standalonelinuxuniversal"
                    ]
                  },
                  "label": {
                    "type": "string"
                  },
                  "credentialid": {
                    "type": "string"
                  },
                  "created": {
                    "type": "string"
                  },
                  "lastMod": {
                    "type": "string"
                  },
                  "certificate": {
                    "properties": {
                      "teamId": {
                        "type": "string",
                        "description": "generated team id from Apple"
                      },
                      "certName": {
                        "description": "certificate name (from the certificate)",
                        "type": "string"
                      },
                      "expiration": {
                        "description": "expiration date",
                        "type": "string"
                      },
                      "isDistribution": {
                        "description": "if this is a distribution certificate",
                        "type": "boolean"
                      },
                      "uploaded": {
                        "description": "uploaded date",
                        "type": "string"
                      }
                    }
                  },
                  "provisioningProfile": {
                    "properties": {
                      "teamId": {
                        "description": "generated team id from Apple",
                        "type": "string"
                      },
                      "bundleId": {
                        "description": "a unique identifier (com.example.name)",
                        "type": "string"
                      },
                      "expiration": {
                        "description": "expiration date",
                        "type": "string"
                      },
                      "isEnterpriseProfile": {
                        "description": "is this compiled for Apple's enterprise program",
                        "type": "boolean"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "developer",
                          "adhoc",
                          "appstore"
                        ]
                      },
                      "numDevices": {
                        "description": "number of devices provisioned for this certificate",
                        "type": "number"
                      },
                      "uploaded": {
                        "description": "uploaded date",
                        "type": "string"
                      },
                      "provisionedDevices": {
                        "description": "provisoned udids",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "links": {
                    "type": "object"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "credentials"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "operationId": "addCredentialsIosForOrg",
        "summary": "Upload iOS Credentials for organization",
        "description": "Upload a new iOS certificate and provisioning profile for the organization.\nNOTE: you must be a manager in the organization to add new\ncredentials.\n",
        "security": [
          {
            "permissions": [
              "org:manager"
            ],
            "apikey": []
          }
        ],
        "parameters": [
          {
            "name": "orgid",
            "in": "path",
            "description": "Organization identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "label",
            "in": "formData",
            "description": "Label for the uploaded credentials",
            "required": true,
            "type": "string"
          },
          {
            "name": "fileCertificate",
            "in": "formData",
            "description": "Certificate file (.p12)",
            "required": true,
            "type": "file"
          },
          {
            "name": "fileProvisioningProfile",
            "in": "formData",
            "description": "Provisioning Profile (.mobileprovision)",
            "required": true,
            "type": "file"
          },
          {
            "name": "certificatePass",
            "in": "formData",
            "description": "Certificate (.p12) password",
            "required": false,
            "type": "string"
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X POST\n  -F label=iOS%20Alpha\n  -F fileCertificate=@/Full/Path/To/alphacert.p12\n  -F fileProvisioningProfile=@/Full/Path/To/alpha.mobileprovision\n  -F certificatePass=unity\n  -H \"Content-Type: multipart/form-data\"\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/orgs/{orgid}/credentials/signing/ios"
          },
          {
            "language": "python",
            "code": "credentialsApi = CredentialsApi(client)\ncredential = credentialsApi.add_credentials_ios_for_org('{orgid}', \"iOS Alpha\", \"/Full/Path/To/alphacert.p12\", \"/Full/Path/To/alpha.mobileprovision\", certificate_pass=\"unity\")"
          }
        ],
        "responses": {
          "201": {
            "description": "OK",
            "examples": {
              "application/json": "{\n  \"platform\": \"ios\",\n  \"label\": \"iOS Alpha\",\n  \"credentialid\": \"fa5239b9-29a1-479b-bafc-247f19bf984f\",\n  \"created\": \"2015-11-18T22:57:01.755Z\",\n  \"lastMod\": \"2015-11-18T22:57:01.763Z\",\n  \"certificate\": {\n    \"teamId\": \"AAAAAAAAAA\",\n    \"certName\": \"iPhone Developer: JULIE SMITH (BBBBBBBBB)\",\n    \"expiration\": \"2016-08-05T18:57:54.000Z\",\n    \"isDistribution\": false\n  },\n  \"provisioningProfile\": {\n    \"teamId\": \"AAAAAAAAAA\",\n    \"bundleId\": \"com.unity3d.cloudbuild.*\",\n    \"expiration\": \"2016-08-06T21:53:56.000Z\",\n    \"isEnterpriseProfile\": false,\n    \"type\": \"developer\",\n    \"numDevices\": 2\n  },\n  \"links\": {\n    \"self\": {\n      \"method\": \"get\",\n      \"href\": \"/api/v1/orgs/example-org/projects/new-project/credentials/signing/ios/fa5239b9-29a1-479b-bafc-247f19bf984f\"\n    },\n    \"delete\": {\n      \"method\": \"delete\",\n      \"href\": \"/api/v1/orgs/example-org/projects/new-project/credentials/signing/ios/fa5239b9-29a1-479b-bafc-247f19bf984f\"\n    }\n  }\n}"
            },
            "schema": {
              "properties": {
                "platform": {
                  "type": "string",
                  "enum": [
                    "ios",
                    "android",
                    "webplayer",
                    "webgl",
                    "standaloneosxintel",
                    "standaloneosxintel64",
                    "standaloneosxuniversal",
                    "standalonewindows",
                    "standalonewindows64",
                    "standalonelinux",
                    "standalonelinux64",
                    "standalonelinuxuniversal"
                  ]
                },
                "label": {
                  "type": "string"
                },
                "credentialid": {
                  "type": "string"
                },
                "created": {
                  "type": "string"
                },
                "lastMod": {
                  "type": "string"
                },
                "certificate": {
                  "properties": {
                    "teamId": {
                      "type": "string",
                      "description": "generated team id from Apple"
                    },
                    "certName": {
                      "description": "certificate name (from the certificate)",
                      "type": "string"
                    },
                    "expiration": {
                      "description": "expiration date",
                      "type": "string"
                    },
                    "isDistribution": {
                      "description": "if this is a distribution certificate",
                      "type": "boolean"
                    },
                    "uploaded": {
                      "description": "uploaded date",
                      "type": "string"
                    }
                  }
                },
                "provisioningProfile": {
                  "properties": {
                    "teamId": {
                      "description": "generated team id from Apple",
                      "type": "string"
                    },
                    "bundleId": {
                      "description": "a unique identifier (com.example.name)",
                      "type": "string"
                    },
                    "expiration": {
                      "description": "expiration date",
                      "type": "string"
                    },
                    "isEnterpriseProfile": {
                      "description": "is this compiled for Apple's enterprise program",
                      "type": "boolean"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "developer",
                        "adhoc",
                        "appstore"
                      ]
                    },
                    "numDevices": {
                      "description": "number of devices provisioned for this certificate",
                      "type": "number"
                    },
                    "uploaded": {
                      "description": "uploaded date",
                      "type": "string"
                    },
                    "provisionedDevices": {
                      "description": "provisoned udids",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "links": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/orgs/{orgid}/credentials/signing/ios/{credentialid}": {
      "x-swagger-router-controller": "credentials",
      "get": {
        "tags": [
          "credentials"
        ],
        "operationId": "getOneIosForOrg",
        "summary": "Get iOS Credential Details for organization",
        "description": "Get specific iOS credential details",
        "security": [
          {
            "permissions": [
              "org:manager"
            ],
            "apikey": []
          }
        ],
        "parameters": [
          {
            "name": "orgid",
            "in": "path",
            "description": "Organization identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "credentialid",
            "in": "path",
            "description": "Credential Identifier",
            "required": true,
            "type": "string"
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X GET\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/orgs/{orgid}/credentials/signing/ios/{credentialid}"
          },
          {
            "language": "python",
            "code": "credentialsApi = CredentialsApi(client)\ncredential = credentialsApi.get_one_ios('{orgid}', '{credentialid}')"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "application/json": "{\n  \"platform\": \"ios\",\n  \"label\": \"iOS Beta\",\n  \"credentialid\": \"89d503e6-0878-437f-a24f-2b93288d01c5\",\n  \"created\": \"2015-08-27T22:28:59.948Z\",\n  \"lastMod\": \"2015-08-27T22:28:59.948Z\",\n  \"certificate\": {\n    \"teamId\": \"AAAAAAAAAA\",\n    \"certName\": \"iPhone Developer: JULIE SMITH (BBBBBBBBB)\",\n    \"expiration\": \"2016-08-05T18:57:54.000Z\",\n    \"isDistribution\": false\n  },\n  \"provisioningProfile\": {\n    \"teamId\": \"AAAAAAAAAA\",\n    \"bundleId\": \"com.unity3d.cloudbuild.*\",\n    \"expiration\": \"2016-08-06T21:53:56.000Z\",\n    \"isEnterpriseProfile\": false,\n    \"type\": \"developer\",\n    \"numDevices\": 2\n  },\n  \"links\": {\n    \"self\": {\n      \"method\": \"get\",\n      \"href\": \"/api/v1/orgs/example-org/projects/new-project/credentials/signing/ios/89d503e6-0878-437f-a24f-2b93288d01c5\"\n    },\n    \"delete\": {\n      \"method\": \"delete\",\n      \"href\": \"/api/v1/orgs/example-org/projects/new-project/credentials/signing/ios/89d503e6-0878-437f-a24f-2b93288d01c5\"\n    }\n  }\n}"
            },
            "schema": {
              "properties": {
                "platform": {
                  "type": "string",
                  "enum": [
                    "ios",
                    "android",
                    "webplayer",
                    "webgl",
                    "standaloneosxintel",
                    "standaloneosxintel64",
                    "standaloneosxuniversal",
                    "standalonewindows",
                    "standalonewindows64",
                    "standalonelinux",
                    "standalonelinux64",
                    "standalonelinuxuniversal"
                  ]
                },
                "label": {
                  "type": "string"
                },
                "credentialid": {
                  "type": "string"
                },
                "created": {
                  "type": "string"
                },
                "lastMod": {
                  "type": "string"
                },
                "certificate": {
                  "properties": {
                    "teamId": {
                      "type": "string",
                      "description": "generated team id from Apple"
                    },
                    "certName": {
                      "description": "certificate name (from the certificate)",
                      "type": "string"
                    },
                    "expiration": {
                      "description": "expiration date",
                      "type": "string"
                    },
                    "isDistribution": {
                      "description": "if this is a distribution certificate",
                      "type": "boolean"
                    },
                    "uploaded": {
                      "description": "uploaded date",
                      "type": "string"
                    }
                  }
                },
                "provisioningProfile": {
                  "properties": {
                    "teamId": {
                      "description": "generated team id from Apple",
                      "type": "string"
                    },
                    "bundleId": {
                      "description": "a unique identifier (com.example.name)",
                      "type": "string"
                    },
                    "expiration": {
                      "description": "expiration date",
                      "type": "string"
                    },
                    "isEnterpriseProfile": {
                      "description": "is this compiled for Apple's enterprise program",
                      "type": "boolean"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "developer",
                        "adhoc",
                        "appstore"
                      ]
                    },
                    "numDevices": {
                      "description": "number of devices provisioned for this certificate",
                      "type": "number"
                    },
                    "uploaded": {
                      "description": "uploaded date",
                      "type": "string"
                    },
                    "provisionedDevices": {
                      "description": "provisoned udids",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "links": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "credentials"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "operationId": "updateIosForOrg",
        "summary": "Update iOS Credentials for organization",
        "description": "Update an iOS certificate / provisioning profile.\nNOTE: you must be a manager in the project's organization to update\ncredentials.\n",
        "security": [
          {
            "permissions": [
              "org:manager"
            ],
            "apikey": []
          }
        ],
        "parameters": [
          {
            "name": "orgid",
            "in": "path",
            "description": "Organization identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "credentialid",
            "in": "path",
            "description": "Credential Identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "label",
            "in": "formData",
            "description": "Label for the updated credentials",
            "required": false,
            "type": "string"
          },
          {
            "name": "fileCertificate",
            "in": "formData",
            "description": "Certificate file (.p12)",
            "required": false,
            "type": "file"
          },
          {
            "name": "fileProvisioningProfile",
            "in": "formData",
            "description": "Provisioning Profile (.mobileprovision)",
            "required": false,
            "type": "file"
          },
          {
            "name": "certificatePass",
            "in": "formData",
            "description": "Certificate (.p12) password",
            "required": false,
            "type": "string"
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X PUT\n  -F label=iOS%20Renamed\n  -F fileCertificate=@/Full/Path/To/alphacert.p12\n  -F fileProvisioningProfile=@/Full/Path/To/alpha.mobileprovision\n  -F certificatePass=unity\n  -H \"Content-Type: multipart/form-data\"\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/orgs/{orgid}/credentials/signing/ios/{credentialid}"
          },
          {
            "language": "python",
            "code": "credentialsApi = CredentialsApi(client)\ncredential = credentialsApi.update_ios_for_org('{orgid}', '{credentialid}', \"iOS Renamed\", \"/Full/Path/To/alphacert.p12\", \"/Full/Path/To/alpha.mobileprovision\", certificate_pass=\"unity\")"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "application/json": "{\n  \"platform\": \"ios\",\n  \"label\": \"iOS Renamed\",\n  \"credentialid\": \"fa5239b9-29a1-479b-bafc-247f19bf984f\",\n  \"created\": \"2015-11-18T22:57:01.755Z\",\n  \"lastMod\": \"2015-11-18T22:57:01.763Z\",\n  \"certificate\": {\n    \"teamId\": \"AAAAAAAAAA\",\n    \"certName\": \"iPhone Developer: JULIE SMITH (BBBBBBBBB)\",\n    \"expiration\": \"2016-08-05T18:57:54.000Z\",\n    \"isDistribution\": false\n  },\n  \"provisioningProfile\": {\n    \"teamId\": \"AAAAAAAAAA\",\n    \"bundleId\": \"com.unity3d.cloudbuild.*\",\n    \"expiration\": \"2016-08-06T21:53:56.000Z\",\n    \"isEnterpriseProfile\": false,\n    \"type\": \"developer\",\n    \"numDevices\": 2\n  },\n  \"links\": {\n    \"self\": {\n      \"method\": \"get\",\n      \"href\": \"/api/v1/orgs/example-org/projects/new-project/credentials/signing/ios/fa5239b9-29a1-479b-bafc-247f19bf984f\"\n    },\n    \"delete\": {\n      \"method\": \"delete\",\n      \"href\": \"/api/v1/orgs/example-org/projects/new-project/credentials/signing/ios/fa5239b9-29a1-479b-bafc-247f19bf984f\"\n    }\n  }\n}"
            },
            "schema": {
              "properties": {
                "platform": {
                  "type": "string",
                  "enum": [
                    "ios",
                    "android",
                    "webplayer",
                    "webgl",
                    "standaloneosxintel",
                    "standaloneosxintel64",
                    "standaloneosxuniversal",
                    "standalonewindows",
                    "standalonewindows64",
                    "standalonelinux",
                    "standalonelinux64",
                    "standalonelinuxuniversal"
                  ]
                },
                "label": {
                  "type": "string"
                },
                "credentialid": {
                  "type": "string"
                },
                "created": {
                  "type": "string"
                },
                "lastMod": {
                  "type": "string"
                },
                "certificate": {
                  "properties": {
                    "teamId": {
                      "type": "string",
                      "description": "generated team id from Apple"
                    },
                    "certName": {
                      "description": "certificate name (from the certificate)",
                      "type": "string"
                    },
                    "expiration": {
                      "description": "expiration date",
                      "type": "string"
                    },
                    "isDistribution": {
                      "description": "if this is a distribution certificate",
                      "type": "boolean"
                    },
                    "uploaded": {
                      "description": "uploaded date",
                      "type": "string"
                    }
                  }
                },
                "provisioningProfile": {
                  "properties": {
                    "teamId": {
                      "description": "generated team id from Apple",
                      "type": "string"
                    },
                    "bundleId": {
                      "description": "a unique identifier (com.example.name)",
                      "type": "string"
                    },
                    "expiration": {
                      "description": "expiration date",
                      "type": "string"
                    },
                    "isEnterpriseProfile": {
                      "description": "is this compiled for Apple's enterprise program",
                      "type": "boolean"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "developer",
                        "adhoc",
                        "appstore"
                      ]
                    },
                    "numDevices": {
                      "description": "number of devices provisioned for this certificate",
                      "type": "number"
                    },
                    "uploaded": {
                      "description": "uploaded date",
                      "type": "string"
                    },
                    "provisionedDevices": {
                      "description": "provisoned udids",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "links": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "credentials"
        ],
        "operationId": "deleteIosForOrg",
        "summary": "Delete iOS Credentials for organization",
        "description": "Delete specific ios credentials. NOTE:\nyou must be a manager in the project's organization to\ndelete credentials.\n",
        "security": [
          {
            "permissions": [
              "org:manager"
            ],
            "apikey": []
          }
        ],
        "parameters": [
          {
            "name": "orgid",
            "in": "path",
            "description": "Organization identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "credentialid",
            "in": "path",
            "description": "Credential Identifier",
            "required": true,
            "type": "string"
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X DELETE\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/orgs/{orgid}/credentials/signing/ios/{credentialid}"
          },
          {
            "language": "python",
            "code": "credentialsApi = CredentialsApi(client)\ncredentialsApi.delete_ios_for_org('{orgid}', '{credentialid}')"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/orgs/{orgid}/projects/{projectid}/credentials/signing/ios": {
      "x-swagger-router-controller": "credentials",
      "get": {
        "tags": [
          "credentials"
        ],
        "operationId": "getAllIos",
        "summary": "Get All iOS Credentials",
        "description": "Get all credentials available for the project. A user in the\nprojects org will see all credentials uploaded for any project\nwithin the org, whereas a user with project-level permissions\nwill only see credentials assigned to the specific project.\n",
        "security": [
          {
            "permissions": [
              "project:manager"
            ],
            "apikey": []
          }
        ],
        "parameters": [
          {
            "name": "orgid",
            "in": "path",
            "description": "Organization identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectid",
            "in": "path",
            "description": "Project identifier",
            "required": true,
            "type": "string"
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X GET\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/orgs/{orgid}/projects/{projectid}/credentials/signing/ios"
          },
          {
            "language": "python",
            "code": "credentialsApi = CredentialsApi(client)\ncredentials = credentialsApi.get_all_ios('{orgid}', '{projectid}')"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "application/json": "[\n  {\n    \"platform\": \"ios\",\n    \"label\": \"iOS Beta\",\n    \"credentialid\": \"89d503e6-0878-437f-a24f-2b93288d01c5\",\n    \"created\": \"2015-08-27T22:28:59.948Z\",\n    \"lastMod\": \"2015-08-27T22:28:59.948Z\",\n    \"certificate\": {\n      \"teamId\": \"AAAAAAAAAA\",\n      \"certName\": \"iPhone Developer: JULIE SMITH (BBBBBBBBB)\",\n      \"expiration\": \"2016-08-05T18:57:54.000Z\",\n      \"isDistribution\": false\n    },\n    \"provisioningProfile\": {\n      \"teamId\": \"AAAAAAAAAA\",\n      \"bundleId\": \"com.unity3d.cloudbuild.*\",\n      \"expiration\": \"2016-08-06T21:53:56.000Z\",\n      \"isEnterpriseProfile\": false,\n      \"type\": \"developer\",\n      \"numDevices\": 2\n    },\n    \"links\": {\n      \"self\": {\n        \"method\": \"get\",\n        \"href\": \"/api/v1/orgs/example-org/projects/new-project/credentials/signing/ios/89d503e6-0878-437f-a24f-2b93288d01c5\"\n      },\n      \"delete\": {\n        \"method\": \"delete\",\n        \"href\": \"/api/v1/orgs/example-org/projects/new-project/credentials/signing/ios/89d503e6-0878-437f-a24f-2b93288d01c5\"\n      }\n    }\n  }\n]"
            },
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "platform": {
                    "type": "string",
                    "enum": [
                      "ios",
                      "android",
                      "webplayer",
                      "webgl",
                      "standaloneosxintel",
                      "standaloneosxintel64",
                      "standaloneosxuniversal",
                      "standalonewindows",
                      "standalonewindows64",
                      "standalonelinux",
                      "standalonelinux64",
                      "standalonelinuxuniversal"
                    ]
                  },
                  "label": {
                    "type": "string"
                  },
                  "credentialid": {
                    "type": "string"
                  },
                  "created": {
                    "type": "string"
                  },
                  "lastMod": {
                    "type": "string"
                  },
                  "certificate": {
                    "properties": {
                      "teamId": {
                        "type": "string",
                        "description": "generated team id from Apple"
                      },
                      "certName": {
                        "description": "certificate name (from the certificate)",
                        "type": "string"
                      },
                      "expiration": {
                        "description": "expiration date",
                        "type": "string"
                      },
                      "isDistribution": {
                        "description": "if this is a distribution certificate",
                        "type": "boolean"
                      },
                      "uploaded": {
                        "description": "uploaded date",
                        "type": "string"
                      }
                    }
                  },
                  "provisioningProfile": {
                    "properties": {
                      "teamId": {
                        "description": "generated team id from Apple",
                        "type": "string"
                      },
                      "bundleId": {
                        "description": "a unique identifier (com.example.name)",
                        "type": "string"
                      },
                      "expiration": {
                        "description": "expiration date",
                        "type": "string"
                      },
                      "isEnterpriseProfile": {
                        "description": "is this compiled for Apple's enterprise program",
                        "type": "boolean"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "developer",
                          "adhoc",
                          "appstore"
                        ]
                      },
                      "numDevices": {
                        "description": "number of devices provisioned for this certificate",
                        "type": "number"
                      },
                      "uploaded": {
                        "description": "uploaded date",
                        "type": "string"
                      },
                      "provisionedDevices": {
                        "description": "provisoned udids",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "links": {
                    "type": "object"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "credentials"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "operationId": "addCredentialsIos",
        "summary": "Upload iOS Credentials",
        "description": "Upload a new iOS certificate and provisioning profile for the project.\nNOTE: you must be a manager in the project's organization to add new\ncredentials.\n",
        "security": [
          {
            "permissions": [
              "project:manager"
            ],
            "apikey": []
          }
        ],
        "parameters": [
          {
            "name": "orgid",
            "in": "path",
            "description": "Organization identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectid",
            "in": "path",
            "description": "Project identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "label",
            "in": "formData",
            "description": "Label for the uploaded credentials",
            "required": true,
            "type": "string"
          },
          {
            "name": "fileCertificate",
            "in": "formData",
            "description": "Certificate file (.p12)",
            "required": true,
            "type": "file"
          },
          {
            "name": "fileProvisioningProfile",
            "in": "formData",
            "description": "Provisioning Profile (.mobileprovision)",
            "required": true,
            "type": "file"
          },
          {
            "name": "certificatePass",
            "in": "formData",
            "description": "Certificate (.p12) password",
            "required": false,
            "type": "string"
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X POST\n  -F label=iOS%20Alpha\n  -F fileCertificate=@/Full/Path/To/alphacert.p12\n  -F fileProvisioningProfile=@/Full/Path/To/alpha.mobileprovision\n  -F certificatePass=unity\n  -H \"Content-Type: multipart/form-data\"\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/orgs/{orgid}/projects/{projectid}/credentials/signing/ios"
          },
          {
            "language": "python",
            "code": "credentialsApi = CredentialsApi(client)\ncredential = credentialsApi.add_credentials_ios('{orgid}', '{projectid}', \"iOS Alpha\", \"/Full/Path/To/alphacert.p12\", \"/Full/Path/To/alpha.mobileprovision\", certificate_pass=\"unity\")"
          }
        ],
        "responses": {
          "201": {
            "description": "OK",
            "examples": {
              "application/json": "{\n  \"platform\": \"ios\",\n  \"label\": \"iOS Alpha\",\n  \"credentialid\": \"fa5239b9-29a1-479b-bafc-247f19bf984f\",\n  \"created\": \"2015-11-18T22:57:01.755Z\",\n  \"lastMod\": \"2015-11-18T22:57:01.763Z\",\n  \"certificate\": {\n    \"teamId\": \"AAAAAAAAAA\",\n    \"certName\": \"iPhone Developer: JULIE SMITH (BBBBBBBBB)\",\n    \"expiration\": \"2016-08-05T18:57:54.000Z\",\n    \"isDistribution\": false\n  },\n  \"provisioningProfile\": {\n    \"teamId\": \"AAAAAAAAAA\",\n    \"bundleId\": \"com.unity3d.cloudbuild.*\",\n    \"expiration\": \"2016-08-06T21:53:56.000Z\",\n    \"isEnterpriseProfile\": false,\n    \"type\": \"developer\",\n    \"numDevices\": 2\n  },\n  \"links\": {\n    \"self\": {\n      \"method\": \"get\",\n      \"href\": \"/api/v1/orgs/example-org/projects/new-project/credentials/signing/ios/fa5239b9-29a1-479b-bafc-247f19bf984f\"\n    },\n    \"delete\": {\n      \"method\": \"delete\",\n      \"href\": \"/api/v1/orgs/example-org/projects/new-project/credentials/signing/ios/fa5239b9-29a1-479b-bafc-247f19bf984f\"\n    }\n  }\n}"
            },
            "schema": {
              "properties": {
                "platform": {
                  "type": "string",
                  "enum": [
                    "ios",
                    "android",
                    "webplayer",
                    "webgl",
                    "standaloneosxintel",
                    "standaloneosxintel64",
                    "standaloneosxuniversal",
                    "standalonewindows",
                    "standalonewindows64",
                    "standalonelinux",
                    "standalonelinux64",
                    "standalonelinuxuniversal"
                  ]
                },
                "label": {
                  "type": "string"
                },
                "credentialid": {
                  "type": "string"
                },
                "created": {
                  "type": "string"
                },
                "lastMod": {
                  "type": "string"
                },
                "certificate": {
                  "properties": {
                    "teamId": {
                      "type": "string",
                      "description": "generated team id from Apple"
                    },
                    "certName": {
                      "description": "certificate name (from the certificate)",
                      "type": "string"
                    },
                    "expiration": {
                      "description": "expiration date",
                      "type": "string"
                    },
                    "isDistribution": {
                      "description": "if this is a distribution certificate",
                      "type": "boolean"
                    },
                    "uploaded": {
                      "description": "uploaded date",
                      "type": "string"
                    }
                  }
                },
                "provisioningProfile": {
                  "properties": {
                    "teamId": {
                      "description": "generated team id from Apple",
                      "type": "string"
                    },
                    "bundleId": {
                      "description": "a unique identifier (com.example.name)",
                      "type": "string"
                    },
                    "expiration": {
                      "description": "expiration date",
                      "type": "string"
                    },
                    "isEnterpriseProfile": {
                      "description": "is this compiled for Apple's enterprise program",
                      "type": "boolean"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "developer",
                        "adhoc",
                        "appstore"
                      ]
                    },
                    "numDevices": {
                      "description": "number of devices provisioned for this certificate",
                      "type": "number"
                    },
                    "uploaded": {
                      "description": "uploaded date",
                      "type": "string"
                    },
                    "provisionedDevices": {
                      "description": "provisoned udids",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "links": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/orgs/{orgid}/projects/{projectid}/credentials/signing/ios/{credentialid}": {
      "x-swagger-router-controller": "credentials",
      "get": {
        "tags": [
          "credentials"
        ],
        "operationId": "getOneIos",
        "summary": "Get iOS Credential Details",
        "description": "Get specific iOS credential details",
        "security": [
          {
            "permissions": [
              "project:manager"
            ],
            "apikey": []
          }
        ],
        "parameters": [
          {
            "name": "orgid",
            "in": "path",
            "description": "Organization identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectid",
            "in": "path",
            "description": "Project identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "credentialid",
            "in": "path",
            "description": "Credential Identifier",
            "required": true,
            "type": "string"
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X GET\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/orgs/{orgid}/projects/{projectid}/credentials/signing/ios/{credentialid}"
          },
          {
            "language": "python",
            "code": "credentialsApi = CredentialsApi(client)\ncredential = credentialsApi.get_one_ios('{orgid}', '{projectid}', '{credentialid}')"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "application/json": "{\n  \"platform\": \"ios\",\n  \"label\": \"iOS Beta\",\n  \"credentialid\": \"89d503e6-0878-437f-a24f-2b93288d01c5\",\n  \"created\": \"2015-08-27T22:28:59.948Z\",\n  \"lastMod\": \"2015-08-27T22:28:59.948Z\",\n  \"certificate\": {\n    \"teamId\": \"AAAAAAAAAA\",\n    \"certName\": \"iPhone Developer: JULIE SMITH (BBBBBBBBB)\",\n    \"expiration\": \"2016-08-05T18:57:54.000Z\",\n    \"isDistribution\": false\n  },\n  \"provisioningProfile\": {\n    \"teamId\": \"AAAAAAAAAA\",\n    \"bundleId\": \"com.unity3d.cloudbuild.*\",\n    \"expiration\": \"2016-08-06T21:53:56.000Z\",\n    \"isEnterpriseProfile\": false,\n    \"type\": \"developer\",\n    \"numDevices\": 2\n  },\n  \"links\": {\n    \"self\": {\n      \"method\": \"get\",\n      \"href\": \"/api/v1/orgs/example-org/projects/new-project/credentials/signing/ios/89d503e6-0878-437f-a24f-2b93288d01c5\"\n    },\n    \"delete\": {\n      \"method\": \"delete\",\n      \"href\": \"/api/v1/orgs/example-org/projects/new-project/credentials/signing/ios/89d503e6-0878-437f-a24f-2b93288d01c5\"\n    }\n  }\n}"
            },
            "schema": {
              "properties": {
                "platform": {
                  "type": "string",
                  "enum": [
                    "ios",
                    "android",
                    "webplayer",
                    "webgl",
                    "standaloneosxintel",
                    "standaloneosxintel64",
                    "standaloneosxuniversal",
                    "standalonewindows",
                    "standalonewindows64",
                    "standalonelinux",
                    "standalonelinux64",
                    "standalonelinuxuniversal"
                  ]
                },
                "label": {
                  "type": "string"
                },
                "credentialid": {
                  "type": "string"
                },
                "created": {
                  "type": "string"
                },
                "lastMod": {
                  "type": "string"
                },
                "certificate": {
                  "properties": {
                    "teamId": {
                      "type": "string",
                      "description": "generated team id from Apple"
                    },
                    "certName": {
                      "description": "certificate name (from the certificate)",
                      "type": "string"
                    },
                    "expiration": {
                      "description": "expiration date",
                      "type": "string"
                    },
                    "isDistribution": {
                      "description": "if this is a distribution certificate",
                      "type": "boolean"
                    },
                    "uploaded": {
                      "description": "uploaded date",
                      "type": "string"
                    }
                  }
                },
                "provisioningProfile": {
                  "properties": {
                    "teamId": {
                      "description": "generated team id from Apple",
                      "type": "string"
                    },
                    "bundleId": {
                      "description": "a unique identifier (com.example.name)",
                      "type": "string"
                    },
                    "expiration": {
                      "description": "expiration date",
                      "type": "string"
                    },
                    "isEnterpriseProfile": {
                      "description": "is this compiled for Apple's enterprise program",
                      "type": "boolean"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "developer",
                        "adhoc",
                        "appstore"
                      ]
                    },
                    "numDevices": {
                      "description": "number of devices provisioned for this certificate",
                      "type": "number"
                    },
                    "uploaded": {
                      "description": "uploaded date",
                      "type": "string"
                    },
                    "provisionedDevices": {
                      "description": "provisoned udids",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "links": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "credentials"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "operationId": "updateIos",
        "summary": "Update iOS Credentials",
        "description": "Update an iOS certificate / provisioning profile for the project.\nNOTE: you must be a manager in the project's organization to update\ncredentials.\n",
        "security": [
          {
            "permissions": [
              "project:manager"
            ],
            "apikey": []
          }
        ],
        "parameters": [
          {
            "name": "orgid",
            "in": "path",
            "description": "Organization identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectid",
            "in": "path",
            "description": "Project identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "credentialid",
            "in": "path",
            "description": "Credential Identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "label",
            "in": "formData",
            "description": "Label for the updated credentials",
            "required": false,
            "type": "string"
          },
          {
            "name": "fileCertificate",
            "in": "formData",
            "description": "Certificate file (.p12)",
            "required": false,
            "type": "file"
          },
          {
            "name": "fileProvisioningProfile",
            "in": "formData",
            "description": "Provisioning Profile (.mobileprovision)",
            "required": false,
            "type": "file"
          },
          {
            "name": "certificatePass",
            "in": "formData",
            "description": "Certificate (.p12) password",
            "required": false,
            "type": "string"
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X PUT\n  -F label=iOS%20Renamed\n  -F fileCertificate=@/Full/Path/To/alphacert.p12\n  -F fileProvisioningProfile=@/Full/Path/To/alpha.mobileprovision\n  -F certificatePass=unity\n  -H \"Content-Type: multipart/form-data\"\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/orgs/{orgid}/projects/{projectid}/credentials/signing/ios/{credentialid}"
          },
          {
            "language": "python",
            "code": "credentialsApi = CredentialsApi(client)\ncredential = credentialsApi.update_ios('{orgid}', '{projectid}', '{credentialid}', \"iOS Renamed\", \"/Full/Path/To/alphacert.p12\", \"/Full/Path/To/alpha.mobileprovision\", certificate_pass=\"unity\")"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "application/json": "{\n  \"platform\": \"ios\",\n  \"label\": \"iOS Renamed\",\n  \"credentialid\": \"fa5239b9-29a1-479b-bafc-247f19bf984f\",\n  \"created\": \"2015-11-18T22:57:01.755Z\",\n  \"lastMod\": \"2015-11-18T22:57:01.763Z\",\n  \"certificate\": {\n    \"teamId\": \"AAAAAAAAAA\",\n    \"certName\": \"iPhone Developer: JULIE SMITH (BBBBBBBBB)\",\n    \"expiration\": \"2016-08-05T18:57:54.000Z\",\n    \"isDistribution\": false\n  },\n  \"provisioningProfile\": {\n    \"teamId\": \"AAAAAAAAAA\",\n    \"bundleId\": \"com.unity3d.cloudbuild.*\",\n    \"expiration\": \"2016-08-06T21:53:56.000Z\",\n    \"isEnterpriseProfile\": false,\n    \"type\": \"developer\",\n    \"numDevices\": 2\n  },\n  \"links\": {\n    \"self\": {\n      \"method\": \"get\",\n      \"href\": \"/api/v1/orgs/example-org/projects/new-project/credentials/signing/ios/fa5239b9-29a1-479b-bafc-247f19bf984f\"\n    },\n    \"delete\": {\n      \"method\": \"delete\",\n      \"href\": \"/api/v1/orgs/example-org/projects/new-project/credentials/signing/ios/fa5239b9-29a1-479b-bafc-247f19bf984f\"\n    }\n  }\n}"
            },
            "schema": {
              "properties": {
                "platform": {
                  "type": "string",
                  "enum": [
                    "ios",
                    "android",
                    "webplayer",
                    "webgl",
                    "standaloneosxintel",
                    "standaloneosxintel64",
                    "standaloneosxuniversal",
                    "standalonewindows",
                    "standalonewindows64",
                    "standalonelinux",
                    "standalonelinux64",
                    "standalonelinuxuniversal"
                  ]
                },
                "label": {
                  "type": "string"
                },
                "credentialid": {
                  "type": "string"
                },
                "created": {
                  "type": "string"
                },
                "lastMod": {
                  "type": "string"
                },
                "certificate": {
                  "properties": {
                    "teamId": {
                      "type": "string",
                      "description": "generated team id from Apple"
                    },
                    "certName": {
                      "description": "certificate name (from the certificate)",
                      "type": "string"
                    },
                    "expiration": {
                      "description": "expiration date",
                      "type": "string"
                    },
                    "isDistribution": {
                      "description": "if this is a distribution certificate",
                      "type": "boolean"
                    },
                    "uploaded": {
                      "description": "uploaded date",
                      "type": "string"
                    }
                  }
                },
                "provisioningProfile": {
                  "properties": {
                    "teamId": {
                      "description": "generated team id from Apple",
                      "type": "string"
                    },
                    "bundleId": {
                      "description": "a unique identifier (com.example.name)",
                      "type": "string"
                    },
                    "expiration": {
                      "description": "expiration date",
                      "type": "string"
                    },
                    "isEnterpriseProfile": {
                      "description": "is this compiled for Apple's enterprise program",
                      "type": "boolean"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "developer",
                        "adhoc",
                        "appstore"
                      ]
                    },
                    "numDevices": {
                      "description": "number of devices provisioned for this certificate",
                      "type": "number"
                    },
                    "uploaded": {
                      "description": "uploaded date",
                      "type": "string"
                    },
                    "provisionedDevices": {
                      "description": "provisoned udids",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "links": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "credentials"
        ],
        "operationId": "deleteIos",
        "summary": "Delete iOS Credentials",
        "description": "Delete specific ios credentials for a project. NOTE:\nyou must be a manager in the project's organization to\ndelete credentials.\n",
        "security": [
          {
            "permissions": [
              "project:manager",
              "org:manager"
            ],
            "apikey": []
          }
        ],
        "parameters": [
          {
            "name": "orgid",
            "in": "path",
            "description": "Organization identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectid",
            "in": "path",
            "description": "Project identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "credentialid",
            "in": "path",
            "description": "Credential Identifier",
            "required": true,
            "type": "string"
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X DELETE\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/orgs/{orgid}/projects/{projectid}/credentials/signing/ios/{credentialid}"
          },
          {
            "language": "python",
            "code": "credentialsApi = CredentialsApi(client)\ncredentialsApi.delete_ios('{orgid}', '{projectid}', '{credentialid}')"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/orgs/{orgid}/credentials/signing/osx": {
      "x-swagger-router-controller": "credentials",
      "get": {
        "tags": [
          "credentials"
        ],
        "operationId": "getAllOsxForOrg",
        "summary": "Get All OSX Credentials for an oganization",
        "description": "Get all credentials available for the project. A user in the\nprojects org will see all credentials uploaded for any project\nwithin the org, whereas a user with project-level permissions\nwill only see credentials assigned to the specific project.\n",
        "security": [
          {
            "permissions": [
              "org:manager"
            ],
            "apikey": []
          }
        ],
        "parameters": [
          {
            "name": "orgid",
            "in": "path",
            "description": "Organization identifier",
            "required": true,
            "type": "string"
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X GET\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/orgs/{orgid}/credentials/signing/osx"
          },
          {
            "language": "python",
            "code": "credentialsApi = CredentialsApi(client)\ncredentials = credentialsApi.get_all_osx_for_org('{orgid}')"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "platform": {
                    "type": "string",
                    "enum": [
                      "ios",
                      "android",
                      "webplayer",
                      "webgl",
                      "standaloneosxintel",
                      "standaloneosxintel64",
                      "standaloneosxuniversal",
                      "standalonewindows",
                      "standalonewindows64",
                      "standalonelinux",
                      "standalonelinux64",
                      "standalonelinuxuniversal"
                    ]
                  },
                  "label": {
                    "type": "string"
                  },
                  "credentialid": {
                    "type": "string"
                  },
                  "created": {
                    "type": "string"
                  },
                  "lastMod": {
                    "type": "string"
                  },
                  "certificate": {
                    "properties": {
                      "certName": {
                        "type": "string"
                      },
                      "expiration": {
                        "description": "expiration date",
                        "type": "string"
                      },
                      "uploaded": {
                        "description": "uploaded date",
                        "type": "string"
                      }
                    }
                  },
                  "providerName": {
                    "type": "string"
                  },
                  "appleIdUsername": {
                    "type": "string"
                  },
                  "links": {
                    "type": "object"
                  }
                }
              }
            },
            "examples": {
              "application/json": "[\n  {\n    \"platform\":\"standaloneosxuniversal\",\n    \"label\":\"demo new credentials\",\n    \"credentialid\":\"aff3518d-8d7b-45fc-9f04-e9f6b53247f7\",\n    \"created\":\"2020-04-09T15:04:23.066Z\",\n    \"lastMod\":\"2020-04-09T15:04:23.069Z\",\n    \"certificate\":{\n      \"certName\":\"Mac Developer: Unity Test (APRY987Y84)\",\n      \"expiration\":\"2021-03-05T19:38:25.000Z\",\n    },\n    \"appleIdUsername\":\"test user\",\n    \"links\":{\n      \"self\":{\n        \"method\":\"get\",\n        \"href\":\"/api/v1/orgs/victorw/projects/e757c603-36f9-42b8-b921-6551bbbafb7d/credentials/signing/osx/aff3518d-8d7b-45fc-9f04-e9f6b53247f7\",\n      },\n      \"delete\":{\n        \"method\":\"delete\",\n        \"href\":\"/api/v1/orgs/victorw/projects/e757c603-36f9-42b8-b921-6551bbbafb7d/credentials/signing/osx/aff3518d-8d7b-45fc-9f04-e9f6b53247f7\",\n      },\n    }\n  }\n]"
            }
          }
        }
      },
      "post": {
        "tags": [
          "credentials"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "operationId": "addCredentialsOsxForOrg",
        "summary": "Upload OSX Credentials for organization",
        "description": "Upload a new OSX certificate and provisioning profile for the organization.\nNOTE: you must be a manager in the organization to add new\ncredentials.\n",
        "security": [
          {
            "permissions": [
              "org:manager"
            ],
            "apikey": []
          }
        ],
        "parameters": [
          {
            "name": "orgid",
            "in": "path",
            "description": "Organization identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "label",
            "in": "formData",
            "description": "Label for the uploaded credentials",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificate",
            "in": "formData",
            "description": "Certificate file (.p12)",
            "required": true,
            "type": "file"
          },
          {
            "name": "certificatePass",
            "in": "formData",
            "description": "Certificate (.p12) password",
            "required": false,
            "type": "string"
          },
          {
            "name": "entitlementsFile",
            "in": "formData",
            "description": "Entitlements file (.entitlements)",
            "required": false,
            "type": "file"
          },
          {
            "name": "providerName",
            "in": "formData",
            "description": "Provider Name",
            "required": false,
            "type": "string"
          },
          {
            "name": "appleIdUsername",
            "in": "formData",
            "description": "Apple ID Username",
            "required": true,
            "type": "string"
          },
          {
            "name": "appleIdPassword",
            "in": "formData",
            "description": "Apple ID Password",
            "required": true,
            "type": "string"
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X POST\n  -F label=OSX%20Alpha\n  -F certificate=@/Full/Path/To/alphacert.p12\n  -F certificatePass=unity\n  -F appleIdUsername=myUser\n  -F appleIdPassword=myPass\n  -H \"Content-Type: multipart/form-data\"\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/orgs/{orgid}/credentials/signing/osx"
          },
          {
            "language": "python",
            "code": "credentialsApi = CredentialsApi(client)\ncredential = credentialsApi.add_credentials_osx_for_org('{orgid}', \"OSX Alpha\", \"/Full/Path/To/alphacert.p12\", {\"certificate\"=\"unity\", \"appleIdUsername\"=\"myUser\", \"appleIdPassword\"=\"myPass\"})"
          }
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "properties": {
                "platform": {
                  "type": "string",
                  "enum": [
                    "ios",
                    "android",
                    "webplayer",
                    "webgl",
                    "standaloneosxintel",
                    "standaloneosxintel64",
                    "standaloneosxuniversal",
                    "standalonewindows",
                    "standalonewindows64",
                    "standalonelinux",
                    "standalonelinux64",
                    "standalonelinuxuniversal"
                  ]
                },
                "label": {
                  "type": "string"
                },
                "credentialid": {
                  "type": "string"
                },
                "created": {
                  "type": "string"
                },
                "lastMod": {
                  "type": "string"
                },
                "certificate": {
                  "properties": {
                    "certName": {
                      "type": "string"
                    },
                    "expiration": {
                      "description": "expiration date",
                      "type": "string"
                    },
                    "uploaded": {
                      "description": "uploaded date",
                      "type": "string"
                    }
                  }
                },
                "providerName": {
                  "type": "string"
                },
                "appleIdUsername": {
                  "type": "string"
                },
                "links": {
                  "type": "object"
                }
              }
            },
            "examples": {
              "application/json": "{\n  \"platform\":\"standaloneosxuniversal\",\n  \"label\":\"demo new credentials\",\n  \"credentialid\":\"aff3518d-8d7b-45fc-9f04-e9f6b53247f7\",\n  \"created\":\"2020-04-09T15:04:23.066Z\",\n  \"lastMod\":\"2020-04-09T15:04:23.069Z\",\n  \"certificate\":{\n    \"certName\":\"Mac Developer: Unity Test (APRY987Y84)\",\n    \"expiration\":\"2021-03-05T19:38:25.000Z\",\n  },\n  \"appleIdUsername\":\"test user\",\n  \"links\":{\n    \"self\":{\n      \"method\":\"get\",\n      \"href\":\"/api/v1/orgs/victorw/projects/e757c603-36f9-42b8-b921-6551bbbafb7d/credentials/signing/osx/aff3518d-8d7b-45fc-9f04-e9f6b53247f7\",\n    },\n    \"delete\":{\n      \"method\":\"delete\",\n      \"href\":\"/api/v1/orgs/victorw/projects/e757c603-36f9-42b8-b921-6551bbbafb7d/credentials/signing/osx/aff3518d-8d7b-45fc-9f04-e9f6b53247f7\",\n    },\n  }\n}"
            }
          }
        }
      }
    },
    "/orgs/{orgid}/credentials/signing/osx/{credentialid}": {
      "x-swagger-router-controller": "credentials",
      "get": {
        "tags": [
          "credentials"
        ],
        "operationId": "getOneOsxForOrg",
        "summary": "Get OSX Credential Details for organization",
        "description": "Get specific OSX credential details",
        "security": [
          {
            "permissions": [
              "org:manager"
            ],
            "apikey": []
          }
        ],
        "parameters": [
          {
            "name": "orgid",
            "in": "path",
            "description": "Organization identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "credentialid",
            "in": "path",
            "description": "Credential Identifier",
            "required": true,
            "type": "string"
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X GET\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/orgs/{orgid}/credentials/signing/osx/{credentialid}"
          },
          {
            "language": "python",
            "code": "credentialsApi = CredentialsApi(client)\ncredential = credentialsApi.get_one_osx('{orgid}', '{credentialid}')"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "platform": {
                  "type": "string",
                  "enum": [
                    "ios",
                    "android",
                    "webplayer",
                    "webgl",
                    "standaloneosxintel",
                    "standaloneosxintel64",
                    "standaloneosxuniversal",
                    "standalonewindows",
                    "standalonewindows64",
                    "standalonelinux",
                    "standalonelinux64",
                    "standalonelinuxuniversal"
                  ]
                },
                "label": {
                  "type": "string"
                },
                "credentialid": {
                  "type": "string"
                },
                "created": {
                  "type": "string"
                },
                "lastMod": {
                  "type": "string"
                },
                "certificate": {
                  "properties": {
                    "certName": {
                      "type": "string"
                    },
                    "expiration": {
                      "description": "expiration date",
                      "type": "string"
                    },
                    "uploaded": {
                      "description": "uploaded date",
                      "type": "string"
                    }
                  }
                },
                "providerName": {
                  "type": "string"
                },
                "appleIdUsername": {
                  "type": "string"
                },
                "links": {
                  "type": "object"
                }
              }
            },
            "examples": {
              "application/json": "{\n  \"platform\":\"standaloneosxuniversal\",\n  \"label\":\"demo new credentials\",\n  \"credentialid\":\"aff3518d-8d7b-45fc-9f04-e9f6b53247f7\",\n  \"created\":\"2020-04-09T15:04:23.066Z\",\n  \"lastMod\":\"2020-04-09T15:04:23.069Z\",\n  \"certificate\":{\n    \"certName\":\"Mac Developer: Unity Test (APRY987Y84)\",\n    \"expiration\":\"2021-03-05T19:38:25.000Z\",\n  },\n  \"appleIdUsername\":\"test user\",\n  \"links\":{\n    \"self\":{\n      \"method\":\"get\",\n      \"href\":\"/api/v1/orgs/victorw/projects/e757c603-36f9-42b8-b921-6551bbbafb7d/credentials/signing/osx/aff3518d-8d7b-45fc-9f04-e9f6b53247f7\",\n    },\n    \"delete\":{\n      \"method\":\"delete\",\n      \"href\":\"/api/v1/orgs/victorw/projects/e757c603-36f9-42b8-b921-6551bbbafb7d/credentials/signing/osx/aff3518d-8d7b-45fc-9f04-e9f6b53247f7\",\n    },\n  }\n}"
            }
          }
        }
      },
      "put": {
        "tags": [
          "credentials"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "operationId": "updateOsxForOrg",
        "summary": "Update OSX Credentials for organization",
        "description": "Update an OSX certificate / provisioning profile.\nNOTE: you must be a manager in the project's organization to update\ncredentials.\n",
        "security": [
          {
            "permissions": [
              "org:manager"
            ],
            "apikey": []
          }
        ],
        "parameters": [
          {
            "name": "orgid",
            "in": "path",
            "description": "Organization identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "credentialid",
            "in": "path",
            "description": "Credential Identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "label",
            "in": "formData",
            "description": "Label for the updated credentials",
            "required": false,
            "type": "string"
          },
          {
            "name": "certificate",
            "in": "formData",
            "description": "Certificate file (.p12)",
            "required": false,
            "type": "file"
          },
          {
            "name": "certificatePass",
            "in": "formData",
            "description": "Certificate (.p12) password",
            "required": false,
            "type": "string"
          },
          {
            "name": "entitlementsFile",
            "in": "formData",
            "description": "Entitlements File (.entitlements)",
            "required": false,
            "type": "file"
          },
          {
            "name": "providerName",
            "in": "formData",
            "description": "Provider Name",
            "required": false,
            "type": "string"
          },
          {
            "name": "appleIdUsername",
            "in": "formData",
            "description": "Apple ID Username",
            "required": false,
            "type": "string"
          },
          {
            "name": "appleIdPassword",
            "in": "formData",
            "description": "Apple ID Password",
            "required": false,
            "type": "string"
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X PUT\n  -F label=OSX%20Renamed\n  -F certificate=@/Full/Path/To/alphacert.p12\n  -F certificatePass=unity\n  -F appleIdUsername=myUser\n  -F appleIdPassword=myPass\n  -H \"Content-Type: multipart/form-data\"\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/orgs/{orgid}/credentials/signing/osx/{credentialid}"
          },
          {
            "language": "python",
            "code": "credentialsApi = CredentialsApi(client)\ncredential = credentialsApi.update_osx_for_org('{orgid}', '{credentialid}', \"OSX Renamed\", \"/Full/Path/To/alphacert.p12\", {\"certificate\"=\"unity\", \"appleIdUsername\"=\"myUser\", \"appleIdPassword\"=\"myPass\"})"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "application/json": "{\n  \"platform\":\"standaloneosxuniversal\",\n  \"label\":\"demo new credentials\",\n  \"credentialid\":\"aff3518d-8d7b-45fc-9f04-e9f6b53247f7\",\n  \"created\":\"2020-04-09T15:04:23.066Z\",\n  \"lastMod\":\"2020-04-09T15:04:23.069Z\",\n  \"certificate\":{\n    \"certName\":\"Mac Developer: Unity Test (APRY987Y84)\",\n    \"expiration\":\"2021-03-05T19:38:25.000Z\",\n  },\n  \"appleIdUsername\":\"test user\",\n  \"links\":{\n    \"self\":{\n      \"method\":\"get\",\n      \"href\":\"/api/v1/orgs/victorw/projects/e757c603-36f9-42b8-b921-6551bbbafb7d/credentials/signing/osx/aff3518d-8d7b-45fc-9f04-e9f6b53247f7\",\n    },\n    \"delete\":{\n      \"method\":\"delete\",\n      \"href\":\"/api/v1/orgs/victorw/projects/e757c603-36f9-42b8-b921-6551bbbafb7d/credentials/signing/osx/aff3518d-8d7b-45fc-9f04-e9f6b53247f7\",\n    },\n  }\n}"
            },
            "schema": {
              "properties": {
                "platform": {
                  "type": "string",
                  "enum": [
                    "ios",
                    "android",
                    "webplayer",
                    "webgl",
                    "standaloneosxintel",
                    "standaloneosxintel64",
                    "standaloneosxuniversal",
                    "standalonewindows",
                    "standalonewindows64",
                    "standalonelinux",
                    "standalonelinux64",
                    "standalonelinuxuniversal"
                  ]
                },
                "label": {
                  "type": "string"
                },
                "credentialid": {
                  "type": "string"
                },
                "created": {
                  "type": "string"
                },
                "lastMod": {
                  "type": "string"
                },
                "certificate": {
                  "properties": {
                    "certName": {
                      "type": "string"
                    },
                    "expiration": {
                      "description": "expiration date",
                      "type": "string"
                    },
                    "uploaded": {
                      "description": "uploaded date",
                      "type": "string"
                    }
                  }
                },
                "providerName": {
                  "type": "string"
                },
                "appleIdUsername": {
                  "type": "string"
                },
                "links": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "credentials"
        ],
        "operationId": "deleteOsxForOrg",
        "summary": "Delete OSX Credentials for organization",
        "description": "Delete specific OSX credentials. NOTE:\nyou must be a manager in the project's organization to\ndelete credentials.\n",
        "security": [
          {
            "permissions": [
              "org:manager"
            ],
            "apikey": []
          }
        ],
        "parameters": [
          {
            "name": "orgid",
            "in": "path",
            "description": "Organization identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "credentialid",
            "in": "path",
            "description": "Credential Identifier",
            "required": true,
            "type": "string"
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X DELETE\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/orgs/{orgid}/credentials/signing/osx/{credentialid}"
          },
          {
            "language": "python",
            "code": "credentialsApi = CredentialsApi(client)\ncredentialsApi.delete_osx_for_org('{orgid}', '{credentialid}')"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/orgs/{orgid}/projects/{projectid}/credentials/signing/osx": {
      "x-swagger-router-controller": "credentials",
      "get": {
        "tags": [
          "credentials"
        ],
        "operationId": "getAllOsx",
        "summary": "Get All OSX Credentials",
        "description": "Get all credentials available for the project. A user in the\nprojects org will see all credentials uploaded for any project\nwithin the org, whereas a user with project-level permissions\nwill only see credentials assigned to the specific project.\n",
        "security": [
          {
            "permissions": [
              "project:manager"
            ],
            "apikey": []
          }
        ],
        "parameters": [
          {
            "name": "orgid",
            "in": "path",
            "description": "Organization identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectid",
            "in": "path",
            "description": "Project identifier",
            "required": true,
            "type": "string"
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X GET\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/orgs/{orgid}/projects/{projectid}/credentials/signing/osx"
          },
          {
            "language": "python",
            "code": "credentialsApi = CredentialsApi(client)\ncredentials = credentialsApi.get_all_osx('{orgid}', '{projectid}')"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "platform": {
                    "type": "string",
                    "enum": [
                      "ios",
                      "android",
                      "webplayer",
                      "webgl",
                      "standaloneosxintel",
                      "standaloneosxintel64",
                      "standaloneosxuniversal",
                      "standalonewindows",
                      "standalonewindows64",
                      "standalonelinux",
                      "standalonelinux64",
                      "standalonelinuxuniversal"
                    ]
                  },
                  "label": {
                    "type": "string"
                  },
                  "credentialid": {
                    "type": "string"
                  },
                  "created": {
                    "type": "string"
                  },
                  "lastMod": {
                    "type": "string"
                  },
                  "certificate": {
                    "properties": {
                      "certName": {
                        "type": "string"
                      },
                      "expiration": {
                        "description": "expiration date",
                        "type": "string"
                      },
                      "uploaded": {
                        "description": "uploaded date",
                        "type": "string"
                      }
                    }
                  },
                  "providerName": {
                    "type": "string"
                  },
                  "appleIdUsername": {
                    "type": "string"
                  },
                  "links": {
                    "type": "object"
                  }
                }
              }
            },
            "examples": {
              "application/json": "[\n  {\n    \"platform\":\"standaloneosxuniversal\",\n    \"label\":\"demo new credentials\",\n    \"credentialid\":\"aff3518d-8d7b-45fc-9f04-e9f6b53247f7\",\n    \"created\":\"2020-04-09T15:04:23.066Z\",\n    \"lastMod\":\"2020-04-09T15:04:23.069Z\",\n    \"certificate\":{\n      \"certName\":\"Mac Developer: Unity Test (APRY987Y84)\",\n      \"expiration\":\"2021-03-05T19:38:25.000Z\",\n    },\n    \"appleIdUsername\":\"test user\",\n    \"links\":{\n      \"self\":{\n        \"method\":\"get\",\n        \"href\":\"/api/v1/orgs/victorw/projects/e757c603-36f9-42b8-b921-6551bbbafb7d/credentials/signing/osx/aff3518d-8d7b-45fc-9f04-e9f6b53247f7\",\n      },\n      \"delete\":{\n        \"method\":\"delete\",\n        \"href\":\"/api/v1/orgs/victorw/projects/e757c603-36f9-42b8-b921-6551bbbafb7d/credentials/signing/osx/aff3518d-8d7b-45fc-9f04-e9f6b53247f7\",\n      },\n    }\n  }\n]"
            }
          }
        }
      },
      "post": {
        "tags": [
          "credentials"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "operationId": "addCredentialsOsx",
        "summary": "Upload OSX Credentials",
        "description": "Upload a new OSX certificate and provisioning profile for the project.\nNOTE: you must be a manager in the project's organization to add new\ncredentials.\n",
        "security": [
          {
            "permissions": [
              "project:manager"
            ],
            "apikey": []
          }
        ],
        "parameters": [
          {
            "name": "orgid",
            "in": "path",
            "description": "Organization identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectid",
            "in": "path",
            "description": "Project identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "label",
            "in": "formData",
            "description": "Label for the uploaded credentials",
            "required": true,
            "type": "string"
          },
          {
            "name": "certificate",
            "in": "formData",
            "description": "Certificate file (.p12)",
            "required": true,
            "type": "file"
          },
          {
            "name": "certificatePass",
            "in": "formData",
            "description": "Certificate (.p12) password",
            "required": false,
            "type": "string"
          },
          {
            "name": "entitlementsFile",
            "in": "formData",
            "description": "Entitlements File (.entitlements)",
            "required": false,
            "type": "file"
          },
          {
            "name": "providerName",
            "in": "formData",
            "description": "Provider Name",
            "required": false,
            "type": "string"
          },
          {
            "name": "appleIdUsername",
            "in": "formData",
            "description": "Apple ID Username",
            "required": true,
            "type": "string"
          },
          {
            "name": "appleIdPassword",
            "in": "formData",
            "description": "Apple ID Password",
            "required": true,
            "type": "string"
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X POST\n  -F label=OSX%20Alpha\n  -F certificate=@/Full/Path/To/alphacert.p12\n  -F certificatePass=unity\n  -F appleIdUsername=myUser\n  -F appleIdPassword=myPass\n  -H \"Content-Type: multipart/form-data\"\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/orgs/{orgid}/projects/{projectid}/credentials/signing/osx"
          },
          {
            "language": "python",
            "code": "credentialsApi = CredentialsApi(client)\ncredential = credentialsApi.add_credentials_osx('{orgid}', \"OSX Alpha\", \"/Full/Path/To/alphacert.p12\", {\"certificate\"=\"unity\", \"appleIdUsername\"=\"myUser\", \"appleIdPassword\"=\"myPass\"})"
          }
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "properties": {
                "platform": {
                  "type": "string",
                  "enum": [
                    "ios",
                    "android",
                    "webplayer",
                    "webgl",
                    "standaloneosxintel",
                    "standaloneosxintel64",
                    "standaloneosxuniversal",
                    "standalonewindows",
                    "standalonewindows64",
                    "standalonelinux",
                    "standalonelinux64",
                    "standalonelinuxuniversal"
                  ]
                },
                "label": {
                  "type": "string"
                },
                "credentialid": {
                  "type": "string"
                },
                "created": {
                  "type": "string"
                },
                "lastMod": {
                  "type": "string"
                },
                "certificate": {
                  "properties": {
                    "certName": {
                      "type": "string"
                    },
                    "expiration": {
                      "description": "expiration date",
                      "type": "string"
                    },
                    "uploaded": {
                      "description": "uploaded date",
                      "type": "string"
                    }
                  }
                },
                "providerName": {
                  "type": "string"
                },
                "appleIdUsername": {
                  "type": "string"
                },
                "links": {
                  "type": "object"
                }
              }
            },
            "examples": {
              "application/json": "{\n  \"platform\":\"standaloneosxuniversal\",\n  \"label\":\"demo new credentials\",\n  \"credentialid\":\"aff3518d-8d7b-45fc-9f04-e9f6b53247f7\",\n  \"created\":\"2020-04-09T15:04:23.066Z\",\n  \"lastMod\":\"2020-04-09T15:04:23.069Z\",\n  \"certificate\":{\n    \"certName\":\"Mac Developer: Unity Test (APRY987Y84)\",\n    \"expiration\":\"2021-03-05T19:38:25.000Z\",\n  },\n  \"appleIdUsername\":\"test user\",\n  \"links\":{\n    \"self\":{\n      \"method\":\"get\",\n      \"href\":\"/api/v1/orgs/victorw/projects/e757c603-36f9-42b8-b921-6551bbbafb7d/credentials/signing/osx/aff3518d-8d7b-45fc-9f04-e9f6b53247f7\",\n    },\n    \"delete\":{\n      \"method\":\"delete\",\n      \"href\":\"/api/v1/orgs/victorw/projects/e757c603-36f9-42b8-b921-6551bbbafb7d/credentials/signing/osx/aff3518d-8d7b-45fc-9f04-e9f6b53247f7\",\n    },\n  }\n}"
            }
          }
        }
      }
    },
    "/orgs/{orgid}/projects/{projectid}/credentials/signing/osx/{credentialid}": {
      "x-swagger-router-controller": "credentials",
      "get": {
        "tags": [
          "credentials"
        ],
        "operationId": "getOneOsx",
        "summary": "Get OSX Credential Details",
        "description": "Get specific OSX credential details",
        "security": [
          {
            "permissions": [
              "project:manager"
            ],
            "apikey": []
          }
        ],
        "parameters": [
          {
            "name": "orgid",
            "in": "path",
            "description": "Organization identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectid",
            "in": "path",
            "description": "Project identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "credentialid",
            "in": "path",
            "description": "Credential Identifier",
            "required": true,
            "type": "string"
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X GET\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/orgs/{orgid}/projects/{projectid}/credentials/signing/osx/{credentialid}"
          },
          {
            "language": "python",
            "code": "credentialsApi = CredentialsApi(client)\ncredential = credentialsApi.get_one_osx('{orgid}', '{projectid}', '{credentialid}')"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "platform": {
                  "type": "string",
                  "enum": [
                    "ios",
                    "android",
                    "webplayer",
                    "webgl",
                    "standaloneosxintel",
                    "standaloneosxintel64",
                    "standaloneosxuniversal",
                    "standalonewindows",
                    "standalonewindows64",
                    "standalonelinux",
                    "standalonelinux64",
                    "standalonelinuxuniversal"
                  ]
                },
                "label": {
                  "type": "string"
                },
                "credentialid": {
                  "type": "string"
                },
                "created": {
                  "type": "string"
                },
                "lastMod": {
                  "type": "string"
                },
                "certificate": {
                  "properties": {
                    "certName": {
                      "type": "string"
                    },
                    "expiration": {
                      "description": "expiration date",
                      "type": "string"
                    },
                    "uploaded": {
                      "description": "uploaded date",
                      "type": "string"
                    }
                  }
                },
                "providerName": {
                  "type": "string"
                },
                "appleIdUsername": {
                  "type": "string"
                },
                "links": {
                  "type": "object"
                }
              }
            },
            "examples": {
              "application/json": "{\n  \"platform\":\"standaloneosxuniversal\",\n  \"label\":\"demo new credentials\",\n  \"credentialid\":\"aff3518d-8d7b-45fc-9f04-e9f6b53247f7\",\n  \"created\":\"2020-04-09T15:04:23.066Z\",\n  \"lastMod\":\"2020-04-09T15:04:23.069Z\",\n  \"certificate\":{\n    \"certName\":\"Mac Developer: Unity Test (APRY987Y84)\",\n    \"expiration\":\"2021-03-05T19:38:25.000Z\",\n  },\n  \"appleIdUsername\":\"test user\",\n  \"links\":{\n    \"self\":{\n      \"method\":\"get\",\n      \"href\":\"/api/v1/orgs/victorw/projects/e757c603-36f9-42b8-b921-6551bbbafb7d/credentials/signing/osx/aff3518d-8d7b-45fc-9f04-e9f6b53247f7\",\n    },\n    \"delete\":{\n      \"method\":\"delete\",\n      \"href\":\"/api/v1/orgs/victorw/projects/e757c603-36f9-42b8-b921-6551bbbafb7d/credentials/signing/osx/aff3518d-8d7b-45fc-9f04-e9f6b53247f7\",\n    },\n  }\n}"
            }
          }
        }
      },
      "put": {
        "tags": [
          "credentials"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "operationId": "updateOsx",
        "summary": "Update OSX Credentials",
        "description": "Update an OSX certificate / provisioning profile for the project.\nNOTE: you must be a manager in the project's organization to update\ncredentials.\n",
        "security": [
          {
            "permissions": [
              "project:manager"
            ],
            "apikey": []
          }
        ],
        "parameters": [
          {
            "name": "orgid",
            "in": "path",
            "description": "Organization identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectid",
            "in": "path",
            "description": "Project identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "credentialid",
            "in": "path",
            "description": "Credential Identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "label",
            "in": "formData",
            "description": "Label for the updated credentials",
            "required": false,
            "type": "string"
          },
          {
            "name": "certificate",
            "in": "formData",
            "description": "Certificate file (.p12)",
            "required": false,
            "type": "file"
          },
          {
            "name": "certificatePass",
            "in": "formData",
            "description": "Certificate (.p12) password",
            "required": false,
            "type": "string"
          },
          {
            "name": "entitlementsFile",
            "in": "formData",
            "description": "Entitlements File (.entitlements)",
            "required": false,
            "type": "file"
          },
          {
            "name": "providerName",
            "in": "formData",
            "description": "Provider Name",
            "required": false,
            "type": "string"
          },
          {
            "name": "appleIdUsername",
            "in": "formData",
            "description": "Apple ID Username",
            "required": false,
            "type": "string"
          },
          {
            "name": "appleIdPassword",
            "in": "formData",
            "description": "Apple ID Password",
            "required": false,
            "type": "string"
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X PUT\n  -F label=OSX%20Alpha\n  -F certificate=@/Full/Path/To/alphacert.p12\n  -F certificatePass=unity\n  -F appleIdUsername=myUser\n  -F appleIdPassword=myPass\n  -H \"Content-Type: multipart/form-data\"\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/orgs/{orgid}/projects/{projectid}/credentials/signing/osx/{credentialid}"
          },
          {
            "language": "python",
            "code": "credentialsApi = CredentialsApi(client)\ncredential = credentialsApi.update_osx('{orgid}', '{projectid}', '{credentialid}', \"OSX Renamed\", \"/Full/Path/To/alphacert.p12\", {\"certificate\"=\"unity\", \"appleIdUsername\"=\"myUser\", \"appleIdPassword\"=\"myPass\"})"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "application/json": "{\n  \"platform\":\"standaloneosxuniversal\",\n  \"label\":\"demo new credentials\",\n  \"credentialid\":\"aff3518d-8d7b-45fc-9f04-e9f6b53247f7\",\n  \"created\":\"2020-04-09T15:04:23.066Z\",\n  \"lastMod\":\"2020-04-09T15:04:23.069Z\",\n  \"certificate\":{\n    \"certName\":\"Mac Developer: Unity Test (APRY987Y84)\",\n    \"expiration\":\"2021-03-05T19:38:25.000Z\",\n  },\n  \"appleIdUsername\":\"test user\",\n  \"links\":{\n    \"self\":{\n      \"method\":\"get\",\n      \"href\":\"/api/v1/orgs/victorw/projects/e757c603-36f9-42b8-b921-6551bbbafb7d/credentials/signing/osx/aff3518d-8d7b-45fc-9f04-e9f6b53247f7\",\n    },\n    \"delete\":{\n      \"method\":\"delete\",\n      \"href\":\"/api/v1/orgs/victorw/projects/e757c603-36f9-42b8-b921-6551bbbafb7d/credentials/signing/osx/aff3518d-8d7b-45fc-9f04-e9f6b53247f7\",\n    },\n  }\n}"
            },
            "schema": {
              "properties": {
                "platform": {
                  "type": "string",
                  "enum": [
                    "ios",
                    "android",
                    "webplayer",
                    "webgl",
                    "standaloneosxintel",
                    "standaloneosxintel64",
                    "standaloneosxuniversal",
                    "standalonewindows",
                    "standalonewindows64",
                    "standalonelinux",
                    "standalonelinux64",
                    "standalonelinuxuniversal"
                  ]
                },
                "label": {
                  "type": "string"
                },
                "credentialid": {
                  "type": "string"
                },
                "created": {
                  "type": "string"
                },
                "lastMod": {
                  "type": "string"
                },
                "certificate": {
                  "properties": {
                    "certName": {
                      "type": "string"
                    },
                    "expiration": {
                      "description": "expiration date",
                      "type": "string"
                    },
                    "uploaded": {
                      "description": "uploaded date",
                      "type": "string"
                    }
                  }
                },
                "providerName": {
                  "type": "string"
                },
                "appleIdUsername": {
                  "type": "string"
                },
                "links": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "credentials"
        ],
        "operationId": "deleteOsx",
        "summary": "Delete OSX Credentials",
        "description": "Delete specific OSX credentials for a project. NOTE:\nyou must be a manager in the project's organization to\ndelete credentials.\n",
        "security": [
          {
            "permissions": [
              "project:manager",
              "org:manager"
            ],
            "apikey": []
          }
        ],
        "parameters": [
          {
            "name": "orgid",
            "in": "path",
            "description": "Organization identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectid",
            "in": "path",
            "description": "Project identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "credentialid",
            "in": "path",
            "description": "Credential Identifier",
            "required": true,
            "type": "string"
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X DELETE\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/orgs/{orgid}/projects/{projectid}/credentials/signing/osx/{credentialid}"
          },
          {
            "language": "python",
            "code": "credentialsApi = CredentialsApi(client)\ncredentialsApi.delete_osx('{orgid}', '{projectid}', '{credentialid}')"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/orgs/{orgid}/projects/{projectid}/buildtargets/{buildtargetid}/builds/artifacts": {
      "x-swagger-router-controller": "buildattempts",
      "delete": {
        "tags": [
          "builds"
        ],
        "operationId": "deleteAllBuildArtifacts",
        "summary": "Delete all artifacts associated with all non-favorited builds for a specified buildtargetid (_all is allowed).",
        "security": [
          {
            "permissions": [
              "project:manager"
            ],
            "apikey": []
          }
        ],
        "parameters": [
          {
            "name": "orgid",
            "in": "path",
            "description": "Organization identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectid",
            "in": "path",
            "description": "Project identifier",
            "required": true,
            "type": "string"
          },
          {
            "description": "unique id auto-generated from the build target name",
            "name": "buildtargetid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X DELETE\n  -H \"Content-Type: application/json\"\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/orgs/{orgid}/projects/{projectid}/buildtargets/{buildtargetid}/builds/artifacts"
          },
          {
            "language": "python",
            "code": "buildsApi = BuildsApi(client)\nbuild = buildsApi.delete_all_build_artifacts('{orgid}', '{projectid}', '{buildtargetid}')"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/orgs/{orgid}/projects/{projectid}/buildtargets/{buildtargetid}/builds/{number}/artifacts": {
      "x-swagger-router-controller": "buildattempts",
      "delete": {
        "tags": [
          "builds"
        ],
        "operationId": "deleteBuildArtifacts",
        "summary": "Delete all artifacts associated with a specific build",
        "security": [
          {
            "permissions": [
              "project:manager"
            ],
            "apikey": []
          }
        ],
        "parameters": [
          {
            "name": "orgid",
            "in": "path",
            "description": "Organization identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectid",
            "in": "path",
            "description": "Project identifier",
            "required": true,
            "type": "string"
          },
          {
            "description": "unique id auto-generated from the build target name",
            "name": "buildtargetid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "number",
            "in": "path",
            "description": "Build number or in some cases _all",
            "required": true,
            "type": "string"
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X DELETE\n  -H \"Content-Type: application/json\"\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/orgs/{orgid}/projects/{projectid}/buildtargets/{buildtargetid}/builds/{number}/artifacts"
          },
          {
            "language": "python",
            "code": "buildsApi = BuildsApi(client)\nbuild = buildsApi.delete_build_artifacts('{orgid}', '{projectid}', '{buildtargetid}', '{number}')"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/orgs/{orgid}/projects/{projectid}/artifacts/delete": {
      "x-swagger-router-controller": "buildattempts",
      "post": {
        "tags": [
          "builds"
        ],
        "operationId": "batchDeleteBuildArtifacts",
        "summary": "Delete artifacts for a batch of builds",
        "description": "Delete all artifacts associated with the builds identified by the\nprovided build target ids and build numbers. Builds marked as do\nnot delete or that are currently building will be ignored.\n",
        "security": [
          {
            "permissions": [
              "project:manager"
            ],
            "apikey": []
          }
        ],
        "parameters": [
          {
            "name": "orgid",
            "in": "path",
            "description": "Organization identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectid",
            "in": "path",
            "description": "Project identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "options",
            "in": "body",
            "description": "Options to specify what builds to delete",
            "schema": {
              "required": [
                "builds"
              ],
              "properties": {
                "builds": {
                  "type": "array",
                  "items": {
                    "required": [
                      "buildtargetid",
                      "build"
                    ],
                    "properties": {
                      "buildtargetid": {
                        "type": "string"
                      },
                      "build": {
                        "type": "number"
                      }
                    }
                  }
                }
              }
            },
            "required": true
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X POST\n  -H \"Content-Type: application/json\"\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  -d '{builds: [{buildtargetid:\"default-android\",build:1}]}'\n  [API_URL][BASE_PATH]/orgs/{orgid}/projects/{projectid}/artifacts/delete"
          },
          {
            "language": "python",
            "code": "buildsApi = BuildsApi(client)\nbuild = buildsApi.batch_delete_build_artifacts('{orgid}', '{projectid}', '{builds: [{buildtargetid:\"default-android\",build:1}]}')"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/orgs/{orgid}/projects/{projectid}/buildtargets/{buildtargetid}/builds": {
      "get": {
        "tags": [
          "builds"
        ],
        "x-swagger-router-controller": "buildattempts",
        "operationId": "getBuilds",
        "summary": "List all builds",
        "description": "List all running and finished builds, sorted by build number\n(optionally paginating the results). Use '_all' as the buildtargetid\nto get all configured build targets. The response includes a Content-Range\nheader that identifies the range of results returned and the total number\nof results matching the given query parameters.\n",
        "security": [
          {
            "permissions": [
              "project:user"
            ],
            "apikey": []
          }
        ],
        "parameters": [
          {
            "name": "orgid",
            "in": "path",
            "description": "Organization identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectid",
            "in": "path",
            "description": "Project identifier",
            "required": true,
            "type": "string"
          },
          {
            "description": "unique id auto-generated from the build target name",
            "name": "buildtargetid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Extra fields to include in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of audit log records to retrieve",
            "required": false,
            "default": 25,
            "type": "number"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Skip to page number, based on per_page value",
            "required": false,
            "default": 1,
            "type": "number"
          },
          {
            "name": "buildStatus",
            "in": "query",
            "description": "Query for only builds of a specific status",
            "required": false,
            "default": "",
            "type": "string"
          },
          {
            "name": "platform",
            "in": "query",
            "description": "Query for only builds of a specific platform",
            "required": false,
            "default": "",
            "type": "string"
          },
          {
            "name": "showDeleted",
            "in": "query",
            "description": "Query for builds that have been deleted",
            "required": false,
            "default": false,
            "type": "boolean"
          },
          {
            "name": "onlyFavorites",
            "in": "query",
            "description": "Query for builds that have been favorited",
            "required": false,
            "default": false,
            "type": "boolean"
          },
          {
            "name": "cleanBuild",
            "in": "query",
            "description": "Query for builds that have either been built clean or using caches",
            "required": false,
            "type": "boolean"
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "Default List\n\ncurl\n  -X GET\n  -H \"Content-Type: application/json\"\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/orgs/{orgid}/projects/{projectid}/buildtargets/{buildtargetid}/builds\n\nWith Paging\n\ncurl\n  -X GET\n  -H \"Content-Type: application/json\"\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/orgs/{orgid}/projects/{projectid}/buildtargets/{buildtargetid}/builds?per_page=5&page=2\n\nWith Filtering\n\ncurl\n  -X GET\n  -H \"Content-Type: application/json\"\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/orgs/{orgid}/projects/{projectid}/buildtargets/{buildtargetid}/builds?buildStatus=success&platform=ios"
          },
          {
            "language": "python",
            "code": "# Default List\nbuildsApi = BuildsApi(client)\nbuilds = buildsApi.get_builds('{orgid}', '{projectid}', '{buildtargetid}')\n\n# With Paging\nbuildsApi = BuildsApi(client)\nbuilds = buildsApi.get_builds('{orgid}', '{projectid}', '{buildtargetid}', per_page=5, page=2)\n\n# With Filtering\nbuildsApi = BuildsApi(client)\nbuilds = buildsApi.get_builds('{orgid}', '{projectid}', '{buildtargetid}', build_status='success', platform='ios')"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "application/json": "[\n  {\n      \"orgId\": example-org,\n      \"projectId\": new-project,\n      \"projectName\": new-project,\n      \"build\": 2,\n      \"buildtargetid\": \"android-builder\",\n      \"buildTargetName\": \"Android Builder\",\n      \"buildStatus\": \"success\",\n      \"platform\": \"android\",\n      \"workspaceSize\": 8911006,\n      \"created\": \"2015-07-14T21:56:28.202Z\",\n      \"finished\": \"2015-07-14T22:04:10.000Z\",\n      \"checkoutStartTime\": \"2015-07-14T22:00:20.000Z\",\n      \"checkoutTimeInSeconds\": 40,\n      \"buildStartTime\": \"2015-07-14T22:01:00.000Z\",\n      \"buildTimeInSeconds\": 152.386056,\n      \"publishStartTime\": \"2015-07-14T22:03:33.000Z\",\n      \"publishTimeInSeconds\": 10.371839,\n      \"totalTimeInSeconds\": 461.798,\n      \"lastBuiltRevision\": \"88e565df27ca35c2603c29eb924dc018f32a22c1\",\n      \"changeset\": [],\n      \"favorited\": false,\n      \"scmBranch\": \"master\",\n      \"unityVersion\": \"latest\",\n      \"auditChanges\": 0,\n      \"projectVersion\": {\n        \"name\": \"android-builder-2\",\n        \"filename\": \"example-org/new-project/android-builder-2/android-builder.apk\",\n        \"projectName\": \"New Project\",\n        \"platform\": \"android\",\n        \"size\": 14452762,\n        \"created\": \"2015-07-14T22:03:45.847Z\",\n        \"lastMod\": \"2015-07-14T22:03:46.251Z\",\n        \"bundleId\": \"com.unity3d.example\",\n        \"udids\": []\n      },\n      \"links\": {\n        \"self\": {\n          \"method\": \"get\",\n          \"href\": \"/api/v1/orgs/example-org/projects/new-project/buildtargets/android-builder/builds/2\"\n        },\n        \"log\": {\n          \"method\": \"get\",\n          \"href\": \"/api/v1/orgs/example-org/projects/new-project/buildtargets/android-builder/builds/2/log\"\n        },\n        \"auditlog\": {\n          \"method\": \"get\",\n          \"href\": \"/api/v1/orgs/example-org/projects/new-project/buildtargets/android-builder/builds/2/auditlog\"\n        },\n        \"download_primary\": {\n          \"method\": \"get\",\n          \"href\": \"https://unitycloud-build-user-svc-dev-build.s3.amazonaws.com/example-org/new-project/android-builder-2/android-builder.apk?AWSAccessKeyId=AKIAI6ZGSQWNDMF7X33A&Expires=1447890477&Signature=e9Hs%2FYECpVlrMITqCRY5dSWXChE%3D&response-content-disposition=attachment%3B%20filename%3Dexample-org%2Fnew-project-android-2-1436910988202.apk&response-content-type=application%2Foctet-stream\",\n          \"meta\": {\n            \"type\": \"APK\"\n          }\n        },\n        \"create_share\": {\n          \"method\": \"post\",\n          \"href\": \"/api/v1/orgs/example-org/projects/new-project/buildtargets/android-builder/builds/2/share\"\n        },\n        \"revoke_share\": {\n          \"method\": \"delete\",\n          \"href\": \"/api/v1/orgs/example-org/projects/new-project/buildtargets/android-builder/builds/2/share\"\n        },\n        \"icon\": {\n          \"method\": \"get\",\n          \"href\": \"https://unitycloud-build-user-svc-dev-extras-pub.s3.amazonaws.com/example-org/new-project/android-builder-2/icon.png\"\n        }\n      }\n    },\n    {\n      \"orgId\": example-org,\n      \"projectId\": new-project,\n      \"projectName\": new-project,\n      \"build\": 1,\n      \"buildtargetid\": \"android-builder\",\n      \"buildTargetName\": \"Android Builder\",\n      \"buildStatus\": \"success\",\n      \"cleanBuild\": \"false\",\n      \"platform\": \"android\",\n      \"workspaceSize\": 8910982,\n      \"created\": \"2015-07-14T21:51:26.520Z\",\n      \"finished\": \"2015-07-14T21:54:43.000Z\",\n      \"checkoutStartTime\": \"2015-07-14T21:51:45.000Z\",\n      \"checkoutTimeInSeconds\": 41,\n      \"buildStartTime\": \"2015-07-14T21:52:26.000Z\",\n      \"buildTimeInSeconds\": 120.410226,\n      \"publishStartTime\": \"2015-07-14T21:54:27.000Z\",\n      \"publishTimeInSeconds\": 4.846675,\n      \"totalTimeInSeconds\": 196.48,\n      \"lastBuiltRevision\": \"88e565df27ca35c2603c29eb924dc018f32a22c1\",\n      \"changeset\": [],\n      \"favorited\": false,\n      \"scmBranch\": \"master\",\n      \"unityVersion\": \"latest\",\n      \"auditChanges\": 0,\n      \"projectVersion\": {\n        \"name\": \"android-builder-1\",\n        \"filename\": \"example-org/new-project/android-builder-1/android-builder.apk\",\n        \"projectName\": \"Example Unity Project\",\n        \"platform\": \"android\",\n        \"size\": 14443743,\n        \"created\": \"2015-07-14T21:54:34.395Z\",\n        \"lastMod\": \"2015-07-14T21:54:34.776Z\",\n        \"bundleId\": \"com.tsugi.example\",\n        \"udids\": []\n      },\n      \"links\": {\n        \"self\": {\n          \"method\": \"get\",\n          \"href\": \"/api/v1/orgs/example-org/projects/new-project/buildtargets/android-builder/builds/1\"\n        },\n        \"log\": {\n          \"method\": \"get\",\n          \"href\": \"/api/v1/orgs/example-org/projects/new-project/buildtargets/android-builder/builds/1/log\"\n        },\n        \"auditlog\": {\n          \"method\": \"get\",\n          \"href\": \"/api/v1/orgs/example-org/projects/new-project/buildtargets/android-builder/builds/1/auditlog\"\n        },\n        \"download_primary\": {\n          \"method\": \"get\",\n          \"href\": \"https://unitycloud-build-user-svc-dev-build.s3.amazonaws.com/example-org/new-project/android-builder-1/android-builder.apk?AWSAccessKeyId=AKIAI6ZGSQWNDMF7X33A&Expires=1447890477&Signature=5Z4ouUFyVIJ8jaChE%2F6K%2FMHHpiM%3D&response-content-disposition=attachment%3B%20filename%3Dexample-org%2Fnew-project-android-1-1436910686520.apk&response-content-type=application%2Foctet-stream\",\n          \"meta\": {\n            \"type\": \"APK\"\n          }\n        },\n        \"create_share\": {\n          \"method\": \"post\",\n          \"href\": \"/api/v1/orgs/example-org/projects/new-project/buildtargets/android-builder/builds/1/share\"\n        },\n        \"revoke_share\": {\n          \"method\": \"delete\",\n          \"href\": \"/api/v1/orgs/example-org/projects/new-project/buildtargets/android-builder/builds/1/share\"\n        },\n        \"icon\": {\n          \"method\": \"get\",\n          \"href\": \"https://unitycloud-build-user-svc-dev-extras-pub.s3.amazonaws.com/example-org/new-project/android-builder-1/icon.png\"\n        }\n      }\n    }\n  ]"
            },
            "schema": {
              "type": "array",
              "items": {
                "description": "buildattempt",
                "properties": {
                  "build": {
                    "type": "number"
                  },
                  "buildtargetid": {
                    "description": "unique id auto-generated from the build target name",
                    "type": "string"
                  },
                  "buildTargetName": {
                    "type": "string",
                    "maxLength": 64
                  },
                  "buildGUID": {
                    "description": "unique GUID identifying this build",
                    "type": "string"
                  },
                  "buildStatus": {
                    "enum": [
                      "queued",
                      "sentToBuilder",
                      "started",
                      "restarted",
                      "success",
                      "failure",
                      "canceled",
                      "unknown"
                    ],
                    "type": "string"
                  },
                  "cleanBuild": {
                    "description": "if the build was built without using data cached from previous builds",
                    "type": "boolean"
                  },
                  "failureDetails": {
                    "description": "list of failure details for this build attempt, when available",
                    "type": "array",
                    "items": {
                      "properties": {
                        "label": {
                          "type": "string"
                        },
                        "resolutionHint": {
                          "type": "string"
                        },
                        "stages": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "failureType": {
                          "type": "string"
                        },
                        "count": {
                          "type": "number"
                        }
                      }
                    }
                  },
                  "canceledBy": {
                    "enum": [
                      "api",
                      "service",
                      "service-timelimit"
                    ],
                    "type": "string"
                  },
                  "platform": {
                    "type": "string",
                    "enum": [
                      "ios",
                      "android",
                      "webplayer",
                      "webgl",
                      "standaloneosxintel",
                      "standaloneosxintel64",
                      "standaloneosxuniversal",
                      "standalonewindows",
                      "standalonewindows64",
                      "standalonelinux",
                      "standalonelinux64",
                      "standalonelinuxuniversal"
                    ]
                  },
                  "workspaceSize": {
                    "description": "size of workspace in bytes",
                    "type": "number"
                  },
                  "created": {
                    "description": "when the build was created",
                    "type": "string"
                  },
                  "finished": {
                    "description": "when the build completely finished",
                    "type": "string"
                  },
                  "checkoutStartTime": {
                    "description": "when the build starting checking out code",
                    "type": "string"
                  },
                  "checkoutTimeInSeconds": {
                    "description": "amount of time spent checking out code",
                    "type": "number"
                  },
                  "buildStartTime": {
                    "description": "when the build started compiling",
                    "type": "string"
                  },
                  "buildTimeInSeconds": {
                    "description": "amount of time spend compiling",
                    "type": "number"
                  },
                  "publishStartTime": {
                    "description": "when the build started saving build artifacts",
                    "type": "string"
                  },
                  "publishTimeInSeconds": {
                    "description": "amount of time spent saving build artifacts",
                    "type": "number"
                  },
                  "totalTimeInSeconds": {
                    "description": "total time for the build",
                    "type": "number"
                  },
                  "unitTestTimeInSeconds": {
                    "description": "total time for unit test execution step",
                    "type": "number"
                  },
                  "editModeTestTimeInSeconds": {
                    "description": "total time for unit test execution step",
                    "type": "number"
                  },
                  "playModeTestTimeInSeconds": {
                    "description": "total time for unit test execution step",
                    "type": "number"
                  },
                  "lastBuiltRevision": {
                    "description": "source control commit id for the build",
                    "type": "string"
                  },
                  "changeset": {
                    "description": "a list of source control changes between this and the last build",
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  },
                  "favorited": {
                    "description": "if the build is marked as do not delete or not",
                    "type": "boolean"
                  },
                  "label": {
                    "description": "description given when a build is favorited",
                    "type": "string"
                  },
                  "deleted": {
                    "description": "if the build is deleted or not",
                    "type": "boolean"
                  },
                  "headless": {
                    "description": "if the build was built to run in linux headless mode"
                  },
                  "credentialsOutdated": {
                    "description": "if a newer credential has been attached to this buildtarget and the build can be re-signed",
                    "type": "boolean"
                  },
                  "deletedBy": {
                    "description": "email address of the user who deleted this attempt",
                    "type": "string"
                  },
                  "queuedReason": {
                    "description": "reason the build is currently waiting",
                    "enum": [
                      "targetConcurrency",
                      "cooldown",
                      "buildConcurrency",
                      "waitingForBuildAgent",
                      "evaluating",
                      "sentToBuilder",
                      "notPending"
                    ],
                    "type": "string"
                  },
                  "cooldownDate": {
                    "type": "string",
                    "description": "time until this build will be reconsidered for building"
                  },
                  "scmBranch": {
                    "description": "scm branch to be built",
                    "type": "string"
                  },
                  "unityVersion": {
                    "description": "'latest' or a unity dot version with underscores (ex. '4_6_5')",
                    "type": "string"
                  },
                  "xcodeVersion": {
                    "description": "'latest' or a supported xcode version (ex. 'xcode7')",
                    "type": "string"
                  },
                  "auditChanges": {
                    "type": "number"
                  },
                  "projectVersion": {
                    "properties": {
                      "name": {
                        "description": "automatically generated name for the build",
                        "type": "string"
                      },
                      "filename": {
                        "description": "filename for the primary artifact",
                        "type": "string"
                      },
                      "projectName": {
                        "description": "name of the project",
                        "type": "string"
                      },
                      "platform": {
                        "type": "string",
                        "enum": [
                          "ios",
                          "android",
                          "webplayer",
                          "webgl",
                          "standaloneosxintel",
                          "standaloneosxintel64",
                          "standaloneosxuniversal",
                          "standalonewindows",
                          "standalonewindows64",
                          "standalonelinux",
                          "standalonelinux64",
                          "standalonelinuxuniversal"
                        ]
                      },
                      "size": {
                        "type": "number",
                        "description": "size of the the primary build artifact in bytes"
                      },
                      "created": {
                        "type": "string",
                        "description": "creation date"
                      },
                      "lastMod": {
                        "type": "string",
                        "description": "last modified date"
                      },
                      "bundleId": {
                        "type": "string",
                        "description": "a unique identifier (com.example.name)"
                      },
                      "udids": {
                        "type": "array",
                        "description": "iPhone unique identifiers that are able to install this build",
                        "items": {
                          "type": "string"
                        }
                      },
                      "links": {
                        "description": "links to build artifacts",
                        "type": "object"
                      }
                    }
                  },
                  "projectName": {
                    "type": "string"
                  },
                  "projectId": {
                    "type": "string"
                  },
                  "projectGuid": {
                    "type": "string"
                  },
                  "orgId": {
                    "type": "string"
                  },
                  "orgFk": {
                    "type": "string"
                  },
                  "filetoken": {
                    "type": "string"
                  },
                  "links": {
                    "type": "object",
                    "properties": {
                      "artifacts": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      }
                    },
                    "additionalProperties": {
                      "type": "object",
                      "properties": {
                        "href": {
                          "type": "string"
                        },
                        "method": {
                          "type": "string"
                        },
                        "meta": {
                          "type": "object"
                        }
                      }
                    }
                  },
                  "buildReport": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "integer"
                      },
                      "warnings": {
                        "type": "integer"
                      }
                    }
                  },
                  "testResults": {
                    "description": "results from the build's unit tests, if any",
                    "type": "object",
                    "properties": {
                      "unit_test": {
                        "type": "object"
                      },
                      "unit_test_editmode": {
                        "type": "object"
                      },
                      "unit_test_playmode": {
                        "type": "object"
                      }
                    }
                  },
                  "error": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "builds"
        ],
        "x-swagger-router-controller": "buildjobs",
        "operationId": "startBuilds",
        "summary": "Create new build",
        "description": "Start the build process for this build target (or all targets,\nif '_all' is specified as the buildtargetid), if there is not one\ncurrently in process.\n\nIf a build is currently in process that information will be related\nin the 'error' field.\n",
        "security": [
          {
            "permissions": [
              "project:user"
            ],
            "apikey": []
          }
        ],
        "parameters": [
          {
            "name": "orgid",
            "in": "path",
            "description": "Organization identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectid",
            "in": "path",
            "description": "Project identifier",
            "required": true,
            "type": "string"
          },
          {
            "description": "unique id auto-generated from the build target name",
            "name": "buildtargetid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "options",
            "in": "body",
            "description": "Options for starting the builds. You can specify a platform and label only when \nstarting a local (_local) build. A local build will return immediately and be \nmarked as successful.\n",
            "schema": {
              "properties": {
                "clean": {
                  "type": "boolean"
                },
                "delay": {
                  "type": "number"
                },
                "commit": {
                  "type": "string"
                },
                "headless": {
                  "description": "Only valid for local builds\n",
                  "type": "boolean"
                },
                "label": {
                  "description": "Only valid for local builds\n",
                  "type": "string"
                },
                "platform": {
                  "description": "Only valid for local builds\n",
                  "type": "string",
                  "enum": [
                    "ios",
                    "android",
                    "webplayer",
                    "webgl",
                    "standaloneosxintel",
                    "standaloneosxintel64",
                    "standaloneosxuniversal",
                    "standalonewindows",
                    "standalonewindows64",
                    "standalonelinux",
                    "standalonelinux64",
                    "standalonelinuxuniversal"
                  ]
                }
              }
            },
            "required": false
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X POST\n  -d '{\"clean\": true, \"delay\": 30}'\n  -H \"Content-Type: application/json\"\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/orgs/{orgid}/projects/{projectid}/buildtargets/{buildtargetid}/builds"
          },
          {
            "language": "python",
            "code": "buildsApi = BuildsApi(client)\nstatus = buildsApi.start_builds('{orgid}', '{projectid}', '{buildtargetid}', options={\"clean\": True, \"delay\": 30})"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "examples": {
              "application/json-accepted": "Build Accepted\n[\n  {\n    \"build\": 3,\n    \"buildtargetid\": \"android-builder\",\n    \"buildTargetName\": \"Android Builder\",\n    \"buildStatus\": \"queued\",\n    \"cleanBuild\": \"false\",\n    \"platform\": \"a ndroid\",\n    \"created\": \"2015-11-19T22:02:20.244Z\",\n    \"changeset\": [],\n    \"favorited\": false,\n    \"auditChanges\": 1,\n    \"links\": {\n      \"self\": {\n        \"method\": \"get\",\n        \"href\": \"/api/v1/orgs/example-org/projects/new-project/buildtargets/default-ios/builds/3\"\n      },\n      \"log\": {\n        \"method\": \"get\",\n        \"href\": \"/api/v1/orgs/example-org/projects/new-project/buildtargets/default-ios/builds/3/log\"\n      },\n      \"auditlog\": {\n        \"method\": \"get\",\n        \"href\": \"/api/v1/orgs/example-org/projects/new-project/buildtargets/default-ios/builds/3/auditlog\"\n      },\n      \"cancel\": {\n        \"method\": \"delete\",\n        \"href\": \"/api/v1/orgs/example-org/projects/new-project/buildtargets/default-ios/builds/3\"\n      }\n    }\n  }\n]",
              "application/json-already-building": "Build Already Started\n[\n  {\n    \"buildtargetid\": \"android-builder\",\n    \"buildTargetName\": \"Android Builder\",\n    \"error\": \"Cannot start build - already a build pending.\"\n  }\n]"
            },
            "schema": {
              "type": "array",
              "items": {
                "description": "buildattempt",
                "properties": {
                  "build": {
                    "type": "number"
                  },
                  "buildtargetid": {
                    "description": "unique id auto-generated from the build target name",
                    "type": "string"
                  },
                  "buildTargetName": {
                    "type": "string",
                    "maxLength": 64
                  },
                  "buildGUID": {
                    "description": "unique GUID identifying this build",
                    "type": "string"
                  },
                  "buildStatus": {
                    "enum": [
                      "queued",
                      "sentToBuilder",
                      "started",
                      "restarted",
                      "success",
                      "failure",
                      "canceled",
                      "unknown"
                    ],
                    "type": "string"
                  },
                  "cleanBuild": {
                    "description": "if the build was built without using data cached from previous builds",
                    "type": "boolean"
                  },
                  "failureDetails": {
                    "description": "list of failure details for this build attempt, when available",
                    "type": "array",
                    "items": {
                      "properties": {
                        "label": {
                          "type": "string"
                        },
                        "resolutionHint": {
                          "type": "string"
                        },
                        "stages": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "failureType": {
                          "type": "string"
                        },
                        "count": {
                          "type": "number"
                        }
                      }
                    }
                  },
                  "canceledBy": {
                    "enum": [
                      "api",
                      "service",
                      "service-timelimit"
                    ],
                    "type": "string"
                  },
                  "platform": {
                    "type": "string",
                    "enum": [
                      "ios",
                      "android",
                      "webplayer",
                      "webgl",
                      "standaloneosxintel",
                      "standaloneosxintel64",
                      "standaloneosxuniversal",
                      "standalonewindows",
                      "standalonewindows64",
                      "standalonelinux",
                      "standalonelinux64",
                      "standalonelinuxuniversal"
                    ]
                  },
                  "workspaceSize": {
                    "description": "size of workspace in bytes",
                    "type": "number"
                  },
                  "created": {
                    "description": "when the build was created",
                    "type": "string"
                  },
                  "finished": {
                    "description": "when the build completely finished",
                    "type": "string"
                  },
                  "checkoutStartTime": {
                    "description": "when the build starting checking out code",
                    "type": "string"
                  },
                  "checkoutTimeInSeconds": {
                    "description": "amount of time spent checking out code",
                    "type": "number"
                  },
                  "buildStartTime": {
                    "description": "when the build started compiling",
                    "type": "string"
                  },
                  "buildTimeInSeconds": {
                    "description": "amount of time spend compiling",
                    "type": "number"
                  },
                  "publishStartTime": {
                    "description": "when the build started saving build artifacts",
                    "type": "string"
                  },
                  "publishTimeInSeconds": {
                    "description": "amount of time spent saving build artifacts",
                    "type": "number"
                  },
                  "totalTimeInSeconds": {
                    "description": "total time for the build",
                    "type": "number"
                  },
                  "unitTestTimeInSeconds": {
                    "description": "total time for unit test execution step",
                    "type": "number"
                  },
                  "editModeTestTimeInSeconds": {
                    "description": "total time for unit test execution step",
                    "type": "number"
                  },
                  "playModeTestTimeInSeconds": {
                    "description": "total time for unit test execution step",
                    "type": "number"
                  },
                  "lastBuiltRevision": {
                    "description": "source control commit id for the build",
                    "type": "string"
                  },
                  "changeset": {
                    "description": "a list of source control changes between this and the last build",
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  },
                  "favorited": {
                    "description": "if the build is marked as do not delete or not",
                    "type": "boolean"
                  },
                  "label": {
                    "description": "description given when a build is favorited",
                    "type": "string"
                  },
                  "deleted": {
                    "description": "if the build is deleted or not",
                    "type": "boolean"
                  },
                  "headless": {
                    "description": "if the build was built to run in linux headless mode"
                  },
                  "credentialsOutdated": {
                    "description": "if a newer credential has been attached to this buildtarget and the build can be re-signed",
                    "type": "boolean"
                  },
                  "deletedBy": {
                    "description": "email address of the user who deleted this attempt",
                    "type": "string"
                  },
                  "queuedReason": {
                    "description": "reason the build is currently waiting",
                    "enum": [
                      "targetConcurrency",
                      "cooldown",
                      "buildConcurrency",
                      "waitingForBuildAgent",
                      "evaluating",
                      "sentToBuilder",
                      "notPending"
                    ],
                    "type": "string"
                  },
                  "cooldownDate": {
                    "type": "string",
                    "description": "time until this build will be reconsidered for building"
                  },
                  "scmBranch": {
                    "description": "scm branch to be built",
                    "type": "string"
                  },
                  "unityVersion": {
                    "description": "'latest' or a unity dot version with underscores (ex. '4_6_5')",
                    "type": "string"
                  },
                  "xcodeVersion": {
                    "description": "'latest' or a supported xcode version (ex. 'xcode7')",
                    "type": "string"
                  },
                  "auditChanges": {
                    "type": "number"
                  },
                  "projectVersion": {
                    "properties": {
                      "name": {
                        "description": "automatically generated name for the build",
                        "type": "string"
                      },
                      "filename": {
                        "description": "filename for the primary artifact",
                        "type": "string"
                      },
                      "projectName": {
                        "description": "name of the project",
                        "type": "string"
                      },
                      "platform": {
                        "type": "string",
                        "enum": [
                          "ios",
                          "android",
                          "webplayer",
                          "webgl",
                          "standaloneosxintel",
                          "standaloneosxintel64",
                          "standaloneosxuniversal",
                          "standalonewindows",
                          "standalonewindows64",
                          "standalonelinux",
                          "standalonelinux64",
                          "standalonelinuxuniversal"
                        ]
                      },
                      "size": {
                        "type": "number",
                        "description": "size of the the primary build artifact in bytes"
                      },
                      "created": {
                        "type": "string",
                        "description": "creation date"
                      },
                      "lastMod": {
                        "type": "string",
                        "description": "last modified date"
                      },
                      "bundleId": {
                        "type": "string",
                        "description": "a unique identifier (com.example.name)"
                      },
                      "udids": {
                        "type": "array",
                        "description": "iPhone unique identifiers that are able to install this build",
                        "items": {
                          "type": "string"
                        }
                      },
                      "links": {
                        "description": "links to build artifacts",
                        "type": "object"
                      }
                    }
                  },
                  "projectName": {
                    "type": "string"
                  },
                  "projectId": {
                    "type": "string"
                  },
                  "projectGuid": {
                    "type": "string"
                  },
                  "orgId": {
                    "type": "string"
                  },
                  "orgFk": {
                    "type": "string"
                  },
                  "filetoken": {
                    "type": "string"
                  },
                  "links": {
                    "type": "object",
                    "properties": {
                      "artifacts": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      }
                    },
                    "additionalProperties": {
                      "type": "object",
                      "properties": {
                        "href": {
                          "type": "string"
                        },
                        "method": {
                          "type": "string"
                        },
                        "meta": {
                          "type": "object"
                        }
                      }
                    }
                  },
                  "buildReport": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "integer"
                      },
                      "warnings": {
                        "type": "integer"
                      }
                    }
                  },
                  "testResults": {
                    "description": "results from the build's unit tests, if any",
                    "type": "object",
                    "properties": {
                      "unit_test": {
                        "type": "object"
                      },
                      "unit_test_editmode": {
                        "type": "object"
                      },
                      "unit_test_playmode": {
                        "type": "object"
                      }
                    }
                  },
                  "error": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "builds"
        ],
        "x-swagger-router-controller": "buildjobs",
        "operationId": "cancelAllBuilds",
        "summary": "Cancel all builds",
        "description": "Cancel all builds in progress for this build target (or all targets,\nif '_all' is specified as the buildtargetid). Canceling an already\nfinished build will do nothing and respond successfully.\n",
        "security": [
          {
            "permissions": [
              "project:user"
            ],
            "apikey": []
          }
        ],
        "parameters": [
          {
            "name": "orgid",
            "in": "path",
            "description": "Organization identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectid",
            "in": "path",
            "description": "Project identifier",
            "required": true,
            "type": "string"
          },
          {
            "description": "unique id auto-generated from the build target name",
            "name": "buildtargetid",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X DELETE\n  -H \"Content-Type: application/json\"\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/orgs/{orgid}/projects/{projectid}/buildtargets/{buildtargetid}/builds"
          },
          {
            "language": "python",
            "code": "buildsApi = BuildsApi(client)\nbuildsApi.cancel_all_builds('{orgid}', '{projectid}', '{buildtargetid}')"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/orgs/{orgid}/projects/{projectid}/buildtargets/{buildtargetid}/builds/{number}": {
      "x-swagger-router-controller": "buildattempts",
      "get": {
        "tags": [
          "builds"
        ],
        "operationId": "getBuild",
        "summary": "Build Status",
        "description": "Retrieve information for a specific build. A Build resource contains\ninformation related to a build attempt for a build target, including\nthe build number, changeset, build times, and other pertinent data.\n",
        "security": [
          {
            "filetoken": []
          },
          {
            "permissions": [
              "project:user"
            ],
            "apikey": []
          }
        ],
        "parameters": [
          {
            "name": "orgid",
            "in": "path",
            "description": "Organization identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectid",
            "in": "path",
            "description": "Project identifier",
            "required": true,
            "type": "string"
          },
          {
            "description": "unique id auto-generated from the build target name",
            "name": "buildtargetid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "number",
            "in": "path",
            "description": "Build number or in some cases _all",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Extra fields to include in the response",
            "required": false,
            "type": "string"
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X GET\n  -H \"Content-Type: application/json\"\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/orgs/{orgid}/projects/{projectid}/buildtargets/{buildtargetid}/builds/{number}"
          },
          {
            "language": "python",
            "code": "buildsApi = BuildsApi(client)\nbuild = buildsApi.get_build('{orgid}', '{projectid}', '{buildtargetid}', '{number}')"
          }
        ],
        "x-includequery-properties": [
          "testResults"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "application/json-accepted": "{\n  \"build\": 2,\n  \"buildtargetid\": \"android-builder\",\n  \"buildTargetName\": \"Android Builder\",\n  \"buildStatus\": \"success\",\n  \"cleanBuild\": \"false\",\n  \"platform\": \"android\",\n  \"workspaceSize\": 8911006,\n  \"created\": \"2015-07-14T21:56:28.202Z\",\n  \"finished\": \"2015-07-14T22:04:10.000Z\",\n  \"checkoutStartTime\": \"2015-07-14T22:00:20.000Z\",\n  \"checkoutTimeInSeconds\": 40,\n  \"buildStartTime\": \"2015-07-14T22:01:00.000Z\",\n  \"buildTimeInSeconds\": 152.386056,\n  \"publishStartTime\": \"2015-07-14T22:03:33.000Z\",\n  \"publishTimeInSeconds\": 10.371839,\n  \"totalTimeInSeconds\": 461.798,\n  \"lastBuiltRevision\": \"88e565df27ca35c2603c29eb924dc018f32a22c1\",\n  \"changeset\": [],\n  \"favorited\": true,\n  \"auditChanges\": 0,\n  \"projectVersion\": {\n    \"name\": \"android-builder-2\",\n    \"filename\": \"example-org/new-project/android-builder-2/android-builder.apk\",\n    \"projectName\": \"Example Unity Project\",\n    \"platform\": \"android\",\n    \"size\": 14452762,\n    \"created\": \"2015-07-14T22:03:45.847Z\",\n    \"lastMod\": \"2015-07-14T22:03:46.251Z\",\n    \"bundleId\": \"com.tsugi.example\",\n    \"udids\": []\n  },\n  \"links\": {\n    \"self\": {\n      \"method\": \"get\",\n      \"href\": \"/api/v1/orgs/example-org/projects/new-project/buildtargets/android-builder/builds/2\"\n    },\n    \"log\": {\n      \"method\": \"get\",\n      \"href\": \"/api/v1/orgs/example-org/projects/new-project/buildtargets/android-builder/builds/2/log\"\n    },\n    \"auditlog\": {\n      \"method\": \"get\",\n      \"href\": \"/api/v1/orgs/example-org/projects/new-project/buildtargets/android-builder/builds/2/auditlog\"\n    },\n    \"download_primary\": {\n      \"method\": \"get\",\n      \"href\": \"https://unitycloud-build-user-svc-dev-build.s3.amazonaws.com/example-org/new-project/android-builder-2/android-builder.apk?AWSAccessKeyId=AKIAI6ZGSQWNDMF7X33A&Expires=1447973385&Signature=ffKQIKOJsKN6qrwzxObXSSyCVts%3D&response-content-disposition=attachment%3B%20filename%3Dexample-org%2Fnew-project-android-2-1436910988202.apk&response-content-type=application%2Foctet-stream\",\n      \"meta\": {\n        \"type\": \"APK\"\n      }\n    },\n    \"create_share\": {\n      \"method\": \"post\",\n      \"href\": \"/api/v1/orgs/example-org/projects/new-project/buildtargets/android-builder/builds/2/share\"\n    },\n    \"revoke_share\": {\n      \"method\": \"delete\",\n      \"href\": \"/api/v1/orgs/example-org/projects/new-project/buildtargets/android-builder/builds/2/share\"\n    },\n    \"icon\": {\n      \"method\": \"get\",\n      \"href\": \"https://unitycloud-build-user-svc-dev-extras-pub.s3.amazonaws.com/example-org/new-project/android-builder-2/icon.png\"\n    }\n  }\n}"
            },
            "schema": {
              "description": "buildattempt",
              "properties": {
                "build": {
                  "type": "number"
                },
                "buildtargetid": {
                  "description": "unique id auto-generated from the build target name",
                  "type": "string"
                },
                "buildTargetName": {
                  "type": "string",
                  "maxLength": 64
                },
                "buildGUID": {
                  "description": "unique GUID identifying this build",
                  "type": "string"
                },
                "buildStatus": {
                  "enum": [
                    "queued",
                    "sentToBuilder",
                    "started",
                    "restarted",
                    "success",
                    "failure",
                    "canceled",
                    "unknown"
                  ],
                  "type": "string"
                },
                "cleanBuild": {
                  "description": "if the build was built without using data cached from previous builds",
                  "type": "boolean"
                },
                "failureDetails": {
                  "description": "list of failure details for this build attempt, when available",
                  "type": "array",
                  "items": {
                    "properties": {
                      "label": {
                        "type": "string"
                      },
                      "resolutionHint": {
                        "type": "string"
                      },
                      "stages": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "failureType": {
                        "type": "string"
                      },
                      "count": {
                        "type": "number"
                      }
                    }
                  }
                },
                "canceledBy": {
                  "enum": [
                    "api",
                    "service",
                    "service-timelimit"
                  ],
                  "type": "string"
                },
                "platform": {
                  "type": "string",
                  "enum": [
                    "ios",
                    "android",
                    "webplayer",
                    "webgl",
                    "standaloneosxintel",
                    "standaloneosxintel64",
                    "standaloneosxuniversal",
                    "standalonewindows",
                    "standalonewindows64",
                    "standalonelinux",
                    "standalonelinux64",
                    "standalonelinuxuniversal"
                  ]
                },
                "workspaceSize": {
                  "description": "size of workspace in bytes",
                  "type": "number"
                },
                "created": {
                  "description": "when the build was created",
                  "type": "string"
                },
                "finished": {
                  "description": "when the build completely finished",
                  "type": "string"
                },
                "checkoutStartTime": {
                  "description": "when the build starting checking out code",
                  "type": "string"
                },
                "checkoutTimeInSeconds": {
                  "description": "amount of time spent checking out code",
                  "type": "number"
                },
                "buildStartTime": {
                  "description": "when the build started compiling",
                  "type": "string"
                },
                "buildTimeInSeconds": {
                  "description": "amount of time spend compiling",
                  "type": "number"
                },
                "publishStartTime": {
                  "description": "when the build started saving build artifacts",
                  "type": "string"
                },
                "publishTimeInSeconds": {
                  "description": "amount of time spent saving build artifacts",
                  "type": "number"
                },
                "totalTimeInSeconds": {
                  "description": "total time for the build",
                  "type": "number"
                },
                "unitTestTimeInSeconds": {
                  "description": "total time for unit test execution step",
                  "type": "number"
                },
                "editModeTestTimeInSeconds": {
                  "description": "total time for unit test execution step",
                  "type": "number"
                },
                "playModeTestTimeInSeconds": {
                  "description": "total time for unit test execution step",
                  "type": "number"
                },
                "lastBuiltRevision": {
                  "description": "source control commit id for the build",
                  "type": "string"
                },
                "changeset": {
                  "description": "a list of source control changes between this and the last build",
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                },
                "favorited": {
                  "description": "if the build is marked as do not delete or not",
                  "type": "boolean"
                },
                "label": {
                  "description": "description given when a build is favorited",
                  "type": "string"
                },
                "deleted": {
                  "description": "if the build is deleted or not",
                  "type": "boolean"
                },
                "headless": {
                  "description": "if the build was built to run in linux headless mode"
                },
                "credentialsOutdated": {
                  "description": "if a newer credential has been attached to this buildtarget and the build can be re-signed",
                  "type": "boolean"
                },
                "deletedBy": {
                  "description": "email address of the user who deleted this attempt",
                  "type": "string"
                },
                "queuedReason": {
                  "description": "reason the build is currently waiting",
                  "enum": [
                    "targetConcurrency",
                    "cooldown",
                    "buildConcurrency",
                    "waitingForBuildAgent",
                    "evaluating",
                    "sentToBuilder",
                    "notPending"
                  ],
                  "type": "string"
                },
                "cooldownDate": {
                  "type": "string",
                  "description": "time until this build will be reconsidered for building"
                },
                "scmBranch": {
                  "description": "scm branch to be built",
                  "type": "string"
                },
                "unityVersion": {
                  "description": "'latest' or a unity dot version with underscores (ex. '4_6_5')",
                  "type": "string"
                },
                "xcodeVersion": {
                  "description": "'latest' or a supported xcode version (ex. 'xcode7')",
                  "type": "string"
                },
                "auditChanges": {
                  "type": "number"
                },
                "projectVersion": {
                  "properties": {
                    "name": {
                      "description": "automatically generated name for the build",
                      "type": "string"
                    },
                    "filename": {
                      "description": "filename for the primary artifact",
                      "type": "string"
                    },
                    "projectName": {
                      "description": "name of the project",
                      "type": "string"
                    },
                    "platform": {
                      "type": "string",
                      "enum": [
                        "ios",
                        "android",
                        "webplayer",
                        "webgl",
                        "standaloneosxintel",
                        "standaloneosxintel64",
                        "standaloneosxuniversal",
                        "standalonewindows",
                        "standalonewindows64",
                        "standalonelinux",
                        "standalonelinux64",
                        "standalonelinuxuniversal"
                      ]
                    },
                    "size": {
                      "type": "number",
                      "description": "size of the the primary build artifact in bytes"
                    },
                    "created": {
                      "type": "string",
                      "description": "creation date"
                    },
                    "lastMod": {
                      "type": "string",
                      "description": "last modified date"
                    },
                    "bundleId": {
                      "type": "string",
                      "description": "a unique identifier (com.example.name)"
                    },
                    "udids": {
                      "type": "array",
                      "description": "iPhone unique identifiers that are able to install this build",
                      "items": {
                        "type": "string"
                      }
                    },
                    "links": {
                      "description": "links to build artifacts",
                      "type": "object"
                    }
                  }
                },
                "projectName": {
                  "type": "string"
                },
                "projectId": {
                  "type": "string"
                },
                "projectGuid": {
                  "type": "string"
                },
                "orgId": {
                  "type": "string"
                },
                "orgFk": {
                  "type": "string"
                },
                "filetoken": {
                  "type": "string"
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "artifacts": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  },
                  "additionalProperties": {
                    "type": "object",
                    "properties": {
                      "href": {
                        "type": "string"
                      },
                      "method": {
                        "type": "string"
                      },
                      "meta": {
                        "type": "object"
                      }
                    }
                  }
                },
                "buildReport": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "integer"
                    },
                    "warnings": {
                      "type": "integer"
                    }
                  }
                },
                "testResults": {
                  "description": "results from the build's unit tests, if any",
                  "type": "object",
                  "properties": {
                    "unit_test": {
                      "type": "object"
                    },
                    "unit_test_editmode": {
                      "type": "object"
                    },
                    "unit_test_playmode": {
                      "type": "object"
                    }
                  }
                },
                "error": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "builds"
        ],
        "operationId": "cancelBuild",
        "summary": "Cancel build",
        "description": "Cancel a build in progress. Canceling an already finished build\nwill do nothing and respond successfully.\n",
        "security": [
          {
            "permissions": [
              "project:user"
            ],
            "apikey": []
          }
        ],
        "parameters": [
          {
            "name": "orgid",
            "in": "path",
            "description": "Organization identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectid",
            "in": "path",
            "description": "Project identifier",
            "required": true,
            "type": "string"
          },
          {
            "description": "unique id auto-generated from the build target name",
            "name": "buildtargetid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "number",
            "in": "path",
            "description": "Build number or in some cases _all",
            "required": true,
            "type": "string"
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X DELETE\n  -H \"Content-Type: application/json\"\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/orgs/{orgid}/projects/{projectid}/buildtargets/{buildtargetid}/builds/{number}"
          },
          {
            "language": "python",
            "code": "buildsApi = BuildsApi(client)\nbuild = buildsApi.cancel_build('{orgid}', '{projectid}', '{buildtargetid}', '{number}')"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "put": {
        "tags": [
          "builds"
        ],
        "operationId": "updateBuild",
        "summary": "Update build information",
        "security": [
          {
            "permissions": [
              "project:manager"
            ],
            "apikey": []
          }
        ],
        "parameters": [
          {
            "name": "orgid",
            "in": "path",
            "description": "Organization identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectid",
            "in": "path",
            "description": "Project identifier",
            "required": true,
            "type": "string"
          },
          {
            "description": "unique id auto-generated from the build target name",
            "name": "buildtargetid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "number",
            "in": "path",
            "description": "Build number or in some cases _all",
            "required": true,
            "type": "string"
          },
          {
            "name": "options",
            "in": "body",
            "required": true,
            "description": "Options for build update",
            "schema": {
              "properties": {
                "favorited": {
                  "type": "boolean"
                },
                "label": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X PUT\n  -H \"Content-Type: application/json\"\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  -d '{\"favorited\": true}'\n  [API_URL][BASE_PATH]/orgs/{orgid}/projects/{projectid}/buildtargets/{buildtargetid}/builds/{number}"
          },
          {
            "language": "python",
            "code": "buildsApi = BuildsApi(client)\nbuild = buildsApi.cancel_build('{orgid}', '{projectid}', '{buildtargetid}', '{number}', {\"favorited\": true})    responses:"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "application/json-accepted": "{\n  \"build\": 2,\n  \"buildtargetid\": \"android-builder\",\n  \"buildTargetName\": \"Android Builder\",\n  \"buildStatus\": \"success\",\n  \"cleanBuild\": \"false\",\n  \"platform\": \"android\",\n  \"workspaceSize\": 8911006,\n  \"created\": \"2015-07-14T21:56:28.202Z\",\n  \"finished\": \"2015-07-14T22:04:10.000Z\",\n  \"checkoutStartTime\": \"2015-07-14T22:00:20.000Z\",\n  \"checkoutTimeInSeconds\": 40,\n  \"buildStartTime\": \"2015-07-14T22:01:00.000Z\",\n  \"buildTimeInSeconds\": 152.386056,\n  \"publishStartTime\": \"2015-07-14T22:03:33.000Z\",\n  \"publishTimeInSeconds\": 10.371839,\n  \"totalTimeInSeconds\": 461.798,\n  \"lastBuiltRevision\": \"88e565df27ca35c2603c29eb924dc018f32a22c1\",\n  \"changeset\": [],\n  \"favorited\": true,\n  \"auditChanges\": 0,\n  \"projectVersion\": {\n    \"name\": \"android-builder-2\",\n    \"filename\": \"example-org/new-project/android-builder-2/android-builder.apk\",\n    \"projectName\": \"Example Unity Project\",\n    \"platform\": \"android\",\n    \"size\": 14452762,\n    \"created\": \"2015-07-14T22:03:45.847Z\",\n    \"lastMod\": \"2015-07-14T22:03:46.251Z\",\n    \"bundleId\": \"com.tsugi.example\",\n    \"udids\": []\n  },\n  \"links\": {\n    \"self\": {\n      \"method\": \"get\",\n      \"href\": \"/api/v1/orgs/example-org/projects/new-project/buildtargets/android-builder/builds/2\"\n    },\n    \"log\": {\n      \"method\": \"get\",\n      \"href\": \"/api/v1/orgs/example-org/projects/new-project/buildtargets/android-builder/builds/2/log\"\n    },\n    \"auditlog\": {\n      \"method\": \"get\",\n      \"href\": \"/api/v1/orgs/example-org/projects/new-project/buildtargets/android-builder/builds/2/auditlog\"\n    },\n    \"download_primary\": {\n      \"method\": \"get\",\n      \"href\": \"https://unitycloud-build-user-svc-dev-build.s3.amazonaws.com/example-org/new-project/android-builder-2/android-builder.apk?AWSAccessKeyId=AKIAI6ZGSQWNDMF7X33A&Expires=1447973385&Signature=ffKQIKOJsKN6qrwzxObXSSyCVts%3D&response-content-disposition=attachment%3B%20filename%3Dexample-org%2Fnew-project-android-2-1436910988202.apk&response-content-type=application%2Foctet-stream\",\n      \"meta\": {\n        \"type\": \"APK\"\n      }\n    },\n    \"create_share\": {\n      \"method\": \"post\",\n      \"href\": \"/api/v1/orgs/example-org/projects/new-project/buildtargets/android-builder/builds/2/share\"\n    },\n    \"revoke_share\": {\n      \"method\": \"delete\",\n      \"href\": \"/api/v1/orgs/example-org/projects/new-project/buildtargets/android-builder/builds/2/share\"\n    },\n    \"icon\": {\n      \"method\": \"get\",\n      \"href\": \"https://unitycloud-build-user-svc-dev-extras-pub.s3.amazonaws.com/example-org/new-project/android-builder-2/icon.png\"\n    }\n  }\n}"
            },
            "schema": {
              "description": "buildattempt",
              "properties": {
                "build": {
                  "type": "number"
                },
                "buildtargetid": {
                  "description": "unique id auto-generated from the build target name",
                  "type": "string"
                },
                "buildTargetName": {
                  "type": "string",
                  "maxLength": 64
                },
                "buildGUID": {
                  "description": "unique GUID identifying this build",
                  "type": "string"
                },
                "buildStatus": {
                  "enum": [
                    "queued",
                    "sentToBuilder",
                    "started",
                    "restarted",
                    "success",
                    "failure",
                    "canceled",
                    "unknown"
                  ],
                  "type": "string"
                },
                "cleanBuild": {
                  "description": "if the build was built without using data cached from previous builds",
                  "type": "boolean"
                },
                "failureDetails": {
                  "description": "list of failure details for this build attempt, when available",
                  "type": "array",
                  "items": {
                    "properties": {
                      "label": {
                        "type": "string"
                      },
                      "resolutionHint": {
                        "type": "string"
                      },
                      "stages": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "failureType": {
                        "type": "string"
                      },
                      "count": {
                        "type": "number"
                      }
                    }
                  }
                },
                "canceledBy": {
                  "enum": [
                    "api",
                    "service",
                    "service-timelimit"
                  ],
                  "type": "string"
                },
                "platform": {
                  "type": "string",
                  "enum": [
                    "ios",
                    "android",
                    "webplayer",
                    "webgl",
                    "standaloneosxintel",
                    "standaloneosxintel64",
                    "standaloneosxuniversal",
                    "standalonewindows",
                    "standalonewindows64",
                    "standalonelinux",
                    "standalonelinux64",
                    "standalonelinuxuniversal"
                  ]
                },
                "workspaceSize": {
                  "description": "size of workspace in bytes",
                  "type": "number"
                },
                "created": {
                  "description": "when the build was created",
                  "type": "string"
                },
                "finished": {
                  "description": "when the build completely finished",
                  "type": "string"
                },
                "checkoutStartTime": {
                  "description": "when the build starting checking out code",
                  "type": "string"
                },
                "checkoutTimeInSeconds": {
                  "description": "amount of time spent checking out code",
                  "type": "number"
                },
                "buildStartTime": {
                  "description": "when the build started compiling",
                  "type": "string"
                },
                "buildTimeInSeconds": {
                  "description": "amount of time spend compiling",
                  "type": "number"
                },
                "publishStartTime": {
                  "description": "when the build started saving build artifacts",
                  "type": "string"
                },
                "publishTimeInSeconds": {
                  "description": "amount of time spent saving build artifacts",
                  "type": "number"
                },
                "totalTimeInSeconds": {
                  "description": "total time for the build",
                  "type": "number"
                },
                "unitTestTimeInSeconds": {
                  "description": "total time for unit test execution step",
                  "type": "number"
                },
                "editModeTestTimeInSeconds": {
                  "description": "total time for unit test execution step",
                  "type": "number"
                },
                "playModeTestTimeInSeconds": {
                  "description": "total time for unit test execution step",
                  "type": "number"
                },
                "lastBuiltRevision": {
                  "description": "source control commit id for the build",
                  "type": "string"
                },
                "changeset": {
                  "description": "a list of source control changes between this and the last build",
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                },
                "favorited": {
                  "description": "if the build is marked as do not delete or not",
                  "type": "boolean"
                },
                "label": {
                  "description": "description given when a build is favorited",
                  "type": "string"
                },
                "deleted": {
                  "description": "if the build is deleted or not",
                  "type": "boolean"
                },
                "headless": {
                  "description": "if the build was built to run in linux headless mode"
                },
                "credentialsOutdated": {
                  "description": "if a newer credential has been attached to this buildtarget and the build can be re-signed",
                  "type": "boolean"
                },
                "deletedBy": {
                  "description": "email address of the user who deleted this attempt",
                  "type": "string"
                },
                "queuedReason": {
                  "description": "reason the build is currently waiting",
                  "enum": [
                    "targetConcurrency",
                    "cooldown",
                    "buildConcurrency",
                    "waitingForBuildAgent",
                    "evaluating",
                    "sentToBuilder",
                    "notPending"
                  ],
                  "type": "string"
                },
                "cooldownDate": {
                  "type": "string",
                  "description": "time until this build will be reconsidered for building"
                },
                "scmBranch": {
                  "description": "scm branch to be built",
                  "type": "string"
                },
                "unityVersion": {
                  "description": "'latest' or a unity dot version with underscores (ex. '4_6_5')",
                  "type": "string"
                },
                "xcodeVersion": {
                  "description": "'latest' or a supported xcode version (ex. 'xcode7')",
                  "type": "string"
                },
                "auditChanges": {
                  "type": "number"
                },
                "projectVersion": {
                  "properties": {
                    "name": {
                      "description": "automatically generated name for the build",
                      "type": "string"
                    },
                    "filename": {
                      "description": "filename for the primary artifact",
                      "type": "string"
                    },
                    "projectName": {
                      "description": "name of the project",
                      "type": "string"
                    },
                    "platform": {
                      "type": "string",
                      "enum": [
                        "ios",
                        "android",
                        "webplayer",
                        "webgl",
                        "standaloneosxintel",
                        "standaloneosxintel64",
                        "standaloneosxuniversal",
                        "standalonewindows",
                        "standalonewindows64",
                        "standalonelinux",
                        "standalonelinux64",
                        "standalonelinuxuniversal"
                      ]
                    },
                    "size": {
                      "type": "number",
                      "description": "size of the the primary build artifact in bytes"
                    },
                    "created": {
                      "type": "string",
                      "description": "creation date"
                    },
                    "lastMod": {
                      "type": "string",
                      "description": "last modified date"
                    },
                    "bundleId": {
                      "type": "string",
                      "description": "a unique identifier (com.example.name)"
                    },
                    "udids": {
                      "type": "array",
                      "description": "iPhone unique identifiers that are able to install this build",
                      "items": {
                        "type": "string"
                      }
                    },
                    "links": {
                      "description": "links to build artifacts",
                      "type": "object"
                    }
                  }
                },
                "projectName": {
                  "type": "string"
                },
                "projectId": {
                  "type": "string"
                },
                "projectGuid": {
                  "type": "string"
                },
                "orgId": {
                  "type": "string"
                },
                "orgFk": {
                  "type": "string"
                },
                "filetoken": {
                  "type": "string"
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "artifacts": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  },
                  "additionalProperties": {
                    "type": "object",
                    "properties": {
                      "href": {
                        "type": "string"
                      },
                      "method": {
                        "type": "string"
                      },
                      "meta": {
                        "type": "object"
                      }
                    }
                  }
                },
                "buildReport": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "integer"
                    },
                    "warnings": {
                      "type": "integer"
                    }
                  }
                },
                "testResults": {
                  "description": "results from the build's unit tests, if any",
                  "type": "object",
                  "properties": {
                    "unit_test": {
                      "type": "object"
                    },
                    "unit_test_editmode": {
                      "type": "object"
                    },
                    "unit_test_playmode": {
                      "type": "object"
                    }
                  }
                },
                "error": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/orgs/{orgid}/projects/{projectid}/buildtargets/{buildtargetid}/builds/{number}/auditlog": {
      "x-swagger-router-controller": "buildattempts",
      "get": {
        "tags": [
          "builds"
        ],
        "operationId": "getAuditLog",
        "summary": "Get audit log",
        "description": "Retrieve a list of settings changes between the last and current build.",
        "security": [
          {
            "permissions": [
              "project:user"
            ],
            "apikey": []
          }
        ],
        "parameters": [
          {
            "name": "orgid",
            "in": "path",
            "description": "Organization identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectid",
            "in": "path",
            "description": "Project identifier",
            "required": true,
            "type": "string"
          },
          {
            "description": "unique id auto-generated from the build target name",
            "name": "buildtargetid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "number",
            "in": "path",
            "description": "Build number or in some cases _all",
            "required": true,
            "type": "string"
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of audit log records to retrieve",
            "required": false,
            "default": 25,
            "type": "number"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Skip to page number, based on per_page value",
            "required": false,
            "default": 1,
            "type": "number"
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X GET\n  -H \"Content-Type: application/json\"\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/orgs/{orgid}/projects/{projectid}/buildtargets/{buildtargetid}/builds/{number}/auditlog"
          },
          {
            "language": "python",
            "code": "buildsApi = BuildsApi(client)\nauditlog = buildsApi.get_audit_log('{orgid}', '{projectid}', '{buildtargetid}', '{number}')"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "required": [
                  "lines",
                  "updated"
                ],
                "properties": {
                  "updatingUserEmail": {
                    "type": "string"
                  },
                  "updated": {
                    "type": "string",
                    "format": "dateTime"
                  },
                  "lines": {
                    "type": "array",
                    "items": {
                      "required": [
                        "field",
                        "to"
                      ],
                      "properties": {
                        "label": {
                          "type": "string"
                        },
                        "field": {
                          "type": "string"
                        },
                        "to": {
                          "type": "string"
                        },
                        "from": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "application/json": "[\n  {\n    \"updatingUserEmail\": \"julie.smith@example.org\",\n    \"updated\": \"2015-08-04T17:18:24.532Z\",\n    \"lines\": [{\n      \"from\": \"Latest 4.x\",\n      \"to\": \"4.6.5\",\n      \"label\": \"Unity version\",\n      \"field\": \"buildtarget.settings.unityVersion\"\n    }]\n  },\n  {\n    \"updatingUserEmail\": \"sandra.johnson@example.org\",\n    \"updated\": \"2015-08-02T12:02:44.532Z\",\n    \"lines\": [{\n      \"label\": \"Keypass\",\n      \"field\": \"buildtarget.settings.platform.keystoreInfo.keypass\",\n      \"from\": \"\",\n      \"to\": \"changed\"\n    }]\n  }\n]"
            }
          }
        }
      }
    },
    "/orgs/{orgid}/projects/{projectid}/buildtargets/{buildtargetid}/builds/{number}/resign": {
      "x-swagger-router-controller": "buildattempts",
      "post": {
        "tags": [
          "builds"
        ],
        "operationId": "resignBuildArtifact",
        "summary": "Re-sign a build artifact",
        "description": "Re-sign a build artifact using the most recent credentials associated with the buildtarget.\n",
        "security": [
          {
            "permissions": [
              "project:manager"
            ],
            "apikey": []
          }
        ],
        "parameters": [
          {
            "name": "orgid",
            "in": "path",
            "description": "Organization identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectid",
            "in": "path",
            "description": "Project identifier",
            "required": true,
            "type": "string"
          },
          {
            "description": "unique id auto-generated from the build target name",
            "name": "buildtargetid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "number",
            "in": "path",
            "description": "Build number or in some cases _all",
            "required": true,
            "type": "string"
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X POST\n  -H \"Content-Type: application/json\"\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/orgs/{orgid}/projects/{projectid}/buildtargets/{buildtargetid}/builds/{number}/resign"
          },
          {
            "language": "python",
            "code": "buildsApi = BuildsApi(client)\nbuild = buildsApi.resign_build_artifact('{orgid}', '{projectid}', '{buildtargetid}', '{number}')"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "examples": {
              "application/json-accepted": "Resign Accepted\n[\n  {\n    \"build\": 3,\n    \"buildtargetid\": \"default-ios\",\n    \"buildTargetName\": \"iOS Builder\",\n    \"buildStatus\": \"queued\",\n    \"cleanBuild\": \"false\",\n    \"platform\": \"ios\",\n    \"created\": \"2015-11-19T22:02:20.244Z\",\n    \"changeset\": [],\n    \"favorited\": false,\n    \"auditChanges\": 1,\n    \"links\": {\n      \"self\": {\n        \"method\": \"get\",\n        \"href\": \"/api/v1/orgs/example-org/projects/new-project/buildtargets/default-ios/builds/3\"\n      },\n      \"log\": {\n        \"method\": \"get\",\n        \"href\": \"/api/v1/orgs/example-org/projects/new-project/buildtargets/default-ios/builds/3/log\"\n      },\n      \"auditlog\": {\n        \"method\": \"get\",\n        \"href\": \"/api/v1/orgs/example-org/projects/new-project/buildtargets/default-ios/builds/3/auditlog\"\n      },\n      \"cancel\": {\n        \"method\": \"delete\",\n        \"href\": \"/api/v1/orgs/example-org/projects/new-project/buildtargets/default-ios/builds/3\"\n      }\n    }\n  }\n]",
              "application/json-already-building": "Resign Already Started\n[\n  {\n    \"buildtargetid\": \"default-ios\",\n    \"buildTargetName\": \"iOS Builder\",\n    \"error\": \"Cannot start build - already a build pending.\"\n  }\n]"
            },
            "schema": {
              "type": "array",
              "items": {
                "description": "buildattempt",
                "properties": {
                  "build": {
                    "type": "number"
                  },
                  "buildtargetid": {
                    "description": "unique id auto-generated from the build target name",
                    "type": "string"
                  },
                  "buildTargetName": {
                    "type": "string",
                    "maxLength": 64
                  },
                  "buildGUID": {
                    "description": "unique GUID identifying this build",
                    "type": "string"
                  },
                  "buildStatus": {
                    "enum": [
                      "queued",
                      "sentToBuilder",
                      "started",
                      "restarted",
                      "success",
                      "failure",
                      "canceled",
                      "unknown"
                    ],
                    "type": "string"
                  },
                  "cleanBuild": {
                    "description": "if the build was built without using data cached from previous builds",
                    "type": "boolean"
                  },
                  "failureDetails": {
                    "description": "list of failure details for this build attempt, when available",
                    "type": "array",
                    "items": {
                      "properties": {
                        "label": {
                          "type": "string"
                        },
                        "resolutionHint": {
                          "type": "string"
                        },
                        "stages": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "failureType": {
                          "type": "string"
                        },
                        "count": {
                          "type": "number"
                        }
                      }
                    }
                  },
                  "canceledBy": {
                    "enum": [
                      "api",
                      "service",
                      "service-timelimit"
                    ],
                    "type": "string"
                  },
                  "platform": {
                    "type": "string",
                    "enum": [
                      "ios",
                      "android",
                      "webplayer",
                      "webgl",
                      "standaloneosxintel",
                      "standaloneosxintel64",
                      "standaloneosxuniversal",
                      "standalonewindows",
                      "standalonewindows64",
                      "standalonelinux",
                      "standalonelinux64",
                      "standalonelinuxuniversal"
                    ]
                  },
                  "workspaceSize": {
                    "description": "size of workspace in bytes",
                    "type": "number"
                  },
                  "created": {
                    "description": "when the build was created",
                    "type": "string"
                  },
                  "finished": {
                    "description": "when the build completely finished",
                    "type": "string"
                  },
                  "checkoutStartTime": {
                    "description": "when the build starting checking out code",
                    "type": "string"
                  },
                  "checkoutTimeInSeconds": {
                    "description": "amount of time spent checking out code",
                    "type": "number"
                  },
                  "buildStartTime": {
                    "description": "when the build started compiling",
                    "type": "string"
                  },
                  "buildTimeInSeconds": {
                    "description": "amount of time spend compiling",
                    "type": "number"
                  },
                  "publishStartTime": {
                    "description": "when the build started saving build artifacts",
                    "type": "string"
                  },
                  "publishTimeInSeconds": {
                    "description": "amount of time spent saving build artifacts",
                    "type": "number"
                  },
                  "totalTimeInSeconds": {
                    "description": "total time for the build",
                    "type": "number"
                  },
                  "unitTestTimeInSeconds": {
                    "description": "total time for unit test execution step",
                    "type": "number"
                  },
                  "editModeTestTimeInSeconds": {
                    "description": "total time for unit test execution step",
                    "type": "number"
                  },
                  "playModeTestTimeInSeconds": {
                    "description": "total time for unit test execution step",
                    "type": "number"
                  },
                  "lastBuiltRevision": {
                    "description": "source control commit id for the build",
                    "type": "string"
                  },
                  "changeset": {
                    "description": "a list of source control changes between this and the last build",
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  },
                  "favorited": {
                    "description": "if the build is marked as do not delete or not",
                    "type": "boolean"
                  },
                  "label": {
                    "description": "description given when a build is favorited",
                    "type": "string"
                  },
                  "deleted": {
                    "description": "if the build is deleted or not",
                    "type": "boolean"
                  },
                  "headless": {
                    "description": "if the build was built to run in linux headless mode"
                  },
                  "credentialsOutdated": {
                    "description": "if a newer credential has been attached to this buildtarget and the build can be re-signed",
                    "type": "boolean"
                  },
                  "deletedBy": {
                    "description": "email address of the user who deleted this attempt",
                    "type": "string"
                  },
                  "queuedReason": {
                    "description": "reason the build is currently waiting",
                    "enum": [
                      "targetConcurrency",
                      "cooldown",
                      "buildConcurrency",
                      "waitingForBuildAgent",
                      "evaluating",
                      "sentToBuilder",
                      "notPending"
                    ],
                    "type": "string"
                  },
                  "cooldownDate": {
                    "type": "string",
                    "description": "time until this build will be reconsidered for building"
                  },
                  "scmBranch": {
                    "description": "scm branch to be built",
                    "type": "string"
                  },
                  "unityVersion": {
                    "description": "'latest' or a unity dot version with underscores (ex. '4_6_5')",
                    "type": "string"
                  },
                  "xcodeVersion": {
                    "description": "'latest' or a supported xcode version (ex. 'xcode7')",
                    "type": "string"
                  },
                  "auditChanges": {
                    "type": "number"
                  },
                  "projectVersion": {
                    "properties": {
                      "name": {
                        "description": "automatically generated name for the build",
                        "type": "string"
                      },
                      "filename": {
                        "description": "filename for the primary artifact",
                        "type": "string"
                      },
                      "projectName": {
                        "description": "name of the project",
                        "type": "string"
                      },
                      "platform": {
                        "type": "string",
                        "enum": [
                          "ios",
                          "android",
                          "webplayer",
                          "webgl",
                          "standaloneosxintel",
                          "standaloneosxintel64",
                          "standaloneosxuniversal",
                          "standalonewindows",
                          "standalonewindows64",
                          "standalonelinux",
                          "standalonelinux64",
                          "standalonelinuxuniversal"
                        ]
                      },
                      "size": {
                        "type": "number",
                        "description": "size of the the primary build artifact in bytes"
                      },
                      "created": {
                        "type": "string",
                        "description": "creation date"
                      },
                      "lastMod": {
                        "type": "string",
                        "description": "last modified date"
                      },
                      "bundleId": {
                        "type": "string",
                        "description": "a unique identifier (com.example.name)"
                      },
                      "udids": {
                        "type": "array",
                        "description": "iPhone unique identifiers that are able to install this build",
                        "items": {
                          "type": "string"
                        }
                      },
                      "links": {
                        "description": "links to build artifacts",
                        "type": "object"
                      }
                    }
                  },
                  "projectName": {
                    "type": "string"
                  },
                  "projectId": {
                    "type": "string"
                  },
                  "projectGuid": {
                    "type": "string"
                  },
                  "orgId": {
                    "type": "string"
                  },
                  "orgFk": {
                    "type": "string"
                  },
                  "filetoken": {
                    "type": "string"
                  },
                  "links": {
                    "type": "object",
                    "properties": {
                      "artifacts": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      }
                    },
                    "additionalProperties": {
                      "type": "object",
                      "properties": {
                        "href": {
                          "type": "string"
                        },
                        "method": {
                          "type": "string"
                        },
                        "meta": {
                          "type": "object"
                        }
                      }
                    }
                  },
                  "buildReport": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "integer"
                      },
                      "warnings": {
                        "type": "integer"
                      }
                    }
                  },
                  "testResults": {
                    "description": "results from the build's unit tests, if any",
                    "type": "object",
                    "properties": {
                      "unit_test": {
                        "type": "object"
                      },
                      "unit_test_editmode": {
                        "type": "object"
                      },
                      "unit_test_playmode": {
                        "type": "object"
                      }
                    }
                  },
                  "error": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/orgs/{orgid}/builds": {
      "x-swagger-router-controller": "buildattempts",
      "get": {
        "tags": [
          "builds"
        ],
        "operationId": "getBuildsForOrg",
        "summary": "List all builds for org",
        "description": "List all running and finished builds, sorted by build number\n(optionally paginating the results). The response includes a Content-Range\nheader that identifies the range of results returned and the total number\nof results matching the given query parameters.\n",
        "security": [
          {
            "permissions": [
              "org:user"
            ],
            "apikey": []
          }
        ],
        "parameters": [
          {
            "name": "orgid",
            "in": "path",
            "description": "Organization identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Extra fields to include in the response",
            "required": false,
            "type": "string"
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of audit log records to retrieve",
            "required": false,
            "default": 25,
            "type": "number"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Skip to page number, based on per_page value",
            "required": false,
            "default": 1,
            "type": "number"
          },
          {
            "name": "buildStatus",
            "in": "query",
            "description": "Query for only builds of a specific status",
            "required": false,
            "default": "",
            "type": "string"
          },
          {
            "name": "platform",
            "in": "query",
            "description": "Query for only builds of a specific platform",
            "required": false,
            "default": "",
            "type": "string"
          },
          {
            "name": "showDeleted",
            "in": "query",
            "description": "Query for builds that have been deleted",
            "required": false,
            "default": false,
            "type": "boolean"
          },
          {
            "name": "onlyFavorites",
            "in": "query",
            "description": "Query for builds that have been favorited",
            "required": false,
            "default": false,
            "type": "boolean"
          },
          {
            "name": "cleanBuild",
            "in": "query",
            "description": "Query for builds that have either been built clean or using caches",
            "required": false,
            "type": "boolean"
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "Default List\n\ncurl\n  -X GET\n  -H \"Content-Type: application/json\"\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/orgs/{orgid}/builds\n\nWith Paging\n\ncurl\n  -X GET\n  -H \"Content-Type: application/json\"\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/orgs/{orgid}/builds?per_page=5&page=2\n\nWith Filtering\n\ncurl\n  -X GET\n  -H \"Content-Type: application/json\"\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/orgs/{orgid}/builds?buildStatus=success&platform=ios"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "application/json": "[\n  {\n      \"orgId\": example-org,\n      \"projectId\": new-project,\n      \"projectName\": new-project,\n      \"build\": 2,\n      \"buildtargetid\": \"android-builder\",\n      \"buildTargetName\": \"Android Builder\",\n      \"buildStatus\": \"success\",\n      \"cleanBuild\": \"true\",\n      \"platform\": \"android\",\n      \"workspaceSize\": 8911006,\n      \"created\": \"2015-07-14T21:56:28.202Z\",\n      \"finished\": \"2015-07-14T22:04:10.000Z\",\n      \"checkoutStartTime\": \"2015-07-14T22:00:20.000Z\",\n      \"checkoutTimeInSeconds\": 40,\n      \"buildStartTime\": \"2015-07-14T22:01:00.000Z\",\n      \"buildTimeInSeconds\": 152.386056,\n      \"publishStartTime\": \"2015-07-14T22:03:33.000Z\",\n      \"publishTimeInSeconds\": 10.371839,\n      \"totalTimeInSeconds\": 461.798,\n      \"lastBuiltRevision\": \"88e565df27ca35c2603c29eb924dc018f32a22c1\",\n      \"changeset\": [],\n      \"favorited\": false,\n      \"scmBranch\": \"master\",\n      \"unityVersion\": \"latest\",\n      \"auditChanges\": 0,\n      \"projectVersion\": {\n        \"name\": \"android-builder-2\",\n        \"filename\": \"example-org/new-project/android-builder-2/android-builder.apk\",\n        \"projectName\": \"New Project\",\n        \"platform\": \"android\",\n        \"size\": 14452762,\n        \"created\": \"2015-07-14T22:03:45.847Z\",\n        \"lastMod\": \"2015-07-14T22:03:46.251Z\",\n        \"bundleId\": \"com.unity3d.example\",\n        \"udids\": []\n      },\n      \"links\": {\n        \"self\": {\n          \"method\": \"get\",\n          \"href\": \"/api/v1/orgs/example-org/projects/new-project/buildtargets/android-builder/builds/2\"\n        },\n        \"log\": {\n          \"method\": \"get\",\n          \"href\": \"/api/v1/orgs/example-org/projects/new-project/buildtargets/android-builder/builds/2/log\"\n        },\n        \"auditlog\": {\n          \"method\": \"get\",\n          \"href\": \"/api/v1/orgs/example-org/projects/new-project/buildtargets/android-builder/builds/2/auditlog\"\n        },\n        \"download_primary\": {\n          \"method\": \"get\",\n          \"href\": \"https://unitycloud-build-user-svc-dev-build.s3.amazonaws.com/example-org/new-project/android-builder-2/android-builder.apk?AWSAccessKeyId=AKIAI6ZGSQWNDMF7X33A&Expires=1447890477&Signature=e9Hs%2FYECpVlrMITqCRY5dSWXChE%3D&response-content-disposition=attachment%3B%20filename%3Dexample-org%2Fnew-project-android-2-1436910988202.apk&response-content-type=application%2Foctet-stream\",\n          \"meta\": {\n            \"type\": \"APK\"\n          }\n        },\n        \"create_share\": {\n          \"method\": \"post\",\n          \"href\": \"/api/v1/orgs/example-org/projects/new-project/buildtargets/android-builder/builds/2/share\"\n        },\n        \"revoke_share\": {\n          \"method\": \"delete\",\n          \"href\": \"/api/v1/orgs/example-org/projects/new-project/buildtargets/android-builder/builds/2/share\"\n        },\n        \"icon\": {\n          \"method\": \"get\",\n          \"href\": \"https://unitycloud-build-user-svc-dev-extras-pub.s3.amazonaws.com/example-org/new-project/android-builder-2/icon.png\"\n        }\n      }\n    },\n    {\n      \"orgId\": example-org,\n      \"projectId\": new-project,\n      \"projectName\": new-project,\n      \"build\": 1,\n      \"buildtargetid\": \"android-builder\",\n      \"buildTargetName\": \"Android Builder\",\n      \"buildStatus\": \"success\",\n      \"cleanBuild\": \"false\",\n      \"platform\": \"android\",\n      \"workspaceSize\": 8910982,\n      \"created\": \"2015-07-14T21:51:26.520Z\",\n      \"finished\": \"2015-07-14T21:54:43.000Z\",\n      \"checkoutStartTime\": \"2015-07-14T21:51:45.000Z\",\n      \"checkoutTimeInSeconds\": 41,\n      \"buildStartTime\": \"2015-07-14T21:52:26.000Z\",\n      \"buildTimeInSeconds\": 120.410226,\n      \"publishStartTime\": \"2015-07-14T21:54:27.000Z\",\n      \"publishTimeInSeconds\": 4.846675,\n      \"totalTimeInSeconds\": 196.48,\n      \"lastBuiltRevision\": \"88e565df27ca35c2603c29eb924dc018f32a22c1\",\n      \"changeset\": [],\n      \"favorited\": false,\n      \"scmBranch\": \"master\",\n      \"unityVersion\": \"latest\",\n      \"auditChanges\": 0,\n      \"projectVersion\": {\n        \"name\": \"android-builder-1\",\n        \"filename\": \"example-org/new-project/android-builder-1/android-builder.apk\",\n        \"projectName\": \"Example Unity Project\",\n        \"platform\": \"android\",\n        \"size\": 14443743,\n        \"created\": \"2015-07-14T21:54:34.395Z\",\n        \"lastMod\": \"2015-07-14T21:54:34.776Z\",\n        \"bundleId\": \"com.tsugi.example\",\n        \"udids\": []\n      },\n      \"links\": {\n        \"self\": {\n          \"method\": \"get\",\n          \"href\": \"/api/v1/orgs/example-org/projects/new-project/buildtargets/android-builder/builds/1\"\n        },\n        \"log\": {\n          \"method\": \"get\",\n          \"href\": \"/api/v1/orgs/example-org/projects/new-project/buildtargets/android-builder/builds/1/log\"\n        },\n        \"auditlog\": {\n          \"method\": \"get\",\n          \"href\": \"/api/v1/orgs/example-org/projects/new-project/buildtargets/android-builder/builds/1/auditlog\"\n        },\n        \"download_primary\": {\n          \"method\": \"get\",\n          \"href\": \"https://unitycloud-build-user-svc-dev-build.s3.amazonaws.com/example-org/new-project/android-builder-1/android-builder.apk?AWSAccessKeyId=AKIAI6ZGSQWNDMF7X33A&Expires=1447890477&Signature=5Z4ouUFyVIJ8jaChE%2F6K%2FMHHpiM%3D&response-content-disposition=attachment%3B%20filename%3Dexample-org%2Fnew-project-android-1-1436910686520.apk&response-content-type=application%2Foctet-stream\",\n          \"meta\": {\n            \"type\": \"APK\"\n          }\n        },\n        \"create_share\": {\n          \"method\": \"post\",\n          \"href\": \"/api/v1/orgs/example-org/projects/new-project/buildtargets/android-builder/builds/1/share\"\n        },\n        \"revoke_share\": {\n          \"method\": \"delete\",\n          \"href\": \"/api/v1/orgs/example-org/projects/new-project/buildtargets/android-builder/builds/1/share\"\n        },\n        \"icon\": {\n          \"method\": \"get\",\n          \"href\": \"https://unitycloud-build-user-svc-dev-extras-pub.s3.amazonaws.com/example-org/new-project/android-builder-1/icon.png\"\n        }\n      }\n    }\n  ]"
            },
            "schema": {
              "type": "array",
              "items": {
                "description": "buildattempt",
                "properties": {
                  "build": {
                    "type": "number"
                  },
                  "buildtargetid": {
                    "description": "unique id auto-generated from the build target name",
                    "type": "string"
                  },
                  "buildTargetName": {
                    "type": "string",
                    "maxLength": 64
                  },
                  "buildGUID": {
                    "description": "unique GUID identifying this build",
                    "type": "string"
                  },
                  "buildStatus": {
                    "enum": [
                      "queued",
                      "sentToBuilder",
                      "started",
                      "restarted",
                      "success",
                      "failure",
                      "canceled",
                      "unknown"
                    ],
                    "type": "string"
                  },
                  "cleanBuild": {
                    "description": "if the build was built without using data cached from previous builds",
                    "type": "boolean"
                  },
                  "failureDetails": {
                    "description": "list of failure details for this build attempt, when available",
                    "type": "array",
                    "items": {
                      "properties": {
                        "label": {
                          "type": "string"
                        },
                        "resolutionHint": {
                          "type": "string"
                        },
                        "stages": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "failureType": {
                          "type": "string"
                        },
                        "count": {
                          "type": "number"
                        }
                      }
                    }
                  },
                  "canceledBy": {
                    "enum": [
                      "api",
                      "service",
                      "service-timelimit"
                    ],
                    "type": "string"
                  },
                  "platform": {
                    "type": "string",
                    "enum": [
                      "ios",
                      "android",
                      "webplayer",
                      "webgl",
                      "standaloneosxintel",
                      "standaloneosxintel64",
                      "standaloneosxuniversal",
                      "standalonewindows",
                      "standalonewindows64",
                      "standalonelinux",
                      "standalonelinux64",
                      "standalonelinuxuniversal"
                    ]
                  },
                  "workspaceSize": {
                    "description": "size of workspace in bytes",
                    "type": "number"
                  },
                  "created": {
                    "description": "when the build was created",
                    "type": "string"
                  },
                  "finished": {
                    "description": "when the build completely finished",
                    "type": "string"
                  },
                  "checkoutStartTime": {
                    "description": "when the build starting checking out code",
                    "type": "string"
                  },
                  "checkoutTimeInSeconds": {
                    "description": "amount of time spent checking out code",
                    "type": "number"
                  },
                  "buildStartTime": {
                    "description": "when the build started compiling",
                    "type": "string"
                  },
                  "buildTimeInSeconds": {
                    "description": "amount of time spend compiling",
                    "type": "number"
                  },
                  "publishStartTime": {
                    "description": "when the build started saving build artifacts",
                    "type": "string"
                  },
                  "publishTimeInSeconds": {
                    "description": "amount of time spent saving build artifacts",
                    "type": "number"
                  },
                  "totalTimeInSeconds": {
                    "description": "total time for the build",
                    "type": "number"
                  },
                  "unitTestTimeInSeconds": {
                    "description": "total time for unit test execution step",
                    "type": "number"
                  },
                  "editModeTestTimeInSeconds": {
                    "description": "total time for unit test execution step",
                    "type": "number"
                  },
                  "playModeTestTimeInSeconds": {
                    "description": "total time for unit test execution step",
                    "type": "number"
                  },
                  "lastBuiltRevision": {
                    "description": "source control commit id for the build",
                    "type": "string"
                  },
                  "changeset": {
                    "description": "a list of source control changes between this and the last build",
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  },
                  "favorited": {
                    "description": "if the build is marked as do not delete or not",
                    "type": "boolean"
                  },
                  "label": {
                    "description": "description given when a build is favorited",
                    "type": "string"
                  },
                  "deleted": {
                    "description": "if the build is deleted or not",
                    "type": "boolean"
                  },
                  "headless": {
                    "description": "if the build was built to run in linux headless mode"
                  },
                  "credentialsOutdated": {
                    "description": "if a newer credential has been attached to this buildtarget and the build can be re-signed",
                    "type": "boolean"
                  },
                  "deletedBy": {
                    "description": "email address of the user who deleted this attempt",
                    "type": "string"
                  },
                  "queuedReason": {
                    "description": "reason the build is currently waiting",
                    "enum": [
                      "targetConcurrency",
                      "cooldown",
                      "buildConcurrency",
                      "waitingForBuildAgent",
                      "evaluating",
                      "sentToBuilder",
                      "notPending"
                    ],
                    "type": "string"
                  },
                  "cooldownDate": {
                    "type": "string",
                    "description": "time until this build will be reconsidered for building"
                  },
                  "scmBranch": {
                    "description": "scm branch to be built",
                    "type": "string"
                  },
                  "unityVersion": {
                    "description": "'latest' or a unity dot version with underscores (ex. '4_6_5')",
                    "type": "string"
                  },
                  "xcodeVersion": {
                    "description": "'latest' or a supported xcode version (ex. 'xcode7')",
                    "type": "string"
                  },
                  "auditChanges": {
                    "type": "number"
                  },
                  "projectVersion": {
                    "properties": {
                      "name": {
                        "description": "automatically generated name for the build",
                        "type": "string"
                      },
                      "filename": {
                        "description": "filename for the primary artifact",
                        "type": "string"
                      },
                      "projectName": {
                        "description": "name of the project",
                        "type": "string"
                      },
                      "platform": {
                        "type": "string",
                        "enum": [
                          "ios",
                          "android",
                          "webplayer",
                          "webgl",
                          "standaloneosxintel",
                          "standaloneosxintel64",
                          "standaloneosxuniversal",
                          "standalonewindows",
                          "standalonewindows64",
                          "standalonelinux",
                          "standalonelinux64",
                          "standalonelinuxuniversal"
                        ]
                      },
                      "size": {
                        "type": "number",
                        "description": "size of the the primary build artifact in bytes"
                      },
                      "created": {
                        "type": "string",
                        "description": "creation date"
                      },
                      "lastMod": {
                        "type": "string",
                        "description": "last modified date"
                      },
                      "bundleId": {
                        "type": "string",
                        "description": "a unique identifier (com.example.name)"
                      },
                      "udids": {
                        "type": "array",
                        "description": "iPhone unique identifiers that are able to install this build",
                        "items": {
                          "type": "string"
                        }
                      },
                      "links": {
                        "description": "links to build artifacts",
                        "type": "object"
                      }
                    }
                  },
                  "projectName": {
                    "type": "string"
                  },
                  "projectId": {
                    "type": "string"
                  },
                  "projectGuid": {
                    "type": "string"
                  },
                  "orgId": {
                    "type": "string"
                  },
                  "orgFk": {
                    "type": "string"
                  },
                  "filetoken": {
                    "type": "string"
                  },
                  "links": {
                    "type": "object",
                    "properties": {
                      "artifacts": {
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      }
                    },
                    "additionalProperties": {
                      "type": "object",
                      "properties": {
                        "href": {
                          "type": "string"
                        },
                        "method": {
                          "type": "string"
                        },
                        "meta": {
                          "type": "object"
                        }
                      }
                    }
                  },
                  "buildReport": {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "integer"
                      },
                      "warnings": {
                        "type": "integer"
                      }
                    }
                  },
                  "testResults": {
                    "description": "results from the build's unit tests, if any",
                    "type": "object",
                    "properties": {
                      "unit_test": {
                        "type": "object"
                      },
                      "unit_test_editmode": {
                        "type": "object"
                      },
                      "unit_test_playmode": {
                        "type": "object"
                      }
                    }
                  },
                  "error": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "builds"
        ],
        "operationId": "cancelBuildsForOrg",
        "summary": "Cancel builds for org",
        "description": "Cancel all in progress builds for an organization. Canceling an already finished build\nwill do nothing and respond successfully.\n",
        "security": [
          {
            "permissions": [
              "org:user"
            ],
            "apikey": []
          }
        ],
        "parameters": [
          {
            "name": "orgid",
            "in": "path",
            "description": "Organization identifier",
            "required": true,
            "type": "string"
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X DELETE\n  -H \"Content-Type: application/json\"\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/orgs/{orgid}/builds"
          },
          {
            "language": "python",
            "code": "buildsApi = BuildsApi(client)\nbuild = buildsApi.cancel_builds_for_org('{orgid}')"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/orgs/{orgid}/projects/{projectid}/buildtargets/{buildtargetid}/builds/{number}/log": {
      "x-swagger-router-controller": "buildattempts",
      "get": {
        "tags": [
          "builds"
        ],
        "operationId": "getBuildLog",
        "summary": "Get build log",
        "description": "Retrieve the plain text log for a specifc build.",
        "security": [
          {
            "permissions": [
              "project:user"
            ],
            "apikey": []
          }
        ],
        "parameters": [
          {
            "name": "orgid",
            "in": "path",
            "description": "Organization identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectid",
            "in": "path",
            "description": "Project identifier",
            "required": true,
            "type": "string"
          },
          {
            "description": "unique id auto-generated from the build target name",
            "name": "buildtargetid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "number",
            "in": "path",
            "description": "Build number or in some cases _all",
            "required": true,
            "type": "string"
          },
          {
            "name": "offsetlines",
            "in": "query",
            "description": "Stream log from the given line number",
            "required": false,
            "default": 1,
            "type": "number"
          },
          {
            "name": "linenumbers",
            "in": "query",
            "description": "Include log line numbers in the text output",
            "required": false,
            "default": false,
            "type": "boolean"
          },
          {
            "name": "lastLineNumber",
            "in": "query",
            "description": "The last line number seen, numbering will continue from here",
            "required": false,
            "default": 0,
            "type": "number"
          },
          {
            "name": "compact",
            "in": "query",
            "description": "Return the compact log, showing only errors and warnings",
            "required": false,
            "default": false,
            "type": "boolean"
          },
          {
            "name": "withHtml",
            "in": "query",
            "description": "Surround important lines (errors, warnings) with SPAN and CSS markup\n",
            "required": false,
            "default": false,
            "type": "boolean"
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "Retrieve full log\ncurl\n  -X GET\n  -H \"Content-Type: application/json\"\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/orgs/{orgid}/projects/{projectid}/buildtargets/{buildtargetid}/builds/{number}/log\n\nRetrieve HTML compact log\ncurl\n    -X GET\n    -H \"Content-Type: application/json\"\n    -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n    [API_URL][BASE_PATH]/orgs/{orgid}/projects/{projectid}/buildtargets/{buildtargetid}/builds/{number}/log?compact=true&withHtml=true"
          },
          {
            "language": "python",
            "code": "# Retrieve full log\nbuildsApi = BuildsApi(client)\nlog = buildsApi.get_build_log('{orgid}', '{projectid}', '{buildtargetid}', '{number}')\n\n# Retrieve HTML compact log\nlog = buildsApi.get_build_log('{orgid}', '{projectid}', '{buildtargetid}', '{number}', 1, compact='true', with_html='true')"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "text/plain-full": "Full text log\n\nRunning Prebuild steps\ndone.\nbvr 0.2.47\nbvr-api 0.0.41\nUsing strategy: Default\nCloning the remote Git repository\n...\nWORKSPACESIZE | ARTIFACTSSIZE\n8.50 MiB      | 13.81 MiB\nPublishing build 2 of example-org/new-project for target 'android-builder'...\nUploading /BUILD_PATH/example-org.new-project.android-builder/.build/last/android-builder/android-builder.apk  ...done\nUploading /BUILD_PATH/example-org.new-project.android-builder/.build/last/android-builder/extra_data/artifacts/icon.png  ...done\npublishing finished successfully.\ndone.\npostbuildstatus finished successfully.\nDeleting project workspace...\nFinished: SUCCESS",
              "text/plain-compact": "Compact text log\n\n[Unity] Initialize engine version: 4.6.4f1 (99f88340878d)\n[Unity] Initialize engine version: 4.6.4f1 (99f88340878d)\n[Unity] Finished exporting player successfully.\n       Warning:\npublishing finished successfully.\nFinished: SUCCESS",
              "text/html-compact": "Compact HTML log\n\n&lt;span class=\"log_important_line\">[Unity] &lt;span class=\"log_important\">Initialize engine version: &lt;/span>4.6.4f1 (99f88340878d)&lt;/span>\n&lt;span class=\"log_important_line\">[Unity] &lt;span class=\"log_important\">Initialize engine version: &lt;/span>4.6.4f1 (99f88340878d)&lt;/span>\n&lt;span class=\"log_success_line\">[Unity] &lt;span class=\"log_success\">Finished exporting player successfully.&lt;/span>&lt;/span>\n&lt;span class=\"log_warning_line\">       &lt;span class=\"log_warning\">Warning&lt;/span>: &lt;/span>\n&lt;span class=\"log_success_line\">&lt;span class=\"log_success\">publishing finished successfully&lt;/span>.&lt;/span>\n&lt;span class=\"log_success_line\">&lt;span class=\"log_success\">Finished: SUCCESS&lt;/span>&lt;/span>"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "properties": {
                "error": {
                  "type": "string"
                },
                "detail": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/orgs/{orgid}/projects/{projectid}/buildtargets/{buildtargetid}/builds/{number}/steps": {
      "get": {
        "tags": [
          "builds"
        ],
        "x-swagger-router-controller": "buildattempts",
        "operationId": "getBuildSteps",
        "summary": "Get the build steps for a given build",
        "description": "Retrieves all build steps for a build, this replaces the old method where we would manually download the\nbuild report artifacts and allows us to add more functionality into build steps.\n",
        "security": [
          {
            "permissions": [
              "project:user"
            ],
            "apikey": []
          }
        ],
        "parameters": [
          {
            "name": "orgid",
            "in": "path",
            "description": "Organization identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectid",
            "in": "path",
            "description": "Project identifier",
            "required": true,
            "type": "string"
          },
          {
            "description": "unique id auto-generated from the build target name",
            "name": "buildtargetid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "number",
            "in": "path",
            "description": "Build number or in some cases _all",
            "required": true,
            "type": "string"
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X GET\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/orgs/{orgid}/projects/{projectid}/buildtargets/{buildtargetid}/builds/{number}/steps"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "application/json": "[{\n    \"depth\": 0,\n    \"duration\": 67138.5108,\n    \"name\": \"Build player\",\n    \"messages\": []\n}, {\n    \"depth\": 1,\n    \"duration\": 2839.5708,\n    \"name\": \"Compile scripts\",\n    \"messages\": [{\n        \"content\": \"Library/PackageCache/com.unity.analytics@3.2.2/DataPrivacy/DataPrivacyButton.cs(28,13): warning CS0618: 'Application.ExternalEval(string)' is obsolete: 'Application.ExternalEval is deprecated. See https://docs.unity3d.com/Manual/webgl-interactingwithbrowserscripting.html for alternatives.'\",\n        \"typeCode\": 2,\n    }]\n}, {\n    \"depth\": 1,\n    \"duration\": 0.027,\n    \"name\": \"Prepare splash screen\",\n    \"messages\": []\n}])"
            },
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "name",
                  "duration"
                ],
                "properties": {
                  "depth": {
                    "type": "integer"
                  },
                  "duration": {
                    "type": "number"
                  },
                  "name": {
                    "type": "string"
                  },
                  "messages": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "content": {
                          "type": "string"
                        },
                        "typeCode": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/orgs/{orgid}/projects/{projectid}/buildtargets/{buildtargetid}/builds/{number}/share": {
      "x-swagger-router-controller": "buildattempts",
      "get": {
        "tags": [
          "builds"
        ],
        "operationId": "getShare",
        "summary": "Get the share link",
        "description": "Gets a share link if it exists",
        "security": [
          {
            "permissions": [
              "project:user"
            ],
            "apikey": []
          }
        ],
        "parameters": [
          {
            "name": "orgid",
            "in": "path",
            "description": "Organization identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectid",
            "in": "path",
            "description": "Project identifier",
            "required": true,
            "type": "string"
          },
          {
            "description": "unique id auto-generated from the build target name",
            "name": "buildtargetid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "number",
            "in": "path",
            "description": "Build number or in some cases _all",
            "required": true,
            "type": "string"
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X GET\n  -H \"Content-Type: application/json\"\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/orgs/{orgid}/projects/{projectid}/buildtargets/{buildtargetid}/builds/{number}/share"
          },
          {
            "language": "python",
            "code": "buildsApi = BuildsApi(client)\nshare = buildsApi.get_share('{orgid}', '{projectid}', '{buildtargetid}', '{number}')"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "application/json": "{\n  \"shareid\": \"bJ5Pu6RYFl\"\n}"
            },
            "schema": {
              "properties": {
                "shareid": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "No Content",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "post": {
        "tags": [
          "builds"
        ],
        "operationId": "createShare",
        "summary": "Create a new link to share a project",
        "description": "Create a new short link to share a project. If this is called when a share already exists, that share\nwill be revoked and a new one created.",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "security": [
          {
            "permissions": [
              "project:user"
            ],
            "apikey": []
          }
        ],
        "parameters": [
          {
            "name": "orgid",
            "in": "path",
            "description": "Organization identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectid",
            "in": "path",
            "description": "Project identifier",
            "required": true,
            "type": "string"
          },
          {
            "description": "unique id auto-generated from the build target name",
            "name": "buildtargetid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "number",
            "in": "path",
            "description": "Build number or in some cases _all",
            "required": true,
            "type": "string"
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X POST\n  -H \"Content-Type: application/json\"\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/orgs/{orgid}/projects/{projectid}/buildtargets/{buildtargetid}/builds/{number}/share"
          },
          {
            "language": "python",
            "code": "buildsApi = BuildsApi(client)\nshare = buildsApi.create_share('{orgid}', '{projectid}', '{buildtargetid}', '{number}')"
          }
        ],
        "responses": {
          "201": {
            "description": "OK",
            "examples": {
              "application/json": "{\n  \"shareid\": \"bJ5Pu6RYFl\"\n}"
            },
            "schema": {
              "properties": {
                "shareid": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "No Content",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "builds"
        ],
        "operationId": "revokeShare",
        "summary": "Revoke a shared link",
        "description": "Revoke a shared link, both {buildtargetid} and {number} may use _all to revoke all share links for a given buildtarget or entire project.",
        "security": [
          {
            "permissions": [
              "project:user"
            ],
            "apikey": []
          }
        ],
        "parameters": [
          {
            "name": "orgid",
            "in": "path",
            "description": "Organization identifier",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectid",
            "in": "path",
            "description": "Project identifier",
            "required": true,
            "type": "string"
          },
          {
            "description": "unique id auto-generated from the build target name",
            "name": "buildtargetid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "number",
            "in": "path",
            "description": "Build number or in some cases _all",
            "required": true,
            "type": "string"
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X DELETE\n  -H \"Content-Type: application/json\"\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/orgs/{orgid}/projects/{projectid}/buildtargets/{buildtargetid}/builds/{number}/share"
          },
          {
            "language": "python",
            "code": "buildsApi = BuildsApi(client)\nshare = buildsApi.revoke_share('{orgid}', '{projectid}', '{buildtargetid}', '{number}')"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "No Content",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/shares/{shareid}": {
      "x-swagger-router-controller": "buildattempts",
      "get": {
        "tags": [
          "shares"
        ],
        "operationId": "getShareMetadata",
        "summary": "Get details on shared build including download link",
        "description": "This is an endpoint accessible without an api key that provides information about a\nspecific build including download links.\nA shareid is generated by POSTing to a <a href=\"#!/builds/createShare\">build's share endpoint</a>.",
        "x-security-unauthenticated": true,
        "parameters": [
          {
            "name": "shareid",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Extra fields to include in the response",
            "required": false,
            "type": "string"
          }
        ],
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X GET\n  -H \"Content-Type: application/json\"\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/shares/{shareid}"
          },
          {
            "language": "python",
            "code": "sharesApi = SharesApi(client)\nshare = sharesApi.get_share_metadata('{shareid}')"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "buildattempt",
              "properties": {
                "build": {
                  "type": "number"
                },
                "buildtargetid": {
                  "description": "unique id auto-generated from the build target name",
                  "type": "string"
                },
                "buildTargetName": {
                  "type": "string",
                  "maxLength": 64
                },
                "buildGUID": {
                  "description": "unique GUID identifying this build",
                  "type": "string"
                },
                "buildStatus": {
                  "enum": [
                    "queued",
                    "sentToBuilder",
                    "started",
                    "restarted",
                    "success",
                    "failure",
                    "canceled",
                    "unknown"
                  ],
                  "type": "string"
                },
                "cleanBuild": {
                  "description": "if the build was built without using data cached from previous builds",
                  "type": "boolean"
                },
                "failureDetails": {
                  "description": "list of failure details for this build attempt, when available",
                  "type": "array",
                  "items": {
                    "properties": {
                      "label": {
                        "type": "string"
                      },
                      "resolutionHint": {
                        "type": "string"
                      },
                      "stages": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "failureType": {
                        "type": "string"
                      },
                      "count": {
                        "type": "number"
                      }
                    }
                  }
                },
                "canceledBy": {
                  "enum": [
                    "api",
                    "service",
                    "service-timelimit"
                  ],
                  "type": "string"
                },
                "platform": {
                  "type": "string",
                  "enum": [
                    "ios",
                    "android",
                    "webplayer",
                    "webgl",
                    "standaloneosxintel",
                    "standaloneosxintel64",
                    "standaloneosxuniversal",
                    "standalonewindows",
                    "standalonewindows64",
                    "standalonelinux",
                    "standalonelinux64",
                    "standalonelinuxuniversal"
                  ]
                },
                "workspaceSize": {
                  "description": "size of workspace in bytes",
                  "type": "number"
                },
                "created": {
                  "description": "when the build was created",
                  "type": "string"
                },
                "finished": {
                  "description": "when the build completely finished",
                  "type": "string"
                },
                "checkoutStartTime": {
                  "description": "when the build starting checking out code",
                  "type": "string"
                },
                "checkoutTimeInSeconds": {
                  "description": "amount of time spent checking out code",
                  "type": "number"
                },
                "buildStartTime": {
                  "description": "when the build started compiling",
                  "type": "string"
                },
                "buildTimeInSeconds": {
                  "description": "amount of time spend compiling",
                  "type": "number"
                },
                "publishStartTime": {
                  "description": "when the build started saving build artifacts",
                  "type": "string"
                },
                "publishTimeInSeconds": {
                  "description": "amount of time spent saving build artifacts",
                  "type": "number"
                },
                "totalTimeInSeconds": {
                  "description": "total time for the build",
                  "type": "number"
                },
                "unitTestTimeInSeconds": {
                  "description": "total time for unit test execution step",
                  "type": "number"
                },
                "editModeTestTimeInSeconds": {
                  "description": "total time for unit test execution step",
                  "type": "number"
                },
                "playModeTestTimeInSeconds": {
                  "description": "total time for unit test execution step",
                  "type": "number"
                },
                "lastBuiltRevision": {
                  "description": "source control commit id for the build",
                  "type": "string"
                },
                "changeset": {
                  "description": "a list of source control changes between this and the last build",
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                },
                "favorited": {
                  "description": "if the build is marked as do not delete or not",
                  "type": "boolean"
                },
                "label": {
                  "description": "description given when a build is favorited",
                  "type": "string"
                },
                "deleted": {
                  "description": "if the build is deleted or not",
                  "type": "boolean"
                },
                "headless": {
                  "description": "if the build was built to run in linux headless mode"
                },
                "credentialsOutdated": {
                  "description": "if a newer credential has been attached to this buildtarget and the build can be re-signed",
                  "type": "boolean"
                },
                "deletedBy": {
                  "description": "email address of the user who deleted this attempt",
                  "type": "string"
                },
                "queuedReason": {
                  "description": "reason the build is currently waiting",
                  "enum": [
                    "targetConcurrency",
                    "cooldown",
                    "buildConcurrency",
                    "waitingForBuildAgent",
                    "evaluating",
                    "sentToBuilder",
                    "notPending"
                  ],
                  "type": "string"
                },
                "cooldownDate": {
                  "type": "string",
                  "description": "time until this build will be reconsidered for building"
                },
                "scmBranch": {
                  "description": "scm branch to be built",
                  "type": "string"
                },
                "unityVersion": {
                  "description": "'latest' or a unity dot version with underscores (ex. '4_6_5')",
                  "type": "string"
                },
                "xcodeVersion": {
                  "description": "'latest' or a supported xcode version (ex. 'xcode7')",
                  "type": "string"
                },
                "auditChanges": {
                  "type": "number"
                },
                "projectVersion": {
                  "properties": {
                    "name": {
                      "description": "automatically generated name for the build",
                      "type": "string"
                    },
                    "filename": {
                      "description": "filename for the primary artifact",
                      "type": "string"
                    },
                    "projectName": {
                      "description": "name of the project",
                      "type": "string"
                    },
                    "platform": {
                      "type": "string",
                      "enum": [
                        "ios",
                        "android",
                        "webplayer",
                        "webgl",
                        "standaloneosxintel",
                        "standaloneosxintel64",
                        "standaloneosxuniversal",
                        "standalonewindows",
                        "standalonewindows64",
                        "standalonelinux",
                        "standalonelinux64",
                        "standalonelinuxuniversal"
                      ]
                    },
                    "size": {
                      "type": "number",
                      "description": "size of the the primary build artifact in bytes"
                    },
                    "created": {
                      "type": "string",
                      "description": "creation date"
                    },
                    "lastMod": {
                      "type": "string",
                      "description": "last modified date"
                    },
                    "bundleId": {
                      "type": "string",
                      "description": "a unique identifier (com.example.name)"
                    },
                    "udids": {
                      "type": "array",
                      "description": "iPhone unique identifiers that are able to install this build",
                      "items": {
                        "type": "string"
                      }
                    },
                    "links": {
                      "description": "links to build artifacts",
                      "type": "object"
                    }
                  }
                },
                "projectName": {
                  "type": "string"
                },
                "projectId": {
                  "type": "string"
                },
                "projectGuid": {
                  "type": "string"
                },
                "orgId": {
                  "type": "string"
                },
                "orgFk": {
                  "type": "string"
                },
                "filetoken": {
                  "type": "string"
                },
                "links": {
                  "type": "object",
                  "properties": {
                    "artifacts": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  },
                  "additionalProperties": {
                    "type": "object",
                    "properties": {
                      "href": {
                        "type": "string"
                      },
                      "method": {
                        "type": "string"
                      },
                      "meta": {
                        "type": "object"
                      }
                    }
                  }
                },
                "buildReport": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "integer"
                    },
                    "warnings": {
                      "type": "integer"
                    }
                  }
                },
                "testResults": {
                  "description": "results from the build's unit tests, if any",
                  "type": "object",
                  "properties": {
                    "unit_test": {
                      "type": "object"
                    },
                    "unit_test_editmode": {
                      "type": "object"
                    },
                    "unit_test_playmode": {
                      "type": "object"
                    }
                  }
                },
                "error": {
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": "{\n    \"build\": 3,\n    \"buildTargetName\": \"android-builder\",\n    \"buildStatus\": \"success\",\n    \"cleanBuild\": \"true\",\n    \"platform\": \"android\",\n    \"workspaceSize\": 284147365,\n    \"created\": \"2015-07-27T21:03:00.000Z\",\n    \"finished\": \"2015-07-27T21:55:02.551Z\",\n    \"checkoutStartTime\": \"2015-07-27T21:54:57.464Z\",\n    \"buildStartTime\": \"2015-07-27T21:03:00.000Z\",\n    \"buildTimeInSeconds\": 53.347359,\n    \"publishStartTime\": \"2015-07-27T21:54:57.000Z\",\n    \"publishTimeInSeconds\": 4.694443,\n    \"totalTimeInSeconds\": 58.041802,\n    \"changeset\": [],\n    \"scmBranch\": \"master\",\n    \"unityVersion\": \"latest\",\n    \"projectVersion\": {\n      \"name\": \"android-builder\",\n      \"platform\": \"android\",\n      \"size\": 17332776,\n      \"created\": \"2015-07-27T21:55:02.497Z\",\n      \"lastMod\": \"2015-07-27T21:55:02.524Z\",\n      \"udids\": []\n    },\n    \"links\": {\n      \"self\": {\n        \"method\": \"get\",\n        \"href\": \"[BASE_PATH]/shares/123f34a\"\n      },\n      \"download\": {\n        \"method\": \"get\",\n        \"href\": \"http://unitycloud-build-user-svc-dev-build.s3.amazonaws.com/unity3d/new-project/android-builder/android-builder.apk?response-content-disposition=attachment%3B%20filename%3Dunity3d%2Fandroid-builder-3-1438039039.apk&response-content-type=application%2Foctet-stream&Expires=1438362634&Signature=I7ny1dMUeX338a6zpDJR2gHJRpM%3D\"\n      }\n    }\n}"
            }
          }
        }
      }
    },
    "/status": {
      "x-swagger-router-controller": "status",
      "get": {
        "tags": [
          "status"
        ],
        "operationId": "getStatus",
        "summary": "Get Cloud Build Status",
        "x-example": [
          {
            "language": "bash",
            "code": "curl\n  -X GET\n  -H \"Content-Type: application/json\"\n  -H \"Authorization: Basic <span class=\"replace-apikey\">[YOUR API KEY]</span>\"\n  [API_URL][BASE_PATH]/status"
          },
          {
            "language": "python",
            "code": "buildsApi = BuildsApi(client)\nstatus = buildsApi.get_status()"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "application/json": "[\n  {\n    \"text\": \"This platform is not actively supported anymore and will be removed soon\",\n    \"priority\": 1,\n    \"platform\": \"webplayer\"\n  },\n  {\n    \"text\": \"<b>Hello everyone!</b> This is a status message! In the real world this would be used to show issues with the server status. Here, it's just used as confirmation of the fact that we display status messages. That's pretty cool. You can remove this in the admin UI if it bothers you.\",\n    \"priority\": 2\n  },\n  {\n    \"text\": \"Hello! This status message is tied to the Personal billing plan.\",\n    \"priority\": 500,\n    \"billingPlan\": \"Personal\"\n  },\n  {\n    \"text\": \"Hello! This status message has a priority of 0 and would only be visible to git users\",\n    \"scmType\": \"git\"\n  },\n  {\n    \"text\": \"Hello! This is an info level status message that won't automatically disappear.\",\n    \"alertType\": \"info\",\n    \"autoClear\": false\n  }\n]"
            },
            "schema": {
              "type": "array",
              "items": {
                "properties": {
                  "text": {
                    "type": "string"
                  },
                  "redirect": {
                    "type": "string"
                  },
                  "priority": {
                    "type": "integer"
                  },
                  "scmType": {
                    "type": "string"
                  },
                  "billingPlan": {
                    "type": "string"
                  },
                  "platform": {
                    "type": "string"
                  },
                  "alertType": {
                    "type": "string"
                  },
                  "autoClear": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}